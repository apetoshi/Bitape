{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/config/web3.ts"],"sourcesContent":["import { createConfig, http } from 'wagmi';\nimport { mainnet, arbitrum } from 'wagmi/chains';\nimport { createWeb3Modal } from '@web3modal/wagmi';\nimport { QueryClient } from '@tanstack/react-query';\n\n// Define ApeChain as a custom chain\nconst apechain = {\n  id: 16350,\n  name: 'ApeChain',\n  network: 'apechain',\n  nativeCurrency: {\n    decimals: 18,\n    name: 'ApeCoin',\n    symbol: 'APE',\n  },\n  rpcUrls: {\n    public: { http: ['https://apechain-mainnet.g.alchemy.com/v2/o5UPoUhml8_h72VaE2QIglR76E8dQg42'] },\n    default: { http: ['https://apechain-mainnet.g.alchemy.com/v2/o5UPoUhml8_h72VaE2QIglR76E8dQg42'] },\n  },\n  blockExplorers: {\n    etherscan: { name: 'ApeScan', url: 'https://apescan.io' },\n    default: { name: 'ApeScan', url: 'https://apescan.io' },\n  },\n};\n\n// BitApe contract addresses\nexport const BITAPE_TOKEN_ADDRESS = '0xd5f2A51440059C5E7B1E1E21634B5f48860A53f3';\nexport const MAIN_CONTRACT_ADDRESS = '0x9281b1D9291e2D1911a400877B5c5e3c85342672';\n\n// 1. Create wagmi config\nexport const config = createConfig({\n  chains: [apechain, mainnet, arbitrum],\n  transports: {\n    [apechain.id]: http(),\n    [mainnet.id]: http(),\n    [arbitrum.id]: http(),\n  },\n});\n\n// 2. Create Web3Modal\nexport const projectId = 'YOUR_WEB3MODAL_PROJECT_ID'; // Replace with your Web3Modal project ID\n\nexport const modal = createWeb3Modal({\n  wagmiConfig: config,\n  projectId,\n  chains: [apechain, mainnet, arbitrum],\n  featuredWalletIds: [\n    'c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96', // MetaMask\n    'ecc4036f814562b41a5268adc86270fba1365471402006302e70169465b7ac18', // Coinbase Wallet\n  ],\n});\n\n// 3. Create QueryClient\nexport const queryClient = new QueryClient();\n\n// 4. BitApe Token ABI (simplified for essential functions)\nexport const BITAPE_TOKEN_ABI = [\n  {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"NotMinter\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"MAX_SUPPLY\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"amtBurned\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"burn\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint8\",\n        \"name\": \"\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"minter\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_minter\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"setMinter\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\n\n// 5. Main Contract ABI (simplified for essential functions)\nexport const MAIN_CONTRACT_ABI = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_bitApe\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"player\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"level\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"price\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"FacilityUpgraded\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"player\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"minerId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"price\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"MinerPurchased\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"player\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"reward\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RewardClaimed\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"bitApe\",\n    \"outputs\": [\n      {\n        \"internalType\": \"contract IBitApe\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"claimReward\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"facilities\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"power\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"level\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"lastClaimBlock\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getStarterMiner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"initialFacilityPrice\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"initialFacilityTotalPrice\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"miners\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"power\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"consumption\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"description\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"image\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_minerId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"purchaseMiner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"_referrer\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"purchaseInitialFacility\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"rewardPerBlock\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalPower\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"upgradeFacility\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 845, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useGameState.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract } from 'wagmi';\nimport { formatEther, parseEther } from 'viem';\nimport { MAIN_CONTRACT_ADDRESS, MAIN_CONTRACT_ABI, BITAPE_TOKEN_ADDRESS, BITAPE_TOKEN_ABI } from '../config/web3';\nimport { useEffect, useState } from 'react';\n\nexport interface GameState {\n  // User state\n  isConnected: boolean;\n  address: string | undefined;\n  \n  // Resources\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n  \n  // Mining stats\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  \n  // Mining rewards\n  minedBit: string;\n  \n  // Facility state\n  hasFacility: boolean;\n  facilityLevel: number;\n  facilityPower: number;\n  \n  // Actions\n  purchaseFacility: (referrer?: string) => Promise<void>;\n  getStarterMiner: () => Promise<void>;\n  claimReward: () => Promise<void>;\n  upgradeFacility: () => Promise<void>;\n  \n  // Loading states\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isClaimingReward: boolean;\n  isUpgradingFacility: boolean;\n}\n\nexport function useGameState(): GameState {\n  const { address, isConnected } = useAccount();\n  \n  // State variables\n  const [apeBalance, setApeBalance] = useState('0');\n  const [bitBalance, setBitBalance] = useState('0');\n  const [minedBit, setMinedBit] = useState('0');\n  const [hasFacility, setHasFacility] = useState(false);\n  const [facilityLevel, setFacilityLevel] = useState(0);\n  const [facilityPower, setFacilityPower] = useState(0);\n  const [spacesLeft, setSpacesLeft] = useState(0);\n  const [gigawattsAvailable, setGigawattsAvailable] = useState(0);\n  const [miningRate, setMiningRate] = useState('0');\n  const [hashRate, setHashRate] = useState('0');\n  const [blocksUntilHalving, setBlocksUntilHalving] = useState('0');\n  const [networkHashRatePercentage, setNetworkHashRatePercentage] = useState('0');\n  const [totalNetworkHashRate, setTotalNetworkHashRate] = useState('0');\n  \n  // Contract read hooks\n  const { data: facilityData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'facilities',\n    args: [address],\n    enabled: isConnected && !!address,\n  });\n  \n  const { data: apeBalanceData } = useReadContract({\n    address: BITAPE_TOKEN_ADDRESS,\n    abi: BITAPE_TOKEN_ABI,\n    functionName: 'balanceOf',\n    args: [address],\n    enabled: isConnected && !!address,\n  });\n  \n  const { data: totalPowerData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'totalPower',\n    enabled: isConnected,\n  });\n  \n  const { data: rewardPerBlockData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'rewardPerBlock',\n    enabled: isConnected,\n  });\n  \n  // Contract write hooks\n  const { writeContractAsync: writeMainContract, isPending: isMainContractPending } = useWriteContract();\n  \n  // Loading states\n  const [isPurchasingFacility, setIsPurchasingFacility] = useState(false);\n  const [isGettingStarterMiner, setIsGettingStarterMiner] = useState(false);\n  const [isClaimingReward, setIsClaimingReward] = useState(false);\n  const [isUpgradingFacility, setIsUpgradingFacility] = useState(false);\n  \n  // Update state based on contract data\n  useEffect(() => {\n    if (facilityData) {\n      const [power, level, lastClaimBlock] = facilityData as [bigint, bigint, bigint];\n      setFacilityPower(Number(power));\n      setFacilityLevel(Number(level));\n      setHasFacility(Number(power) > 0);\n      \n      // Calculate available gigawatts based on facility power\n      setGigawattsAvailable(Number(power) / 1000); // Assuming 1 GW = 1000 power units\n      \n      // Calculate spaces left (placeholder logic)\n      setSpacesLeft(0); // In BitApe, users have one facility\n      \n      // Calculate mining rate if facility exists\n      if (Number(power) > 0 && totalPowerData && rewardPerBlockData) {\n        const playerPower = Number(power);\n        const totalPower = Number(totalPowerData);\n        const rewardPerBlock = Number(rewardPerBlockData);\n        \n        // Calculate mining rate (BIT per day)\n        const blocksPerDay = 7200; // Approximate blocks per day\n        const dailyReward = (playerPower / totalPower) * rewardPerBlock * blocksPerDay;\n        setMiningRate(dailyReward.toFixed(2));\n        \n        // Set hash rate (GH/s)\n        setHashRate((playerPower * 228).toFixed(0)); // Simplified calculation\n        \n        // Network hash rate percentage\n        const percentage = (playerPower / totalPower) * 100;\n        setNetworkHashRatePercentage(percentage.toFixed(6));\n        \n        // Total network hash rate\n        setTotalNetworkHashRate((totalPower * 228).toFixed(0));\n        \n        // Blocks until halving (placeholder)\n        setBlocksUntilHalving('3,284,172');\n        \n        // Calculate mined BIT (placeholder)\n        setMinedBit('0.5107');\n      }\n    }\n  }, [facilityData, totalPowerData, rewardPerBlockData]);\n  \n  // Update APE balance\n  useEffect(() => {\n    if (isConnected && address) {\n      // For demo purposes, set a placeholder APE balance\n      setApeBalance('0.00818');\n    }\n  }, [isConnected, address]);\n  \n  // Update BIT balance\n  useEffect(() => {\n    if (apeBalanceData) {\n      setBitBalance(formatEther(apeBalanceData as bigint));\n    } else {\n      // For demo purposes, set a placeholder BIT balance\n      setBitBalance('26.5474');\n    }\n  }, [apeBalanceData]);\n  \n  // Action functions\n  const purchaseFacility = async (referrer?: string) => {\n    if (!isConnected || !address) return;\n    \n    try {\n      setIsPurchasingFacility(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [referrer || '0x0000000000000000000000000000000000000000'],\n        value: parseEther('10.003'), // Initial facility price + fees\n      });\n      \n      // Refresh data after purchase\n      // This would typically be handled by listening for events\n      \n    } catch (error) {\n      console.error('Error purchasing facility:', error);\n    } finally {\n      setIsPurchasingFacility(false);\n    }\n  };\n  \n  const getStarterMiner = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsGettingStarterMiner(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'getStarterMiner',\n      });\n      \n      // Refresh data after getting starter miner\n      \n    } catch (error) {\n      console.error('Error getting starter miner:', error);\n    } finally {\n      setIsGettingStarterMiner(false);\n    }\n  };\n  \n  const claimReward = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsClaimingReward(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'claimReward',\n      });\n      \n      // Reset mined BIT after claiming\n      setMinedBit('0');\n      \n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    } finally {\n      setIsClaimingReward(false);\n    }\n  };\n  \n  const upgradeFacility = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsUpgradingFacility(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'upgradeFacility',\n      });\n      \n      // Refresh facility data after upgrade\n      \n    } catch (error) {\n      console.error('Error upgrading facility:', error);\n    } finally {\n      setIsUpgradingFacility(false);\n    }\n  };\n  \n  return {\n    isConnected,\n    address,\n    apeBalance,\n    bitBalance,\n    spacesLeft,\n    gigawattsAvailable,\n    miningRate,\n    hashRate,\n    blocksUntilHalving,\n    networkHashRatePercentage,\n    totalNetworkHashRate,\n    minedBit,\n    hasFacility,\n    facilityLevel,\n    facilityPower,\n    purchaseFacility,\n    getStarterMiner,\n    claimReward,\n    upgradeFacility,\n    isPurchasingFacility,\n    isGettingStarterMiner,\n    isClaimingReward,\n    isUpgradingFacility,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1075, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ConnectWalletButton.tsx"],"sourcesContent":["import React from 'react';\nimport { useWeb3Modal } from '@web3modal/wagmi/react';\nimport { useAccount, useDisconnect } from 'wagmi';\n\ninterface ConnectWalletButtonProps {\n  className?: string;\n}\n\nconst ConnectWalletButton: React.FC<ConnectWalletButtonProps> = ({ className }) => {\n  const { open } = useWeb3Modal();\n  const { isConnected } = useAccount();\n  const { disconnect } = useDisconnect();\n\n  const handleClick = () => {\n    if (isConnected) {\n      disconnect();\n    } else {\n      open();\n    }\n  };\n\n  return (\n    <button \n      onClick={handleClick} \n      className={`pixel-button ${className}`}\n    >\n      {isConnected ? 'PROFILE' : 'CONNECT WALLET'}\n    </button>\n  );\n};\n\nexport default ConnectWalletButton;\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;;AAMA,MAAM,sBAA0D,CAAC,EAAE,SAAS,EAAE;IAC5E,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,wLAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IACjC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD;IAEnC,MAAM,cAAc;QAClB,IAAI,aAAa;YACf;QACF,OAAO;YACL;QACF;IACF;IAEA,qBACE,8OAAC;QACC,SAAS;QACT,WAAW,CAAC,aAAa,EAAE,WAAW;kBAErC,cAAc,YAAY;;;;;;AAGjC;uCAEe","debugId":null}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/Header.tsx"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport ConnectWalletButton from './ConnectWalletButton';\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"bg-royal-blue-dark py-4 px-6 flex justify-between items-center\">\n      <div className=\"flex items-center\">\n        {/* Logo would be replaced with actual BitApe logo */}\n        <div className=\"mr-2 text-banana-yellow font-bold text-2xl\">\n          <span className=\"pixel-text\">bitape</span>\n        </div>\n        \n        <nav className=\"hidden md:flex ml-8\">\n          <Link href=\"/about\" className=\"pixel-text text-white mx-3 hover:text-banana-yellow\">\n            ABOUT\n          </Link>\n          <Link href=\"/trade\" className=\"pixel-text text-white mx-3 hover:text-banana-yellow\">\n            TRADE $BIT\n          </Link>\n          <Link href=\"/leaderboard\" className=\"pixel-text text-white mx-3 hover:text-banana-yellow\">\n            LEADERBOARD\n          </Link>\n        </nav>\n      </div>\n      \n      <div className=\"flex items-center\">\n        <Link href=\"/announcements\" className=\"pixel-button mr-2 hidden md:block\">\n          ANNOUNCEMENTS\n        </Link>\n        <Link href=\"/refer\" className=\"pixel-button mr-2 hidden md:block\">\n          REFER A FRIEND\n        </Link>\n        <ConnectWalletButton />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;AACA;AAEA;;;;AAEA,MAAM,SAAmB;IACvB,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,WAAU;sCAAa;;;;;;;;;;;kCAG/B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAS,WAAU;0CAAsD;;;;;;0CAGpF,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAS,WAAU;0CAAsD;;;;;;0CAGpF,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAe,WAAU;0CAAsD;;;;;;;;;;;;;;;;;;0BAM9F,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAiB,WAAU;kCAAoC;;;;;;kCAG1E,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAS,WAAU;kCAAoC;;;;;;kCAGlE,8OAAC,yIAAA,CAAA,UAAmB;;;;;;;;;;;;;;;;;AAI5B;uCAEe","debugId":null}},
    {"offset": {"line": 1233, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ResourcesPanel.tsx"],"sourcesContent":["import React from 'react';\nimport Image from 'next/image';\n\ninterface ResourcesPanelProps {\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n}\n\nconst ResourcesPanel: React.FC<ResourcesPanelProps> = ({\n  apeBalance,\n  bitBalance,\n  spacesLeft,\n  gigawattsAvailable\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <h2 className=\"pixel-text text-banana-yellow mb-4\">RESOURCES</h2>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">💎</span>\n        <span className=\"pixel-text\">{apeBalance} APE</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">🪙</span>\n        <span className=\"pixel-text\">{bitBalance} BIT</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">🏠</span>\n        <span className=\"pixel-text\">{spacesLeft} SPACES LEFT</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">⚡</span>\n        <span className=\"pixel-text\">{gigawattsAvailable} GIGAWATTS AVAILABLE</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ResourcesPanel;\n"],"names":[],"mappings":";;;;;AAUA,MAAM,iBAAgD,CAAC,EACrD,UAAU,EACV,UAAU,EACV,UAAU,EACV,kBAAkB,EACnB;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqC;;;;;;0BACnD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,8OAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,8OAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,8OAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,8OAAC;wBAAK,WAAU;;4BAAc;4BAAmB;;;;;;;;;;;;;;;;;;;AAIzD;uCAEe","debugId":null}},
    {"offset": {"line": 1376, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/StatsDisplay.tsx"],"sourcesContent":["import React from 'react';\n\ninterface StatsDisplayProps {\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  isSimpleView?: boolean;\n}\n\nconst StatsDisplay: React.FC<StatsDisplayProps> = ({\n  miningRate,\n  hashRate,\n  blocksUntilHalving,\n  networkHashRatePercentage,\n  totalNetworkHashRate,\n  isSimpleView = true\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"pixel-text text-banana-yellow\">STATS</h2>\n        <div className=\"flex\">\n          <button \n            className={`tab-button text-xs ${isSimpleView ? 'active' : ''}`}\n          >\n            SIMPLE\n          </button>\n          <button \n            className={`tab-button text-xs ${!isSimpleView ? 'active' : ''}`}\n          >\n            PRO\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"text-sm\">\n        <p className=\"mb-2 pixel-text\">- YOU ARE MINING <span className=\"text-banana-yellow\">{miningRate} BITAPE</span> A DAY</p>\n        <p className=\"mb-2 pixel-text\">- YOUR HASH RATE IS <span className=\"text-banana-yellow\">{hashRate} GH/S</span></p>\n        <p className=\"mb-2 pixel-text\">- <span className=\"text-banana-yellow\">{blocksUntilHalving} BLOCKS</span> UNTIL NEXT HALVENING</p>\n        <p className=\"mb-2 pixel-text\">- YOU HAVE <span className=\"text-banana-yellow\">{networkHashRatePercentage}%</span> OF THE TOTAL NETWORK HASH RATE (<span className=\"text-banana-yellow\">{totalNetworkHashRate} GH/S</span>)</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatsDisplay;\n"],"names":[],"mappings":";;;;;AAWA,MAAM,eAA4C,CAAC,EACjD,UAAU,EACV,QAAQ,EACR,kBAAkB,EAClB,yBAAyB,EACzB,oBAAoB,EACpB,eAAe,IAAI,EACpB;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,WAAW,CAAC,mBAAmB,EAAE,eAAe,WAAW,IAAI;0CAChE;;;;;;0CAGD,8OAAC;gCACC,WAAW,CAAC,mBAAmB,EAAE,CAAC,eAAe,WAAW,IAAI;0CACjE;;;;;;;;;;;;;;;;;;0BAML,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;;4BAAkB;0CAAiB,8OAAC;gCAAK,WAAU;;oCAAsB;oCAAW;;;;;;;4BAAc;;;;;;;kCAC/G,8OAAC;wBAAE,WAAU;;4BAAkB;0CAAoB,8OAAC;gCAAK,WAAU;;oCAAsB;oCAAS;;;;;;;;;;;;;kCAClG,8OAAC;wBAAE,WAAU;;4BAAkB;0CAAE,8OAAC;gCAAK,WAAU;;oCAAsB;oCAAmB;;;;;;;4BAAc;;;;;;;kCACxG,8OAAC;wBAAE,WAAU;;4BAAkB;0CAAW,8OAAC;gCAAK,WAAU;;oCAAsB;oCAA0B;;;;;;;4BAAQ;0CAAiC,8OAAC;gCAAK,WAAU;;oCAAsB;oCAAqB;;;;;;;4BAAY;;;;;;;;;;;;;;;;;;;AAIlO;uCAEe","debugId":null}},
    {"offset": {"line": 1549, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/MiningClaimSection.tsx"],"sourcesContent":["import React from 'react';\n\ninterface MiningClaimSectionProps {\n  minedBit: string;\n  onClaimReward: () => Promise<void>;\n  isClaimingReward: boolean;\n}\n\nconst MiningClaimSection: React.FC<MiningClaimSectionProps> = ({\n  minedBit,\n  onClaimReward,\n  isClaimingReward\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <div className=\"flex flex-col items-center justify-center py-4\">\n        <p className=\"pixel-text mb-4\">YOU HAVE MINED <span className=\"text-banana-yellow\">{minedBit} $BIT</span></p>\n        <button \n          className=\"claim-button\"\n          onClick={onClaimReward}\n          disabled={isClaimingReward || parseFloat(minedBit) <= 0}\n        >\n          {isClaimingReward ? 'CLAIMING...' : 'CLAIM MINED $BIT'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MiningClaimSection;\n"],"names":[],"mappings":";;;;;AAQA,MAAM,qBAAwD,CAAC,EAC7D,QAAQ,EACR,aAAa,EACb,gBAAgB,EACjB;IACC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAE,WAAU;;wBAAkB;sCAAe,8OAAC;4BAAK,WAAU;;gCAAsB;gCAAS;;;;;;;;;;;;;8BAC7F,8OAAC;oBACC,WAAU;oBACV,SAAS;oBACT,UAAU,oBAAoB,WAAW,aAAa;8BAErD,mBAAmB,gBAAgB;;;;;;;;;;;;;;;;;AAK9C;uCAEe","debugId":null}},
    {"offset": {"line": 1610, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/RoomVisualization.tsx"],"sourcesContent":["import React from 'react';\n\ninterface RoomVisualizationProps {\n  hasFacility: boolean;\n  onPurchaseFacility: () => Promise<void>;\n  onGetStarterMiner: () => Promise<void>;\n  onUpgradeFacility: () => Promise<void>;\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isUpgradingFacility: boolean;\n}\n\nconst RoomVisualization: React.FC<RoomVisualizationProps> = ({\n  hasFacility,\n  onPurchaseFacility,\n  onGetStarterMiner,\n  onUpgradeFacility,\n  isPurchasingFacility,\n  isGettingStarterMiner,\n  isUpgradingFacility\n}) => {\n  if (!hasFacility) {\n    return (\n      <div className=\"room-container flex flex-col items-center justify-center\">\n        <h2 className=\"pixel-text text-2xl mb-8\">YOU DONT HAVE A SPACE TO MINE!</h2>\n        <button \n          className=\"pixel-button\"\n          onClick={onPurchaseFacility}\n          disabled={isPurchasingFacility}\n        >\n          {isPurchasingFacility ? 'PURCHASING...' : 'BUY FACILITY'}\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"room-container relative\">\n      {/* This would be replaced with actual room visualization with miners */}\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <div className=\"grid grid-cols-3 gap-4 p-4\">\n          {/* Placeholder for miners */}\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Room furniture (simplified) */}\n      <div className=\"absolute bottom-4 right-4 w-16 h-24 bg-royal-blue-light border border-banana-yellow\"></div>\n      <div className=\"absolute top-4 right-4 w-24 h-16 bg-royal-blue-light border border-banana-yellow\"></div>\n      \n      {/* Control buttons */}\n      <div className=\"absolute bottom-4 left-4 flex space-x-2\">\n        <button \n          className=\"pixel-button text-xs\"\n          onClick={onGetStarterMiner}\n          disabled={isGettingStarterMiner}\n        >\n          GRID\n        </button>\n        <button \n          className=\"pixel-button text-xs\"\n          onClick={onUpgradeFacility}\n          disabled={isUpgradingFacility}\n        >\n          UPGRADE\n        </button>\n      </div>\n      \n      {/* BIGBOY 9000 label */}\n      <div className=\"absolute bottom-4 right-4\">\n        <span className=\"pixel-text text-banana-yellow text-xs\">BITBOY 9000</span>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomVisualization;\n"],"names":[],"mappings":";;;;;AAYA,MAAM,oBAAsD,CAAC,EAC3D,WAAW,EACX,kBAAkB,EAClB,iBAAiB,EACjB,iBAAiB,EACjB,oBAAoB,EACpB,qBAAqB,EACrB,mBAAmB,EACpB;IACC,IAAI,CAAC,aAAa;QAChB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA2B;;;;;;8BACzC,8OAAC;oBACC,WAAU;oBACV,SAAS;oBACT,UAAU;8BAET,uBAAuB,kBAAkB;;;;;;;;;;;;IAIlD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;0BAMrB,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BAGf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAU;wBACV,SAAS;wBACT,UAAU;kCACX;;;;;;kCAGD,8OAAC;wBACC,WAAU;wBACV,SAAS;wBACT,UAAU;kCACX;;;;;;;;;;;;0BAMH,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;8BAAwC;;;;;;;;;;;;;;;;;AAIhE;uCAEe","debugId":null}},
    {"offset": {"line": 1778, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/GameLayout.tsx"],"sourcesContent":["import React from 'react';\nimport { useGameState } from '../hooks/useGameState';\nimport Header from '../components/Header';\nimport ResourcesPanel from '../components/ResourcesPanel';\nimport StatsDisplay from '../components/StatsDisplay';\nimport MiningClaimSection from '../components/MiningClaimSection';\nimport RoomVisualization from '../components/RoomVisualization';\n\nconst GameLayout: React.FC = () => {\n  const gameState = useGameState();\n  \n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      \n      <main className=\"flex-grow p-4 md:p-6 lg:p-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 max-w-7xl mx-auto\">\n          {/* Left column */}\n          <div className=\"flex flex-col space-y-6\">\n            <div className=\"flex space-x-2\">\n              <button className=\"tab-button active\">RESOURCES</button>\n              <button className=\"tab-button\">SPACE</button>\n              <button className=\"tab-button\">SELECTED TILE</button>\n            </div>\n            \n            <ResourcesPanel \n              apeBalance={gameState.apeBalance}\n              bitBalance={gameState.bitBalance}\n              spacesLeft={gameState.spacesLeft}\n              gigawattsAvailable={gameState.gigawattsAvailable}\n            />\n            \n            <StatsDisplay \n              miningRate={gameState.miningRate}\n              hashRate={gameState.hashRate}\n              blocksUntilHalving={gameState.blocksUntilHalving}\n              networkHashRatePercentage={gameState.networkHashRatePercentage}\n              totalNetworkHashRate={gameState.totalNetworkHashRate}\n            />\n            \n            <MiningClaimSection \n              minedBit={gameState.minedBit}\n              onClaimReward={gameState.claimReward}\n              isClaimingReward={gameState.isClaimingReward}\n            />\n          </div>\n          \n          {/* Right column */}\n          <div className=\"flex flex-col\">\n            <RoomVisualization \n              hasFacility={gameState.hasFacility}\n              onPurchaseFacility={() => gameState.purchaseFacility()}\n              onGetStarterMiner={gameState.getStarterMiner}\n              onUpgradeFacility={gameState.upgradeFacility}\n              isPurchasingFacility={gameState.isPurchasingFacility}\n              isGettingStarterMiner={gameState.isGettingStarterMiner}\n              isUpgradingFacility={gameState.isUpgradingFacility}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default GameLayout;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,aAAuB;IAC3B,MAAM,YAAY,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IAE7B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4HAAA,CAAA,UAAM;;;;;0BAEP,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAO,WAAU;sDAAoB;;;;;;sDACtC,8OAAC;4CAAO,WAAU;sDAAa;;;;;;sDAC/B,8OAAC;4CAAO,WAAU;sDAAa;;;;;;;;;;;;8CAGjC,8OAAC,oIAAA,CAAA,UAAc;oCACb,YAAY,UAAU,UAAU;oCAChC,YAAY,UAAU,UAAU;oCAChC,YAAY,UAAU,UAAU;oCAChC,oBAAoB,UAAU,kBAAkB;;;;;;8CAGlD,8OAAC,kIAAA,CAAA,UAAY;oCACX,YAAY,UAAU,UAAU;oCAChC,UAAU,UAAU,QAAQ;oCAC5B,oBAAoB,UAAU,kBAAkB;oCAChD,2BAA2B,UAAU,yBAAyB;oCAC9D,sBAAsB,UAAU,oBAAoB;;;;;;8CAGtD,8OAAC,wIAAA,CAAA,UAAkB;oCACjB,UAAU,UAAU,QAAQ;oCAC5B,eAAe,UAAU,WAAW;oCACpC,kBAAkB,UAAU,gBAAgB;;;;;;;;;;;;sCAKhD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,uIAAA,CAAA,UAAiB;gCAChB,aAAa,UAAU,WAAW;gCAClC,oBAAoB,IAAM,UAAU,gBAAgB;gCACpD,mBAAmB,UAAU,eAAe;gCAC5C,mBAAmB,UAAU,eAAe;gCAC5C,sBAAsB,UAAU,oBAAoB;gCACpD,uBAAuB,UAAU,qBAAqB;gCACtD,qBAAqB,UAAU,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhE;uCAEe","debugId":null}},
    {"offset": {"line": 1927, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/NetworkSwitcher.tsx"],"sourcesContent":["import React from 'react';\nimport { useAccount, useChainId, useSwitchChain } from 'wagmi';\n\ninterface NetworkSwitcherProps {\n  className?: string;\n}\n\nconst NetworkSwitcher: React.FC<NetworkSwitcherProps> = ({ className }) => {\n  const chainId = useChainId();\n  const { switchChain } = useSwitchChain();\n  const { isConnected } = useAccount();\n\n  // ApeChain ID\n  const apeChainId = 16350;\n\n  // Check if user is on ApeChain\n  const isOnApeChain = chainId === apeChainId;\n\n  if (!isConnected) {\n    return null;\n  }\n\n  return (\n    <div className={`${className}`}>\n      {!isOnApeChain && (\n        <div className=\"bg-red-800 text-white p-2 rounded pixel-border\">\n          <p className=\"pixel-text text-xs mb-2\">You are not connected to ApeChain!</p>\n          <button\n            onClick={() => switchChain?.({ chainId: apeChainId })}\n            className=\"pixel-button text-xs\"\n          >\n            Switch to ApeChain\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NetworkSwitcher;\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;;;AAMA,MAAM,kBAAkD,CAAC,EAAE,SAAS,EAAE;IACpE,MAAM,UAAU,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IACzB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD;IACrC,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAEjC,cAAc;IACd,MAAM,aAAa;IAEnB,+BAA+B;IAC/B,MAAM,eAAe,YAAY;IAEjC,IAAI,CAAC,aAAa;QAChB,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW,GAAG,WAAW;kBAC3B,CAAC,8BACA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAE,WAAU;8BAA0B;;;;;;8BACvC,8OAAC;oBACC,SAAS,IAAM,cAAc;4BAAE,SAAS;wBAAW;oBACnD,WAAU;8BACX;;;;;;;;;;;;;;;;;AAOX;uCAEe","debugId":null}},
    {"offset": {"line": 1990, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/AccountModal.tsx"],"sourcesContent":["import React from 'react';\nimport { useAccount } from 'wagmi';\nimport { useWeb3Modal } from '@web3modal/wagmi/react';\n\ninterface AccountModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  address: string;\n  apeBalance: string;\n  bitBalance: string;\n}\n\nconst AccountModal: React.FC<AccountModalProps> = ({\n  isOpen,\n  onClose,\n  address,\n  apeBalance,\n  bitBalance\n}) => {\n  const { disconnect } = useAccount();\n  \n  if (!isOpen) return null;\n  \n  // Format address for display (truncate middle)\n  const displayAddress = `${address.substring(0, 10)}...${address.substring(address.length - 8)}`;\n  \n  const handleDisconnect = () => {\n    disconnect();\n    onClose();\n  };\n  \n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">ACCOUNT</h2>\n          <button className=\"modal-close\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"bg-royal-blue-dark p-4 mb-4\">\n          <h3 className=\"pixel-text text-white mb-4\">YOUR ACCOUNT INFORMATION AND BALANCES</h3>\n          \n          <div className=\"mb-6\">\n            <p className=\"pixel-text text-sm mb-2\">WALLET ADDRESS</p>\n            <div className=\"flex justify-between items-center bg-royal-blue p-2\">\n              <span className=\"pixel-text text-sm\">{displayAddress}</span>\n              <button \n                className=\"pixel-button text-xs\"\n                onClick={() => navigator.clipboard.writeText(address)}\n              >\n                COPY\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"mb-2\">\n            <p className=\"pixel-text text-sm\">APE BALANCE</p>\n            <p className=\"pixel-text text-banana-yellow\">{apeBalance} APE</p>\n          </div>\n          \n          <div className=\"mb-6\">\n            <p className=\"pixel-text text-sm\">BIT BALANCE</p>\n            <p className=\"pixel-text text-banana-yellow\">{bitBalance} BIT</p>\n          </div>\n          \n          <div className=\"bg-royal-blue p-4 mb-4\">\n            <p className=\"pixel-text text-sm mb-2\">NEED TO BRIDGE APE TO APECHAIN?</p>\n            <button className=\"pixel-button w-full flex justify-center items-center\">\n              BRIDGE APE <span className=\"ml-2\">→</span>\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"flex justify-between\">\n          <button className=\"pixel-button\" onClick={onClose}>\n            CLOSE\n          </button>\n          <button className=\"bg-red-600 text-white px-4 py-2 rounded\" onClick={handleDisconnect}>\n            DISCONNECT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountModal;\n"],"names":[],"mappings":";;;;AACA;;;AAWA,MAAM,eAA4C,CAAC,EACjD,MAAM,EACN,OAAO,EACP,OAAO,EACP,UAAU,EACV,UAAU,EACX;IACC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAEhC,IAAI,CAAC,QAAQ,OAAO;IAEpB,+CAA+C;IAC/C,MAAM,iBAAiB,GAAG,QAAQ,SAAS,CAAC,GAAG,IAAI,GAAG,EAAE,QAAQ,SAAS,CAAC,QAAQ,MAAM,GAAG,IAAI;IAE/F,MAAM,mBAAmB;QACvB;QACA;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAc;;;;;;sCAC5B,8OAAC;4BAAO,WAAU;4BAAc,SAAS;sCAAS;;;;;;;;;;;;8BAGpD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAE3C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA0B;;;;;;8CACvC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAsB;;;;;;sDACtC,8OAAC;4CACC,WAAU;4CACV,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;sDAC9C;;;;;;;;;;;;;;;;;;sCAML,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;8CAClC,8OAAC;oCAAE,WAAU;;wCAAiC;wCAAW;;;;;;;;;;;;;sCAG3D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;8CAClC,8OAAC;oCAAE,WAAU;;wCAAiC;wCAAW;;;;;;;;;;;;;sCAG3D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA0B;;;;;;8CACvC,8OAAC;oCAAO,WAAU;;wCAAuD;sDAC5D,8OAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;8BAKxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAO,WAAU;4BAAe,SAAS;sCAAS;;;;;;sCAGnD,8OAAC;4BAAO,WAAU;4BAA0C,SAAS;sCAAkB;;;;;;;;;;;;;;;;;;;;;;;AAOjG;uCAEe","debugId":null}},
    {"offset": {"line": 2234, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport GameLayout from '../components/GameLayout';\nimport NetworkSwitcher from '../components/NetworkSwitcher';\nimport { useAccount } from 'wagmi';\nimport { useState } from 'react';\nimport AccountModal from '../components/AccountModal';\nimport { useGameState } from '../hooks/useGameState';\n\nexport default function Home() {\n  const { isConnected, address } = useAccount();\n  const gameState = useGameState();\n  const [isAccountModalOpen, setIsAccountModalOpen] = useState(false);\n  \n  return (\n    <div className=\"relative\">\n      <NetworkSwitcher className=\"absolute top-20 right-4 z-10\" />\n      <GameLayout />\n      \n      {isConnected && address && (\n        <AccountModal \n          isOpen={isAccountModalOpen}\n          onClose={() => setIsAccountModalOpen(false)}\n          address={address}\n          apeBalance={gameState.apeBalance}\n          bitBalance={gameState.bitBalance}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAC1C,MAAM,YAAY,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IAC7B,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,qIAAA,CAAA,UAAe;gBAAC,WAAU;;;;;;0BAC3B,8OAAC,gIAAA,CAAA,UAAU;;;;;YAEV,eAAe,yBACd,8OAAC,kIAAA,CAAA,UAAY;gBACX,QAAQ;gBACR,SAAS,IAAM,sBAAsB;gBACrC,SAAS;gBACT,YAAY,UAAU,UAAU;gBAChC,YAAY,UAAU,UAAU;;;;;;;;;;;;AAK1C","debugId":null}}]
}