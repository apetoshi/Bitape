{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useGameState.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract } from 'wagmi';\nimport { formatEther, parseEther } from 'viem';\nimport { MAIN_CONTRACT_ADDRESS, MAIN_CONTRACT_ABI, BITAPE_TOKEN_ADDRESS, BITAPE_TOKEN_ABI } from '../config/web3';\nimport { useEffect, useState } from 'react';\n\nexport interface GameState {\n  // User state\n  isConnected: boolean;\n  address: string | undefined;\n  \n  // Resources\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n  \n  // Mining stats\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  \n  // Mining rewards\n  minedBit: string;\n  \n  // Facility state\n  hasFacility: boolean;\n  facilityLevel: number;\n  facilityPower: number;\n  \n  // Actions\n  purchaseFacility: (referrer?: string) => Promise<void>;\n  getStarterMiner: () => Promise<void>;\n  claimReward: () => Promise<void>;\n  upgradeFacility: () => Promise<void>;\n  \n  // Loading states\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isClaimingReward: boolean;\n  isUpgradingFacility: boolean;\n}\n\nexport function useGameState(): GameState {\n  const { address, isConnected } = useAccount();\n  \n  // State variables\n  const [apeBalance, setApeBalance] = useState('0');\n  const [bitBalance, setBitBalance] = useState('0');\n  const [minedBit, setMinedBit] = useState('0');\n  const [hasFacility, setHasFacility] = useState(false);\n  const [facilityLevel, setFacilityLevel] = useState(0);\n  const [facilityPower, setFacilityPower] = useState(0);\n  const [spacesLeft, setSpacesLeft] = useState(0);\n  const [gigawattsAvailable, setGigawattsAvailable] = useState(0);\n  const [miningRate, setMiningRate] = useState('0');\n  const [hashRate, setHashRate] = useState('0');\n  const [blocksUntilHalving, setBlocksUntilHalving] = useState('0');\n  const [networkHashRatePercentage, setNetworkHashRatePercentage] = useState('0');\n  const [totalNetworkHashRate, setTotalNetworkHashRate] = useState('0');\n  \n  // Contract read hooks\n  const { data: facilityData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'facilities',\n    args: [address],\n    enabled: isConnected && !!address,\n  });\n  \n  const { data: apeBalanceData } = useReadContract({\n    address: BITAPE_TOKEN_ADDRESS,\n    abi: BITAPE_TOKEN_ABI,\n    functionName: 'balanceOf',\n    args: [address],\n    enabled: isConnected && !!address,\n  });\n  \n  const { data: totalPowerData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'totalPower',\n    enabled: isConnected,\n  });\n  \n  const { data: rewardPerBlockData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'rewardPerBlock',\n    enabled: isConnected,\n  });\n  \n  // Contract write hooks\n  const { writeContractAsync: writeMainContract, isPending: isMainContractPending } = useWriteContract();\n  \n  // Loading states\n  const [isPurchasingFacility, setIsPurchasingFacility] = useState(false);\n  const [isGettingStarterMiner, setIsGettingStarterMiner] = useState(false);\n  const [isClaimingReward, setIsClaimingReward] = useState(false);\n  const [isUpgradingFacility, setIsUpgradingFacility] = useState(false);\n  \n  // Update state based on contract data\n  useEffect(() => {\n    if (facilityData) {\n      const [power, level, lastClaimBlock] = facilityData as [bigint, bigint, bigint];\n      setFacilityPower(Number(power));\n      setFacilityLevel(Number(level));\n      setHasFacility(Number(power) > 0);\n      \n      // Calculate available gigawatts based on facility power\n      setGigawattsAvailable(Number(power) / 1000); // Assuming 1 GW = 1000 power units\n      \n      // Calculate spaces left (placeholder logic)\n      setSpacesLeft(0); // In BitApe, users have one facility\n      \n      // Calculate mining rate if facility exists\n      if (Number(power) > 0 && totalPowerData && rewardPerBlockData) {\n        const playerPower = Number(power);\n        const totalPower = Number(totalPowerData);\n        const rewardPerBlock = Number(rewardPerBlockData);\n        \n        // Calculate mining rate (BIT per day)\n        const blocksPerDay = 7200; // Approximate blocks per day\n        const dailyReward = (playerPower / totalPower) * rewardPerBlock * blocksPerDay;\n        setMiningRate(dailyReward.toFixed(2));\n        \n        // Set hash rate (GH/s)\n        setHashRate((playerPower * 228).toFixed(0)); // Simplified calculation\n        \n        // Network hash rate percentage\n        const percentage = (playerPower / totalPower) * 100;\n        setNetworkHashRatePercentage(percentage.toFixed(6));\n        \n        // Total network hash rate\n        setTotalNetworkHashRate((totalPower * 228).toFixed(0));\n        \n        // Blocks until halving (placeholder)\n        setBlocksUntilHalving('3,284,172');\n        \n        // Calculate mined BIT (placeholder)\n        setMinedBit('0.5107');\n      }\n    }\n  }, [facilityData, totalPowerData, rewardPerBlockData]);\n  \n  // Update APE balance\n  useEffect(() => {\n    if (isConnected && address) {\n      // For demo purposes, set a placeholder APE balance\n      setApeBalance('0.00818');\n    }\n  }, [isConnected, address]);\n  \n  // Update BIT balance\n  useEffect(() => {\n    if (apeBalanceData) {\n      setBitBalance(formatEther(apeBalanceData as bigint));\n    } else {\n      // For demo purposes, set a placeholder BIT balance\n      setBitBalance('26.5474');\n    }\n  }, [apeBalanceData]);\n  \n  // Action functions\n  const purchaseFacility = async (referrer?: string) => {\n    if (!isConnected || !address) return;\n    \n    try {\n      setIsPurchasingFacility(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [referrer || '0x0000000000000000000000000000000000000000'],\n        value: parseEther('10.003'), // Initial facility price + fees\n      });\n      \n      // Refresh data after purchase\n      // This would typically be handled by listening for events\n      \n    } catch (error) {\n      console.error('Error purchasing facility:', error);\n    } finally {\n      setIsPurchasingFacility(false);\n    }\n  };\n  \n  const getStarterMiner = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsGettingStarterMiner(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'getStarterMiner',\n      });\n      \n      // Refresh data after getting starter miner\n      \n    } catch (error) {\n      console.error('Error getting starter miner:', error);\n    } finally {\n      setIsGettingStarterMiner(false);\n    }\n  };\n  \n  const claimReward = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsClaimingReward(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'claimReward',\n      });\n      \n      // Reset mined BIT after claiming\n      setMinedBit('0');\n      \n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    } finally {\n      setIsClaimingReward(false);\n    }\n  };\n  \n  const upgradeFacility = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsUpgradingFacility(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'upgradeFacility',\n      });\n      \n      // Refresh facility data after upgrade\n      \n    } catch (error) {\n      console.error('Error upgrading facility:', error);\n    } finally {\n      setIsUpgradingFacility(false);\n    }\n  };\n  \n  return {\n    isConnected,\n    address,\n    apeBalance,\n    bitBalance,\n    spacesLeft,\n    gigawattsAvailable,\n    miningRate,\n    hashRate,\n    blocksUntilHalving,\n    networkHashRatePercentage,\n    totalNetworkHashRate,\n    minedBit,\n    hasFacility,\n    facilityLevel,\n    facilityPower,\n    purchaseFacility,\n    getStarterMiner,\n    claimReward,\n    upgradeFacility,\n    isPurchasingFacility,\n    isGettingStarterMiner,\n    isClaimingReward,\n    isUpgradingFacility,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;AAyCO,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE1C,kBAAkB;IAClB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,2BAA2B,6BAA6B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3E,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjE,sBAAsB;IACtB,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE;QAC7C,SAAS,qHAAA,CAAA,wBAAqB;QAC9B,KAAK,qHAAA,CAAA,oBAAiB;QACtB,cAAc;QACd,MAAM;YAAC;SAAQ;QACf,SAAS,eAAe,CAAC,CAAC;IAC5B;IAEA,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE;QAC/C,SAAS,qHAAA,CAAA,uBAAoB;QAC7B,KAAK,qHAAA,CAAA,mBAAgB;QACrB,cAAc;QACd,MAAM;YAAC;SAAQ;QACf,SAAS,eAAe,CAAC,CAAC;IAC5B;IAEA,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE;QAC/C,SAAS,qHAAA,CAAA,wBAAqB;QAC9B,KAAK,qHAAA,CAAA,oBAAiB;QACtB,cAAc;QACd,SAAS;IACX;IAEA,MAAM,EAAE,MAAM,kBAAkB,EAAE,GAAG,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,SAAS,qHAAA,CAAA,wBAAqB;QAC9B,KAAK,qHAAA,CAAA,oBAAiB;QACtB,cAAc;QACd,SAAS;IACX;IAEA,uBAAuB;IACvB,MAAM,EAAE,oBAAoB,iBAAiB,EAAE,WAAW,qBAAqB,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,mBAAgB,AAAD;IAEnG,iBAAiB;IACjB,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/D,sCAAsC;IACtC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB,MAAM,CAAC,OAAO,OAAO,eAAe,GAAG;YACvC,iBAAiB,OAAO;YACxB,iBAAiB,OAAO;YACxB,eAAe,OAAO,SAAS;YAE/B,wDAAwD;YACxD,sBAAsB,OAAO,SAAS,OAAO,mCAAmC;YAEhF,4CAA4C;YAC5C,cAAc,IAAI,qCAAqC;YAEvD,2CAA2C;YAC3C,IAAI,OAAO,SAAS,KAAK,kBAAkB,oBAAoB;gBAC7D,MAAM,cAAc,OAAO;gBAC3B,MAAM,aAAa,OAAO;gBAC1B,MAAM,iBAAiB,OAAO;gBAE9B,sCAAsC;gBACtC,MAAM,eAAe,MAAM,6BAA6B;gBACxD,MAAM,cAAc,AAAC,cAAc,aAAc,iBAAiB;gBAClE,cAAc,YAAY,OAAO,CAAC;gBAElC,uBAAuB;gBACvB,YAAY,CAAC,cAAc,GAAG,EAAE,OAAO,CAAC,KAAK,yBAAyB;gBAEtE,+BAA+B;gBAC/B,MAAM,aAAa,AAAC,cAAc,aAAc;gBAChD,6BAA6B,WAAW,OAAO,CAAC;gBAEhD,0BAA0B;gBAC1B,wBAAwB,CAAC,aAAa,GAAG,EAAE,OAAO,CAAC;gBAEnD,qCAAqC;gBACrC,sBAAsB;gBAEtB,oCAAoC;gBACpC,YAAY;YACd;QACF;IACF,GAAG;QAAC;QAAc;QAAgB;KAAmB;IAErD,qBAAqB;IACrB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,eAAe,SAAS;YAC1B,mDAAmD;YACnD,cAAc;QAChB;IACF,GAAG;QAAC;QAAa;KAAQ;IAEzB,qBAAqB;IACrB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,gBAAgB;YAClB,cAAc,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD,EAAE;QAC5B,OAAO;YACL,mDAAmD;YACnD,cAAc;QAChB;IACF,GAAG;QAAC;KAAe;IAEnB,mBAAmB;IACnB,MAAM,mBAAmB,OAAO;QAC9B,IAAI,CAAC,eAAe,CAAC,SAAS;QAE9B,IAAI;YACF,wBAAwB;YAExB,MAAM,kBAAkB;gBACtB,SAAS,qHAAA,CAAA,wBAAqB;gBAC9B,KAAK,qHAAA,CAAA,oBAAiB;gBACtB,cAAc;gBACd,MAAM;oBAAC,YAAY;iBAA6C;gBAChE,OAAO,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD,EAAE;YACpB;QAEA,8BAA8B;QAC9B,0DAA0D;QAE5D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C,SAAU;YACR,wBAAwB;QAC1B;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,yBAAyB;YAEzB,MAAM,kBAAkB;gBACtB,SAAS,qHAAA,CAAA,wBAAqB;gBAC9B,KAAK,qHAAA,CAAA,oBAAiB;gBACtB,cAAc;YAChB;QAEA,2CAA2C;QAE7C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD,SAAU;YACR,yBAAyB;QAC3B;IACF;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,oBAAoB;YAEpB,MAAM,kBAAkB;gBACtB,SAAS,qHAAA,CAAA,wBAAqB;gBAC9B,KAAK,qHAAA,CAAA,oBAAiB;gBACtB,cAAc;YAChB;YAEA,iCAAiC;YACjC,YAAY;QAEd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C,SAAU;YACR,oBAAoB;QACtB;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,uBAAuB;YAEvB,MAAM,kBAAkB;gBACtB,SAAS,qHAAA,CAAA,wBAAqB;gBAC9B,KAAK,qHAAA,CAAA,oBAAiB;gBACtB,cAAc;YAChB;QAEA,sCAAsC;QAExC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C,SAAU;YACR,uBAAuB;QACzB;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/AccountModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useAccount, useDisconnect } from 'wagmi';\n\ninterface AccountModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  address: string;\n  apeBalance: string;\n  bitBalance: string;\n}\n\nconst AccountModal: React.FC<AccountModalProps> = ({\n  isOpen,\n  onClose,\n  address,\n  apeBalance,\n  bitBalance\n}) => {\n  const { disconnect } = useDisconnect();\n\n  if (!isOpen) return null;\n\n  // Format address for display (truncate middle)\n  const displayAddress = `${address.slice(0, 6)}...${address.slice(-4)}`;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black/70\">\n      <div className=\"bg-royal p-6 max-w-lg w-full mx-4 border-2 border-banana\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"font-press-start text-2xl text-banana\">ACCOUNT</h2>\n          <button \n            onClick={onClose}\n            className=\"text-white hover:text-banana font-press-start text-xl\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Account Info Section */}\n        <div className=\"bg-royal-dark p-4 mb-6\">\n          <h3 className=\"font-press-start text-white mb-4\">\n            YOUR ACCOUNT INFORMATION AND BALANCES\n          </h3>\n\n          {/* Wallet Address */}\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm mb-2\">WALLET ADDRESS</p>\n            <div className=\"flex justify-between items-center bg-royal p-2\">\n              <span className=\"font-press-start text-sm text-white\">{displayAddress}</span>\n              <button \n                className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-4 py-1 font-press-start text-sm transition-colors\"\n                onClick={() => navigator.clipboard.writeText(address)}\n              >\n                COPY\n              </button>\n            </div>\n          </div>\n\n          {/* Balances */}\n          <div className=\"mb-2\">\n            <p className=\"font-press-start text-sm\">APE BALANCE</p>\n            <p className=\"font-press-start text-banana\">{apeBalance} APE</p>\n          </div>\n\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm\">BIT BALANCE</p>\n            <p className=\"font-press-start text-banana\">{bitBalance} BIT</p>\n          </div>\n\n          {/* Bridge Section */}\n          <div className=\"bg-royal p-4\">\n            <p className=\"font-press-start text-sm mb-2\">NEED TO BRIDGE APE TO APECHAIN?</p>\n            <button className=\"w-full bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal py-2 font-press-start flex justify-center items-center transition-colors\">\n              BRIDGE APE <span className=\"ml-2\">→</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Footer Buttons */}\n        <div className=\"flex justify-between\">\n          <button \n            onClick={onClose}\n            className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-6 py-2 font-press-start transition-colors\"\n          >\n            CLOSE\n          </button>\n          <button \n            onClick={() => {\n              disconnect();\n              onClose();\n            }}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 font-press-start transition-colors\"\n          >\n            DISCONNECT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountModal;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAaA,MAAM,eAA4C,CAAC,EACjD,MAAM,EACN,OAAO,EACP,OAAO,EACP,UAAU,EACV,UAAU,EACX;IACC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD;IAEnC,IAAI,CAAC,QAAQ,OAAO;IAEpB,+CAA+C;IAC/C,MAAM,iBAAiB,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;IAEtE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAMH,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAKjD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAuC;;;;;;sDACvD,8OAAC;4CACC,WAAU;4CACV,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;sDAC9C;;;;;;;;;;;;;;;;;;sCAOL,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,8OAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAG1D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,8OAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAI1D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,8OAAC;oCAAO,WAAU;;wCAAqK;sDAC1K,8OAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;8BAMxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,8OAAC;4BACC,SAAS;gCACP;gCACA;4BACF;4BACA,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/config/contracts.ts"],"sourcesContent":["// ApeChain Network Configuration\nexport const APECHAIN_ID = 33139;\n\n// Contract Addresses on ApeChain\nexport const CONTRACT_ADDRESSES = {\n  APE_TOKEN: '0x4d224452801ACEd8B2F0aebE155379bb5D594381', // APE Token on ApeChain\n  BIT_TOKEN: '0x0000000000000000000000000000000000000000', // Replace with actual BIT token address\n  MINING_CONTROLLER: '0x0000000000000000000000000000000000000000', // Replace with actual mining controller address\n} as const;\n\n// Minimal ABIs for token interactions\nexport const ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', type: 'uint8' }],\n    type: 'function',\n  },\n] as const;\n\n// Mining Controller ABI\nexport const MINING_CONTROLLER_ABI = [\n  'function claimRewards() returns (bool)',\n  'function getUnclaimedRewards(address user) view returns (uint256)',\n  'function getUserMiningRate(address user) view returns (uint256)',\n  'function getNetworkHashRate() view returns (uint256)',\n  'function getUserHashRate(address user) view returns (uint256)',\n  'function getBlocksUntilHalving() view returns (uint256)',\n] as const;\n\nexport const APE_TOKEN_ADDRESS = '0x4d224452801ACEd8B2F0aebE155379bb5D594381' as const;\nexport const BIT_TOKEN_ADDRESS = '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5' as const; "],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;;;AAC1B,MAAM,cAAc;AAGpB,MAAM,qBAAqB;IAChC,WAAW;IACX,WAAW;IACX,mBAAmB;AACrB;AAGO,MAAM,YAAY;IACvB;QACE,UAAU;QACV,QAAQ;YAAC;gBAAE,MAAM;gBAAU,MAAM;YAAU;SAAE;QAC7C,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAW,MAAM;YAAU;SAAE;QAC/C,MAAM;IACR;IACA;QACE,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAI,MAAM;YAAQ;SAAE;QACtC,MAAM;IACR;CACD;AAGM,MAAM,wBAAwB;IACnC;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useTokenBalance.ts"],"sourcesContent":["'use client';\n\nimport { useAccount, useContractRead, useBalance } from 'wagmi';\nimport { formatUnits } from 'viem';\nimport { APECHAIN_ID, BIT_TOKEN_ADDRESS, ERC20_ABI } from '../config/contracts';\n\nexport function useTokenBalance() {\n  const { address } = useAccount();\n\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  const { data: bitBalance } = useContractRead({\n    address: BIT_TOKEN_ADDRESS,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  return {\n    apeBalance: apeBalanceData?.formatted ?? '0',\n    bitBalance: bitBalance ? formatUnits(bitBalance as bigint, 18) : '0',\n  };\n} "],"names":[],"mappings":";;;AAEA;AAAA;AAAA;AACA;AACA;AAJA;;;;AAMO,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD,EAAE;QAC1C,SAAS;QACT,SAAS,0HAAA,CAAA,cAAW;QACpB,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,MAAM,EAAE,MAAM,UAAU,EAAE,GAAG,CAAA,GAAA,sNAAA,CAAA,kBAAe,AAAD,EAAE;QAC3C,SAAS,0HAAA,CAAA,oBAAiB;QAC1B,KAAK,0HAAA,CAAA,YAAS;QACd,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,OAAO;QACL,YAAY,gBAAgB,aAAa;QACzC,YAAY,aAAa,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD,EAAE,YAAsB,MAAM;IACnE;AACF","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ConnectWalletButton.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useWeb3Modal } from '@web3modal/wagmi/react';\nimport { useAccount } from 'wagmi';\nimport AccountModal from './AccountModal';\nimport { useTokenBalance } from '@/hooks/useTokenBalance';\n\ninterface ConnectWalletButtonProps {\n  className?: string;\n}\n\nconst ConnectWalletButton: React.FC<ConnectWalletButtonProps> = ({ className }) => {\n  const { open } = useWeb3Modal();\n  const { isConnected, address } = useAccount();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { apeBalance, bitBalance } = useTokenBalance();\n\n  const handleClick = () => {\n    if (isConnected) {\n      setIsModalOpen(true);\n    } else {\n      open();\n    }\n  };\n\n  return (\n    <>\n      <button \n        onClick={handleClick} \n        className={`bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors font-press-start ${className}`}\n      >\n        {isConnected ? 'PROFILE' : 'CONNECT WALLET'}\n      </button>\n\n      {isConnected && address && (\n        <AccountModal\n          isOpen={isModalOpen}\n          onClose={() => setIsModalOpen(false)}\n          address={address}\n          apeBalance={apeBalance}\n          bitBalance={bitBalance}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ConnectWalletButton;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AANA;;;;;;;AAYA,MAAM,sBAA0D,CAAC,EAAE,SAAS,EAAE;IAC5E,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,wLAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAC1C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,kBAAe,AAAD;IAEjD,MAAM,cAAc;QAClB,IAAI,aAAa;YACf,eAAe;QACjB,OAAO;YACL;QACF;IACF;IAEA,qBACE;;0BACE,8OAAC;gBACC,SAAS;gBACT,WAAW,CAAC,sHAAsH,EAAE,WAAW;0BAE9I,cAAc,YAAY;;;;;;YAG5B,eAAe,yBACd,8OAAC,kIAAA,CAAA,UAAY;gBACX,QAAQ;gBACR,SAAS,IAAM,eAAe;gBAC9B,SAAS;gBACT,YAAY;gBACZ,YAAY;;;;;;;;AAKtB;uCAEe","debugId":null}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport ConnectWalletButton from './ConnectWalletButton';\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"bg-royal py-4 px-6 flex justify-between items-center\">\n      <div className=\"flex items-center\">\n        {/* Logo would be replaced with actual BitApe logo */}\n        <div className=\"mr-2 text-banana font-bold text-2xl\">\n          <span className=\"pixel-text\">bitape</span>\n        </div>\n        \n        <nav className=\"hidden md:flex ml-8\">\n          <Link href=\"/about\" className=\"pixel-text text-white mx-3 hover:text-banana\">\n            ABOUT\n          </Link>\n          <Link href=\"/trade\" className=\"pixel-text text-white mx-3 hover:text-banana\">\n            TRADE $BIT\n          </Link>\n          <Link href=\"/leaderboard\" className=\"pixel-text text-white mx-3 hover:text-banana\">\n            LEADERBOARD\n          </Link>\n        </nav>\n      </div>\n      \n      <div className=\"flex items-center\">\n        <Link href=\"/announcements\" className=\"pixel-button mr-2 hidden md:block\">\n          ANNOUNCEMENTS\n        </Link>\n        <Link href=\"/refer\" className=\"pixel-button mr-2 hidden md:block\">\n          REFER A FRIEND\n        </Link>\n        <ConnectWalletButton />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMA,MAAM,SAAmB;IACvB,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,WAAU;sCAAa;;;;;;;;;;;kCAG/B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAS,WAAU;0CAA+C;;;;;;0CAG7E,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAS,WAAU;0CAA+C;;;;;;0CAG7E,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAe,WAAU;0CAA+C;;;;;;;;;;;;;;;;;;0BAMvF,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAiB,WAAU;kCAAoC;;;;;;kCAG1E,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAS,WAAU;kCAAoC;;;;;;kCAGlE,8OAAC,yIAAA,CAAA,UAAmB;;;;;;;;;;;;;;;;;AAI5B;uCAEe","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ResourcesPanel.tsx"],"sourcesContent":["import React from 'react';\nimport Image from 'next/image';\n\ninterface ResourcesPanelProps {\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n}\n\nconst ResourcesPanel: React.FC<ResourcesPanelProps> = ({\n  apeBalance,\n  bitBalance,\n  spacesLeft,\n  gigawattsAvailable\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <h2 className=\"pixel-text text-banana-yellow mb-4\">RESOURCES</h2>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">💎</span>\n        <span className=\"pixel-text\">{apeBalance} APE</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">🪙</span>\n        <span className=\"pixel-text\">{bitBalance} BIT</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">🏠</span>\n        <span className=\"pixel-text\">{spacesLeft} SPACES LEFT</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">⚡</span>\n        <span className=\"pixel-text\">{gigawattsAvailable} GIGAWATTS AVAILABLE</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ResourcesPanel;\n"],"names":[],"mappings":";;;;;AAUA,MAAM,iBAAgD,CAAC,EACrD,UAAU,EACV,UAAU,EACV,UAAU,EACV,kBAAkB,EACnB;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqC;;;;;;0BACnD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,8OAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,8OAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,8OAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,8OAAC;wBAAK,WAAU;;4BAAc;4BAAmB;;;;;;;;;;;;;;;;;;;AAIzD;uCAEe","debugId":null}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/StatsDisplay.tsx"],"sourcesContent":["import React from 'react';\n\ninterface StatsDisplayProps {\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  isSimpleView?: boolean;\n}\n\nconst StatsDisplay: React.FC<StatsDisplayProps> = ({\n  miningRate,\n  hashRate,\n  blocksUntilHalving,\n  networkHashRatePercentage,\n  totalNetworkHashRate,\n  isSimpleView = true\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"pixel-text text-banana-yellow\">STATS</h2>\n        <div className=\"flex\">\n          <button \n            className={`tab-button text-xs ${isSimpleView ? 'active' : ''}`}\n          >\n            SIMPLE\n          </button>\n          <button \n            className={`tab-button text-xs ${!isSimpleView ? 'active' : ''}`}\n          >\n            PRO\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"text-sm\">\n        <p className=\"mb-2 pixel-text\">- YOU ARE MINING <span className=\"text-banana-yellow\">{miningRate} BITAPE</span> A DAY</p>\n        <p className=\"mb-2 pixel-text\">- YOUR HASH RATE IS <span className=\"text-banana-yellow\">{hashRate} GH/S</span></p>\n        <p className=\"mb-2 pixel-text\">- <span className=\"text-banana-yellow\">{blocksUntilHalving} BLOCKS</span> UNTIL NEXT HALVENING</p>\n        <p className=\"mb-2 pixel-text\">- YOU HAVE <span className=\"text-banana-yellow\">{networkHashRatePercentage}%</span> OF THE TOTAL NETWORK HASH RATE (<span className=\"text-banana-yellow\">{totalNetworkHashRate} GH/S</span>)</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatsDisplay;\n"],"names":[],"mappings":";;;;;AAWA,MAAM,eAA4C,CAAC,EACjD,UAAU,EACV,QAAQ,EACR,kBAAkB,EAClB,yBAAyB,EACzB,oBAAoB,EACpB,eAAe,IAAI,EACpB;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,WAAW,CAAC,mBAAmB,EAAE,eAAe,WAAW,IAAI;0CAChE;;;;;;0CAGD,8OAAC;gCACC,WAAW,CAAC,mBAAmB,EAAE,CAAC,eAAe,WAAW,IAAI;0CACjE;;;;;;;;;;;;;;;;;;0BAML,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;;4BAAkB;0CAAiB,8OAAC;gCAAK,WAAU;;oCAAsB;oCAAW;;;;;;;4BAAc;;;;;;;kCAC/G,8OAAC;wBAAE,WAAU;;4BAAkB;0CAAoB,8OAAC;gCAAK,WAAU;;oCAAsB;oCAAS;;;;;;;;;;;;;kCAClG,8OAAC;wBAAE,WAAU;;4BAAkB;0CAAE,8OAAC;gCAAK,WAAU;;oCAAsB;oCAAmB;;;;;;;4BAAc;;;;;;;kCACxG,8OAAC;wBAAE,WAAU;;4BAAkB;0CAAW,8OAAC;gCAAK,WAAU;;oCAAsB;oCAA0B;;;;;;;4BAAQ;0CAAiC,8OAAC;gCAAK,WAAU;;oCAAsB;oCAAqB;;;;;;;4BAAY;;;;;;;;;;;;;;;;;;;AAIlO;uCAEe","debugId":null}},
    {"offset": {"line": 1083, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/MiningClaimSection.tsx"],"sourcesContent":["import React from 'react';\n\ninterface MiningClaimSectionProps {\n  minedBit: string;\n  onClaimReward: () => Promise<void>;\n  isClaimingReward: boolean;\n}\n\nconst MiningClaimSection: React.FC<MiningClaimSectionProps> = ({\n  minedBit,\n  onClaimReward,\n  isClaimingReward\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <div className=\"flex flex-col items-center justify-center py-4\">\n        <p className=\"pixel-text mb-4\">YOU HAVE MINED <span className=\"text-banana-yellow\">{minedBit} $BIT</span></p>\n        <button \n          className=\"claim-button\"\n          onClick={onClaimReward}\n          disabled={isClaimingReward || parseFloat(minedBit) <= 0}\n        >\n          {isClaimingReward ? 'CLAIMING...' : 'CLAIM MINED $BIT'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MiningClaimSection;\n"],"names":[],"mappings":";;;;;AAQA,MAAM,qBAAwD,CAAC,EAC7D,QAAQ,EACR,aAAa,EACb,gBAAgB,EACjB;IACC,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAE,WAAU;;wBAAkB;sCAAe,8OAAC;4BAAK,WAAU;;gCAAsB;gCAAS;;;;;;;;;;;;;8BAC7F,8OAAC;oBACC,WAAU;oBACV,SAAS;oBACT,UAAU,oBAAoB,WAAW,aAAa;8BAErD,mBAAmB,gBAAgB;;;;;;;;;;;;;;;;;AAK9C;uCAEe","debugId":null}},
    {"offset": {"line": 1144, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/RoomVisualization.tsx"],"sourcesContent":["import React from 'react';\n\ninterface RoomVisualizationProps {\n  hasFacility: boolean;\n  onPurchaseFacility: () => Promise<void>;\n  onGetStarterMiner: () => Promise<void>;\n  onUpgradeFacility: () => Promise<void>;\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isUpgradingFacility: boolean;\n}\n\nconst RoomVisualization: React.FC<RoomVisualizationProps> = ({\n  hasFacility,\n  onPurchaseFacility,\n  onGetStarterMiner,\n  onUpgradeFacility,\n  isPurchasingFacility,\n  isGettingStarterMiner,\n  isUpgradingFacility\n}) => {\n  if (!hasFacility) {\n    return (\n      <div className=\"room-container flex flex-col items-center justify-center\">\n        <h2 className=\"pixel-text text-2xl mb-8\">YOU DONT HAVE A SPACE TO MINE!</h2>\n        <button \n          className=\"pixel-button\"\n          onClick={onPurchaseFacility}\n          disabled={isPurchasingFacility}\n        >\n          {isPurchasingFacility ? 'PURCHASING...' : 'BUY FACILITY'}\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"room-container relative\">\n      {/* This would be replaced with actual room visualization with miners */}\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <div className=\"grid grid-cols-3 gap-4 p-4\">\n          {/* Placeholder for miners */}\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Room furniture (simplified) */}\n      <div className=\"absolute bottom-4 right-4 w-16 h-24 bg-royal-blue-light border border-banana-yellow\"></div>\n      <div className=\"absolute top-4 right-4 w-24 h-16 bg-royal-blue-light border border-banana-yellow\"></div>\n      \n      {/* Control buttons */}\n      <div className=\"absolute bottom-4 left-4 flex space-x-2\">\n        <button \n          className=\"pixel-button text-xs\"\n          onClick={onGetStarterMiner}\n          disabled={isGettingStarterMiner}\n        >\n          GRID\n        </button>\n        <button \n          className=\"pixel-button text-xs\"\n          onClick={onUpgradeFacility}\n          disabled={isUpgradingFacility}\n        >\n          UPGRADE\n        </button>\n      </div>\n      \n      {/* BIGBOY 9000 label */}\n      <div className=\"absolute bottom-4 right-4\">\n        <span className=\"pixel-text text-banana-yellow text-xs\">BITBOY 9000</span>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomVisualization;\n"],"names":[],"mappings":";;;;;AAYA,MAAM,oBAAsD,CAAC,EAC3D,WAAW,EACX,kBAAkB,EAClB,iBAAiB,EACjB,iBAAiB,EACjB,oBAAoB,EACpB,qBAAqB,EACrB,mBAAmB,EACpB;IACC,IAAI,CAAC,aAAa;QAChB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA2B;;;;;;8BACzC,8OAAC;oBACC,WAAU;oBACV,SAAS;oBACT,UAAU;8BAET,uBAAuB,kBAAkB;;;;;;;;;;;;IAIlD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;0BAMrB,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BAGf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAU;wBACV,SAAS;wBACT,UAAU;kCACX;;;;;;kCAGD,8OAAC;wBACC,WAAU;wBACV,SAAS;wBACT,UAAU;kCACX;;;;;;;;;;;;0BAMH,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;8BAAwC;;;;;;;;;;;;;;;;;AAIhE;uCAEe","debugId":null}},
    {"offset": {"line": 1312, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/GameLayout.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useGameState } from '../hooks/useGameState';\nimport Header from '../components/Header';\nimport ResourcesPanel from '../components/ResourcesPanel';\nimport StatsDisplay from '../components/StatsDisplay';\nimport MiningClaimSection from '../components/MiningClaimSection';\nimport RoomVisualization from '../components/RoomVisualization';\n\nconst GameLayout: React.FC = () => {\n  const gameState = useGameState();\n  \n  return (\n    <div className=\"min-h-screen flex flex-col bg-royal\">\n      <Header />\n      \n      <main className=\"flex-grow p-4 md:p-6 lg:p-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 max-w-7xl mx-auto\">\n          {/* Left column */}\n          <div className=\"flex flex-col space-y-6\">\n            <div className=\"flex space-x-2\">\n              <button className=\"tab-button active\">RESOURCES</button>\n              <button className=\"tab-button\">SPACE</button>\n              <button className=\"tab-button\">SELECTED TILE</button>\n            </div>\n            \n            <ResourcesPanel \n              apeBalance={gameState.apeBalance}\n              bitBalance={gameState.bitBalance}\n              spacesLeft={gameState.spacesLeft}\n              gigawattsAvailable={gameState.gigawattsAvailable}\n            />\n            \n            <StatsDisplay \n              miningRate={gameState.miningRate}\n              hashRate={gameState.hashRate}\n              blocksUntilHalving={gameState.blocksUntilHalving}\n              networkHashRatePercentage={gameState.networkHashRatePercentage}\n              totalNetworkHashRate={gameState.totalNetworkHashRate}\n            />\n            \n            <MiningClaimSection \n              minedBit={gameState.minedBit}\n              onClaimReward={gameState.claimReward}\n              isClaimingReward={gameState.isClaimingReward}\n            />\n          </div>\n          \n          {/* Right column */}\n          <div className=\"flex flex-col\">\n            <RoomVisualization \n              hasFacility={gameState.hasFacility}\n              onPurchaseFacility={() => gameState.purchaseFacility()}\n              onGetStarterMiner={gameState.getStarterMiner}\n              onUpgradeFacility={gameState.upgradeFacility}\n              isPurchasingFacility={gameState.isPurchasingFacility}\n              isGettingStarterMiner={gameState.isGettingStarterMiner}\n              isUpgradingFacility={gameState.isUpgradingFacility}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default GameLayout;\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;AAUA,MAAM,aAAuB;IAC3B,MAAM,YAAY,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IAE7B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4HAAA,CAAA,UAAM;;;;;0BAEP,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAO,WAAU;sDAAoB;;;;;;sDACtC,8OAAC;4CAAO,WAAU;sDAAa;;;;;;sDAC/B,8OAAC;4CAAO,WAAU;sDAAa;;;;;;;;;;;;8CAGjC,8OAAC,oIAAA,CAAA,UAAc;oCACb,YAAY,UAAU,UAAU;oCAChC,YAAY,UAAU,UAAU;oCAChC,YAAY,UAAU,UAAU;oCAChC,oBAAoB,UAAU,kBAAkB;;;;;;8CAGlD,8OAAC,kIAAA,CAAA,UAAY;oCACX,YAAY,UAAU,UAAU;oCAChC,UAAU,UAAU,QAAQ;oCAC5B,oBAAoB,UAAU,kBAAkB;oCAChD,2BAA2B,UAAU,yBAAyB;oCAC9D,sBAAsB,UAAU,oBAAoB;;;;;;8CAGtD,8OAAC,wIAAA,CAAA,UAAkB;oCACjB,UAAU,UAAU,QAAQ;oCAC5B,eAAe,UAAU,WAAW;oCACpC,kBAAkB,UAAU,gBAAgB;;;;;;;;;;;;sCAKhD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,uIAAA,CAAA,UAAiB;gCAChB,aAAa,UAAU,WAAW;gCAClC,oBAAoB,IAAM,UAAU,gBAAgB;gCACpD,mBAAmB,UAAU,eAAe;gCAC5C,mBAAmB,UAAU,eAAe;gCAC5C,sBAAsB,UAAU,oBAAoB;gCACpD,uBAAuB,UAAU,qBAAqB;gCACtD,qBAAqB,UAAU,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhE;uCAEe","debugId":null}},
    {"offset": {"line": 1462, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/LandingPage.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport ConnectWalletButton from './ConnectWalletButton';\nimport { useAccount } from 'wagmi';\nimport { useTokenBalance } from '../hooks/useTokenBalance';\n\nconst LandingPage = () => {\n  const { isConnected } = useAccount();\n  const { apeBalance, bitBalance } = useTokenBalance();\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      {/* Header */}\n      <header className=\"flex justify-between items-center px-6 py-4\">\n        <div className=\"flex items-center gap-8\">\n          <div className=\"flex items-center\">\n            <Image\n              src=\"/bitape-logo.svg\"\n              alt=\"BitApe Logo\"\n              width={32}\n              height={32}\n              className=\"mr-2\"\n            />\n            <span className=\"font-press-start text-banana text-xl\">bitape</span>\n          </div>\n          <nav className=\"flex gap-8\">\n            <Link href=\"/about\" className=\"font-press-start text-white hover:text-banana\">\n              ABOUT\n            </Link>\n            <Link href=\"/trade\" className=\"font-press-start text-white hover:text-banana\">\n              TRADE $BIT\n            </Link>\n            <Link href=\"/leaderboard\" className=\"font-press-start text-[#4A5568] hover:text-banana\">\n              LEADERBOARD\n            </Link>\n          </nav>\n        </div>\n        <ConnectWalletButton className=\"px-6 py-2 font-press-start\" />\n      </header>\n\n      {/* Resources Section */}\n      <div className=\"p-6\">\n        <h2 className=\"font-press-start text-banana mb-4\">RESOURCES</h2>\n        <div className=\"space-y-2 text-white font-press-start\">\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-banana\">💎</span>\n            <span>{apeBalance} APE</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-banana\">🪙</span>\n            <span>{bitBalance} BIT</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-banana\">🏠</span>\n            <span>0 SPACES LEFT</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-banana\">⚡</span>\n            <span>0 GIGAWATTS AVAILABLE</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <main className=\"flex-grow flex flex-col items-center justify-center p-4 relative\">\n        {/* Grid Background */}\n        <div className=\"absolute inset-0 bg-royal\"\n          style={{\n            backgroundImage: `\n              linear-gradient(to right, rgba(255,255,255,0.05) 1px, transparent 1px),\n              linear-gradient(to bottom, rgba(255,255,255,0.05) 1px, transparent 1px)\n            `,\n            backgroundSize: '24px 24px'\n          }}\n        />\n\n        <div className=\"relative z-10 max-w-4xl mx-auto text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-press-start mb-4 text-banana\">\n            BITAPE: A PEER-TO-PEER APE CASH SYSTEM\n          </h1>\n          \n          <p className=\"text-2xl md:text-3xl font-press-start mb-8 text-banana\">\n            971,753 $BIT HAS ALREADY BEEN MINED.\n          </p>\n          \n          <p className=\"text-xl md:text-2xl font-press-start mb-12 text-white\">\n            START EARNING TODAY.\n          </p>\n\n          <div className=\"mb-12\">\n            <div className=\"relative w-[200px] h-[200px] mx-auto border-2 border-banana\">\n              <Image\n                src=\"/globe.svg\"\n                alt=\"Globe Animation\"\n                fill\n                priority\n                className=\"object-contain\"\n              />\n            </div>\n          </div>\n\n          <div className=\"w-full max-w-md mx-auto\">\n            <button className=\"w-full font-press-start text-xl py-4 px-8 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors\">\n              CONNECT WALLET TO START MINING\n            </button>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default LandingPage; "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AAPA;;;;;;;AASA,MAAM,cAAc;IAClB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IACjC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,kBAAe,AAAD;IAEjD,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,6HAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAI;wCACJ,OAAO;wCACP,QAAQ;wCACR,WAAU;;;;;;kDAEZ,8OAAC;wCAAK,WAAU;kDAAuC;;;;;;;;;;;;0CAEzD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAS,WAAU;kDAAgD;;;;;;kDAG9E,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAS,WAAU;kDAAgD;;;;;;kDAG9E,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAe,WAAU;kDAAoD;;;;;;;;;;;;;;;;;;kCAK5F,8OAAC,yIAAA,CAAA,UAAmB;wBAAC,WAAU;;;;;;;;;;;;0BAIjC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAc;;;;;;kDAC9B,8OAAC;;4CAAM;4CAAW;;;;;;;;;;;;;0CAEpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAc;;;;;;kDAC9B,8OAAC;;4CAAM;4CAAW;;;;;;;;;;;;;0CAEpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAc;;;;;;kDAC9B,8OAAC;kDAAK;;;;;;;;;;;;0CAER,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;kDAAc;;;;;;kDAC9B,8OAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;0BAMZ,8OAAC;gBAAK,WAAU;;kCAEd,8OAAC;wBAAI,WAAU;wBACb,OAAO;4BACL,iBAAiB,CAAC;;;YAGlB,CAAC;4BACD,gBAAgB;wBAClB;;;;;;kCAGF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAyD;;;;;;0CAIvE,8OAAC;gCAAE,WAAU;0CAAyD;;;;;;0CAItE,8OAAC;gCAAE,WAAU;0CAAwD;;;;;;0CAIrE,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAI;wCACJ,IAAI;wCACJ,QAAQ;wCACR,WAAU;;;;;;;;;;;;;;;;0CAKhB,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAO,WAAU;8CAAiJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/K;uCAEe","debugId":null}},
    {"offset": {"line": 1811, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useAccount } from 'wagmi';\nimport GameLayout from '@/components/GameLayout';\nimport LandingPage from '@/components/LandingPage';\n\nexport default function Home() {\n  const { isConnected } = useAccount();\n  \n  return isConnected ? <GameLayout /> : <LandingPage />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAEjC,OAAO,4BAAc,8OAAC,gIAAA,CAAA,UAAU;;;;6BAAM,8OAAC,iIAAA,CAAA,UAAW;;;;;AACpD","debugId":null}}]
}