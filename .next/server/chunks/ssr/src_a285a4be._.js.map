{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/config/contracts.ts"],"sourcesContent":["// ApeChain Network Configuration\nexport const APECHAIN_ID = 33139;\n\n// Contract Addresses on ApeChain\nexport const CONTRACT_ADDRESSES = {\n  BIT_TOKEN: '0xd5f2A51440059C5E7B1E1E21634B5f48860A53f3', // BIT token address\n  MINING_CONTROLLER: '0x9281b1D9291e2D1911a400877B5c5e3c85342672', // Mining controller address\n  MAIN: '0x9281b1D9291e2D1911a400877B5c5e3c85342672' // Main contract address\n} as const;\n\n// Minimal ABIs for token interactions\nexport const ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', type: 'uint8' }],\n    type: 'function',\n  },\n] as const;\n\n// Main Contract ABI\nexport const MAIN_CONTRACT_ABI = [\n  {\n    inputs: [{ name: 'referrer', type: 'address' }],\n    name: 'purchaseInitialFacility',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'user', type: 'address' }],\n    name: 'initializedStarterFacility',\n    outputs: [{ name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'user', type: 'address' }],\n    name: 'getPlayerFacility',\n    outputs: [\n      { name: 'power', type: 'uint256' },\n      { name: 'level', type: 'uint256' },\n      { name: 'miners', type: 'uint256' },\n      { name: 'capacity', type: 'uint256' },\n      { name: 'used', type: 'uint256' },\n      { name: 'resources', type: 'uint256' },\n      { name: 'spaces', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'user', type: 'address' }],\n    name: 'getPlayerStats',\n    outputs: [\n      { name: 'totalMined', type: 'uint256' },\n      { name: 'hashRate', type: 'uint256' },\n      { name: 'miningRate', type: 'uint256' },\n      { name: 'networkShare', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'user', type: 'address' }],\n    name: 'getUserReferralInfo',\n    outputs: [\n      { name: 'totalReferrals', type: 'uint256' },\n      { name: 'totalEarned', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      { name: 'x', type: 'uint256' },\n      { name: 'y', type: 'uint256' }\n    ],\n    name: 'getFreeStarterMiner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n] as const;\n\n// Mining Controller ABI\nexport const MINING_CONTROLLER_ABI = [\n  // Read functions\n  'function facilities(address user) view returns (uint256 power, uint256 level, uint256 lastClaimBlock)',\n  'function totalPower() view returns (uint256)',\n  'function rewardPerBlock() view returns (uint256)',\n  'function getUnclaimedRewards(address user) view returns (uint256)',\n  'function getUserMiningRate(address user) view returns (uint256)',\n  'function getNetworkHashRate() view returns (uint256)',\n  'function getUserHashRate(address user) view returns (uint256)',\n  'function getBlocksUntilHalving() view returns (uint256)',\n  'function getTotalMinedBit() view returns (uint256)',\n  'function getBurnedBit() view returns (uint256)',\n  \n  // Write functions\n  'function purchaseInitialFacility(address referrer) payable returns (bool)',\n  'function getStarterMiner() returns (bool)',\n  'function claimReward() returns (bool)',\n  'function upgradeFacility() returns (bool)',\n] as const;\n\nexport const BIT_TOKEN_ADDRESS = '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5' as const; "],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;;;AAC1B,MAAM,cAAc;AAGpB,MAAM,qBAAqB;IAChC,WAAW;IACX,mBAAmB;IACnB,MAAM,6CAA6C,wBAAwB;AAC7E;AAGO,MAAM,YAAY;IACvB;QACE,UAAU;QACV,QAAQ;YAAC;gBAAE,MAAM;gBAAU,MAAM;YAAU;SAAE;QAC7C,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAW,MAAM;YAAU;SAAE;QAC/C,MAAM;IACR;IACA;QACE,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAI,MAAM;YAAQ;SAAE;QACtC,MAAM;IACR;CACD;AAGM,MAAM,oBAAoB;IAC/B;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAY,MAAM;YAAU;SAAE;QAC/C,MAAM;QACN,SAAS,EAAE;QACX,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;SAAE;QAC3C,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAI,MAAM;YAAO;SAAE;QACrC,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;SAAE;QAC3C,MAAM;QACN,SAAS;YACP;gBAAE,MAAM;gBAAS,MAAM;YAAU;YACjC;gBAAE,MAAM;gBAAS,MAAM;YAAU;YACjC;gBAAE,MAAM;gBAAU,MAAM;YAAU;YAClC;gBAAE,MAAM;gBAAY,MAAM;YAAU;YACpC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;YAChC;gBAAE,MAAM;gBAAa,MAAM;YAAU;YACrC;gBAAE,MAAM;gBAAU,MAAM;YAAU;SACnC;QACD,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;SAAE;QAC3C,MAAM;QACN,SAAS;YACP;gBAAE,MAAM;gBAAc,MAAM;YAAU;YACtC;gBAAE,MAAM;gBAAY,MAAM;YAAU;YACpC;gBAAE,MAAM;gBAAc,MAAM;YAAU;YACtC;gBAAE,MAAM;gBAAgB,MAAM;YAAU;SACzC;QACD,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;SAAE;QAC3C,MAAM;QACN,SAAS;YACP;gBAAE,MAAM;gBAAkB,MAAM;YAAU;YAC1C;gBAAE,MAAM;gBAAe,MAAM;YAAU;SACxC;QACD,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YACN;gBAAE,MAAM;gBAAK,MAAM;YAAU;YAC7B;gBAAE,MAAM;gBAAK,MAAM;YAAU;SAC9B;QACD,MAAM;QACN,SAAS,EAAE;QACX,iBAAiB;QACjB,MAAM;IACR;CACD;AAGM,MAAM,wBAAwB;IACnC,iBAAiB;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,kBAAkB;IAClB;IACA;IACA;IACA;CACD;AAEM,MAAM,oBAAoB","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useGameState.ts"],"sourcesContent":["import { useAccount, useContractRead, useContractWrite, useTransaction, useBalance, useWaitForTransactionReceipt } from 'wagmi';\nimport { formatEther, parseEther, Address, zeroAddress } from 'viem';\nimport { CONTRACT_ADDRESSES, MINING_CONTROLLER_ABI, ERC20_ABI, APECHAIN_ID, MAIN_CONTRACT_ABI } from '../config/contracts';\nimport { useEffect, useState, useMemo } from 'react';\n\ninterface PlayerFacility {\n  power: bigint;\n  level: bigint;\n  miners: bigint;\n  capacity: bigint;\n  used: bigint;\n  resources: bigint;\n  spaces: bigint;\n}\n\ninterface PlayerStats {\n  totalMined: bigint;\n  hashRate: bigint;\n  miningRate: bigint;\n  networkShare: bigint;\n}\n\nexport interface GameState {\n  // User state\n  isConnected: boolean;\n  address: string | undefined;\n  \n  // Resources\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n  \n  // Mining stats\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  \n  // Network stats\n  totalMinedBit: string;\n  burnedBit: string;\n  rewardPerBlock: string;\n  \n  // Mining rewards\n  minedBit: string;\n  \n  // Facility state\n  hasFacility: boolean;\n  facilityData: {\n    power: number;\n    level: number;\n    miners: number;\n    capacity: number;\n    used: number;\n    resources: number;\n    spaces: number;\n  } | null;\n  stats: PlayerStats;\n  \n  // Actions\n  purchaseFacility: () => Promise<void>;\n  getStarterMiner: (x: number, y: number) => Promise<void>;\n  claimReward: () => Promise<void>;\n  upgradeFacility: () => void;\n  \n  // Loading states\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isClaimingReward: boolean;\n  isUpgradingFacility: boolean;\n\n  // New fields\n  isGameActive: boolean;\n  isUserActive: boolean;\n\n  totalReferrals: number;\n  totalBigEarned: string;\n  refetch: () => void;\n}\n\nexport function useGameState(): GameState {\n  const { address, isConnected } = useAccount();\n  \n  // State variables\n  const [apeBalance, setApeBalance] = useState('0');\n  const [bitBalance, setBitBalance] = useState('0');\n  const [minedBit, setMinedBit] = useState('0');\n  const [hasFacility, setHasFacility] = useState(false);\n  const [spacesLeft, setSpacesLeft] = useState(0);\n  const [gigawattsAvailable, setGigawattsAvailable] = useState(0);\n  const [miningRate, setMiningRate] = useState('0');\n  const [hashRate, setHashRate] = useState('0');\n  const [blocksUntilHalving, setBlocksUntilHalving] = useState('0');\n  const [networkHashRatePercentage, setNetworkHashRatePercentage] = useState('0');\n  const [totalNetworkHashRate, setTotalNetworkHashRate] = useState('0');\n  const [isPurchasingFacility, setIsPurchasingFacility] = useState(false);\n  const [isGettingStarterMiner, setIsGettingStarterMiner] = useState(false);\n  const [isClaimingReward, setIsClaimingReward] = useState(false);\n  const [isUpgrading, setIsUpgrading] = useState(false);\n  const [totalReferrals, setTotalReferrals] = useState(0);\n  const [totalBigEarned, setTotalBigEarned] = useState('0');\n  const [txHash, setTxHash] = useState<`0x${string}` | undefined>();\n\n  // Contract reads\n  const { data: gameActiveState } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isGameActive',\n    query: {\n      enabled: true,\n    },\n  });\n\n  const { data: userActiveState } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isUserActive',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get native APE balance\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get BIT token balance\n  const { data: bitBalanceData } = useContractRead({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get facility data\n  const { data: facilityData } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'getPlayerFacility',\n    args: [address],\n    watch: true,\n  }) as { data: PlayerFacility | undefined };\n\n  // Check if player has initialized facility\n  const { data: hasInitializedFacility, refetch: refetchInitialized } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'initializedStarterFacility',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get referral info\n  const { data: referralInfo } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'getUserReferralInfo',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get player stats\n  const { data: playerStats, refetch: refetchStats } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'getPlayerStats',\n    args: [address || zeroAddress],\n    query: {\n      enabled: Boolean(address)\n    }\n  });\n\n  // Update state when data changes\n  useEffect(() => {\n    if (apeBalanceData) {\n      setApeBalance(apeBalanceData.formatted);\n    }\n  }, [apeBalanceData]);\n\n  useEffect(() => {\n    if (bitBalanceData) {\n      setBitBalance(formatEther(bitBalanceData as bigint));\n    }\n  }, [bitBalanceData]);\n\n  useEffect(() => {\n    if (hasInitializedFacility !== undefined) {\n      setHasFacility(!!hasInitializedFacility);\n    }\n  }, [hasInitializedFacility]);\n\n  // Contract write functions\n  const { data: purchaseFacilityData, write: purchaseFacility } = useContractWrite({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'purchaseInitialFacility'\n  });\n\n  const { data: getStarterMinerData, write: getStarterMinerWrite } = useContractWrite({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'getFreeStarterMiner'\n  });\n\n  const { data: claimRewardData, write: claimRewardWrite } = useContractWrite({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'claimReward'\n  });\n\n  const { writeAsync: upgradeFacilityWrite } = useContractWrite({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'upgradeFacility',\n  });\n\n  const upgradeFacility = async () => {\n    if (!upgradeFacilityWrite) return;\n    setIsUpgrading(true);\n    try {\n      const tx = await upgradeFacilityWrite();\n      setTxHash(tx.hash);\n    } catch (error) {\n      console.error('Error upgrading facility:', error);\n      setIsUpgrading(false);\n    }\n  };\n\n  // Update referral info\n  useEffect(() => {\n    if (referralInfo) {\n      const [totalRefs, totalEarned] = referralInfo as [bigint, bigint];\n      setTotalReferrals(Number(totalRefs));\n      setTotalBigEarned(formatEther(totalEarned));\n    }\n  }, [referralInfo]);\n\n  const { isLoading: isPending } = useTransaction({\n    hash: txHash,\n  });\n\n  return {\n    isConnected,\n    address,\n    apeBalance,\n    bitBalance,\n    spacesLeft,\n    gigawattsAvailable,\n    miningRate,\n    hashRate,\n    blocksUntilHalving,\n    networkHashRatePercentage,\n    totalNetworkHashRate,\n    totalMinedBit: playerStats ? playerStats[0].toString() : '0',\n    burnedBit: '1,238,626.5',\n    rewardPerBlock: '2.5',\n    minedBit,\n    hasFacility,\n    facilityData: facilityData ? {\n      power: Number(facilityData.power),\n      level: Number(facilityData.level),\n      miners: Number(facilityData.miners),\n      capacity: Number(facilityData.capacity),\n      used: Number(facilityData.used),\n      resources: Number(facilityData.resources),\n      spaces: Number(facilityData.spaces),\n    } : null,\n    stats: playerStats ? {\n      totalMined: playerStats[0],\n      hashRate: playerStats[1],\n      miningRate: playerStats[2],\n      networkShare: playerStats[3],\n    } : {\n      totalMined: BigInt(0),\n      hashRate: BigInt(0),\n      miningRate: BigInt(0),\n      networkShare: BigInt(0),\n    },\n    purchaseFacility: async () => {\n      if (!purchaseFacility) return;\n      return purchaseFacility();\n    },\n    getStarterMiner: async (x: number, y: number) => {\n      if (!getStarterMinerWrite) return;\n      return getStarterMinerWrite({\n        args: [BigInt(x), BigInt(y)]\n      });\n    },\n    claimReward: async () => {\n      if (!claimRewardWrite) return;\n      return claimRewardWrite();\n    },\n    upgradeFacility,\n    isPurchasingFacility,\n    isGettingStarterMiner,\n    isClaimingReward,\n    isUpgradingFacility: isUpgrading || isPending,\n    isGameActive: !!gameActiveState,\n    isUserActive: !!userActiveState,\n    totalReferrals,\n    totalBigEarned,\n    refetch: () => {\n      refetchInitialized();\n      refetchStats();\n    },\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useTokenBalance.ts"],"sourcesContent":["'use client';\n\nimport { useAccount, useContractRead, useBalance } from 'wagmi';\nimport { formatUnits } from 'viem';\nimport { APECHAIN_ID, CONTRACT_ADDRESSES, ERC20_ABI } from '../config/contracts';\n\nexport function useTokenBalance() {\n  const { address } = useAccount();\n\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  const { data: bitBalance } = useContractRead({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  return {\n    apeBalance: apeBalanceData?.formatted ?? '0',\n    bitBalance: bitBalance ? formatUnits(bitBalance as bigint, 18) : '0',\n  };\n} "],"names":[],"mappings":";;;AAEA;AAAA;AAAA;AACA;AACA;AAJA;;;;AAMO,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD,EAAE;QAC1C,SAAS;QACT,SAAS,0HAAA,CAAA,cAAW;QACpB,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,MAAM,EAAE,MAAM,UAAU,EAAE,GAAG,CAAA,GAAA,sNAAA,CAAA,kBAAe,AAAD,EAAE;QAC3C,SAAS,0HAAA,CAAA,qBAAkB,CAAC,SAAS;QACrC,KAAK,0HAAA,CAAA,YAAS;QACd,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,OAAO;QACL,YAAY,gBAAgB,aAAa;QACzC,YAAY,aAAa,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD,EAAE,YAAsB,MAAM;IACnE;AACF","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/BuyFacilityModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport { Dialog } from '@headlessui/react';\nimport { useContractWrite, useAccount, useTransaction } from 'wagmi';\nimport { parseEther } from 'viem';\nimport { CONTRACT_ADDRESSES, MAIN_CONTRACT_ABI } from '@/config/contracts';\n\ninterface BuyFacilityModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nconst BuyFacilityModal: React.FC<BuyFacilityModalProps> = ({\n  isOpen,\n  onClose,\n  onConfirm\n}) => {\n  const { address } = useAccount();\n  \n  const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000' as `0x${string}`;\n  \n  const { data: hash, isPending: isWritePending, writeContract } = useContractWrite();\n\n  const { isLoading: isConfirming } = useTransaction({\n    hash,\n  });\n\n  const handlePurchase = async () => {\n    try {\n      await writeContract({\n        address: CONTRACT_ADDRESSES.MAIN,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [ZERO_ADDRESS],\n        value: parseEther('0.1'), // 10 APE\n      });\n      onConfirm();\n    } catch (error) {\n      console.error('Failed to purchase facility:', error);\n    }\n  };\n\n  const isLoading = isWritePending || isConfirming;\n\n  if (!isOpen) return null;\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      className=\"relative z-50\"\n    >\n      <div className=\"fixed inset-0 bg-black/70\" aria-hidden=\"true\" />\n      \n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-2xl bg-royal border-4 border-banana rounded-lg shadow-xl\">\n          <div className=\"p-6\">\n            <Dialog.Title className=\"text-xl font-press-start text-center text-banana mb-4\">\n              PURCHASE YOUR FIRST MINING SPACE\n            </Dialog.Title>\n            \n            <p className=\"text-sm font-press-start text-center text-white mb-6\">\n              Start mining BitApe with your own mining facility!\n            </p>\n\n            <div className=\"relative w-full h-48 mb-6\">\n              <Image\n                src=\"/bedroom.png\"\n                alt=\"Mining Facility\"\n                fill\n                className=\"object-contain pixel-art\"\n                priority\n              />\n            </div>\n\n            <div className=\"space-y-4 mb-6\">\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Power Output:</span>\n                <span className=\"text-banana\">20 WATTS</span>\n              </div>\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Space Capacity:</span>\n                <span className=\"text-banana\">4 UNITS</span>\n              </div>\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Price:</span>\n                <span className=\"text-banana\">10 APE</span>\n              </div>\n            </div>\n\n            <div className=\"bg-royal-blue p-4 rounded-lg mb-6\">\n              <p className=\"text-center font-press-start text-banana text-sm\">\n                FREE STARTER MINER INCLUDED!\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4\">\n              <button\n                onClick={onClose}\n                className=\"px-6 py-2 bg-transparent font-press-start text-banana text-sm border-2 border-banana hover:bg-banana hover:text-royal transition-colors\"\n              >\n                CANCEL\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isLoading}\n                className=\"px-6 py-2 bg-banana font-press-start text-royal text-sm hover:bg-banana-dark transition-colors disabled:opacity-50\"\n              >\n                {isLoading ? 'PURCHASING...' : 'PURCHASE NOW'}\n              </button>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default BuyFacilityModal; "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAPA;;;;;;;AAeA,MAAM,mBAAoD,CAAC,EACzD,MAAM,EACN,OAAO,EACP,SAAS,EACV;IACC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,eAAe;IAErB,MAAM,EAAE,MAAM,IAAI,EAAE,WAAW,cAAc,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,yNAAA,CAAA,mBAAgB,AAAD;IAEhF,MAAM,EAAE,WAAW,YAAY,EAAE,GAAG,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAAE;QACjD;IACF;IAEA,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,cAAc;gBAClB,SAAS,0HAAA,CAAA,qBAAkB,CAAC,IAAI;gBAChC,KAAK,0HAAA,CAAA,oBAAiB;gBACtB,cAAc;gBACd,MAAM;oBAAC;iBAAa;gBACpB,OAAO,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD,EAAE;YACpB;YACA;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,MAAM,YAAY,kBAAkB;IAEpC,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC,+KAAA,CAAA,SAAM;QACL,MAAM;QACN,SAAS;QACT,WAAU;;0BAEV,8OAAC;gBAAI,WAAU;gBAA4B,eAAY;;;;;;0BAEvD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+KAAA,CAAA,SAAM,CAAC,KAAK;oBAAC,WAAU;8BACtB,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,+KAAA,CAAA,SAAM,CAAC,KAAK;gCAAC,WAAU;0CAAwD;;;;;;0CAIhF,8OAAC;gCAAE,WAAU;0CAAuD;;;;;;0CAIpE,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,IAAI;oCACJ,WAAU;oCACV,QAAQ;;;;;;;;;;;0CAIZ,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,8OAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;kDAEhC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,8OAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;kDAEhC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,8OAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;;;;;;;0CAIlC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAE,WAAU;8CAAmD;;;;;;;;;;;0CAKlE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,SAAS;wCACT,UAAU;wCACV,WAAU;kDAET,YAAY,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/C;uCAEe","debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/AccountModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useAccount, useDisconnect } from 'wagmi';\n\ninterface AccountModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  address: string;\n  apeBalance: string;\n  bitBalance: string;\n}\n\nconst AccountModal: React.FC<AccountModalProps> = ({\n  isOpen,\n  onClose,\n  address,\n  apeBalance,\n  bitBalance\n}) => {\n  const { disconnect } = useDisconnect();\n\n  if (!isOpen) return null;\n\n  // Format address for display (truncate middle)\n  const displayAddress = `${address.slice(0, 6)}...${address.slice(-4)}`;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black/70\">\n      <div className=\"bg-royal p-6 max-w-lg w-full mx-4 border-2 border-banana\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"font-press-start text-2xl text-banana\">ACCOUNT</h2>\n          <button \n            onClick={onClose}\n            className=\"text-white hover:text-banana font-press-start text-xl\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Account Info Section */}\n        <div className=\"bg-royal-dark p-4 mb-6\">\n          <h3 className=\"font-press-start text-white mb-4\">\n            YOUR ACCOUNT INFORMATION AND BALANCES\n          </h3>\n\n          {/* Wallet Address */}\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm mb-2\">WALLET ADDRESS</p>\n            <div className=\"flex justify-between items-center bg-royal p-2\">\n              <span className=\"font-press-start text-sm text-white\">{displayAddress}</span>\n              <button \n                className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-4 py-1 font-press-start text-sm transition-colors\"\n                onClick={() => navigator.clipboard.writeText(address)}\n              >\n                COPY\n              </button>\n            </div>\n          </div>\n\n          {/* Balances */}\n          <div className=\"mb-2\">\n            <p className=\"font-press-start text-sm\">APE BALANCE</p>\n            <p className=\"font-press-start text-banana\">{apeBalance} APE</p>\n          </div>\n\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm\">BIT BALANCE</p>\n            <p className=\"font-press-start text-banana\">{bitBalance} BIT</p>\n          </div>\n\n          {/* Bridge Section */}\n          <div className=\"bg-royal p-4\">\n            <p className=\"font-press-start text-sm mb-2\">NEED TO BRIDGE APE TO APECHAIN?</p>\n            <button className=\"w-full bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal py-2 font-press-start flex justify-center items-center transition-colors\">\n              BRIDGE APE <span className=\"ml-2\">→</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Footer Buttons */}\n        <div className=\"flex justify-between\">\n          <button \n            onClick={onClose}\n            className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-6 py-2 font-press-start transition-colors\"\n          >\n            CLOSE\n          </button>\n          <button \n            onClick={() => {\n              disconnect();\n              onClose();\n            }}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 font-press-start transition-colors\"\n          >\n            DISCONNECT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountModal;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAaA,MAAM,eAA4C,CAAC,EACjD,MAAM,EACN,OAAO,EACP,OAAO,EACP,UAAU,EACV,UAAU,EACX;IACC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD;IAEnC,IAAI,CAAC,QAAQ,OAAO;IAEpB,+CAA+C;IAC/C,MAAM,iBAAiB,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;IAEtE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAMH,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAKjD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAuC;;;;;;sDACvD,8OAAC;4CACC,WAAU;4CACV,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;sDAC9C;;;;;;;;;;;;;;;;;;sCAOL,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,8OAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAG1D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,8OAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAI1D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,8OAAC;oCAAO,WAAU;;wCAAqK;sDAC1K,8OAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;8BAMxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,8OAAC;4BACC,SAAS;gCACP;gCACA;4BACF;4BACA,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe","debugId":null}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ReferralModal.tsx"],"sourcesContent":["import React from 'react';\nimport { Dialog } from '@headlessui/react';\nimport { useAccount } from 'wagmi';\n\ninterface ReferralModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  totalReferrals: number;\n  totalBigEarned: string;\n}\n\nconst ReferralModal: React.FC<ReferralModalProps> = ({\n  isOpen,\n  onClose,\n  totalReferrals,\n  totalBigEarned\n}) => {\n  const { address } = useAccount();\n\n  const referralLink = address \n    ? `https://www.bigcoin.tech?ref=${address}`\n    : '';\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      className=\"relative z-50\"\n    >\n      <div className=\"fixed inset-0 bg-black/70\" aria-hidden=\"true\" />\n      \n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-2xl bg-royal border-4 border-banana rounded-lg shadow-xl\">\n          <div className=\"p-6\">\n            <Dialog.Title className=\"text-xl font-press-start text-center text-banana mb-4\">\n              REFER A FRIEND\n            </Dialog.Title>\n            \n            <p className=\"text-sm font-press-start text-center text-white mb-8\">\n              SHARE YOUR REFERRAL LINK WITH FRIENDS AND EARN A 2.5% BONUS OF WHATEVER BIGCOIN THEY MINE!\n            </p>\n\n            <div className=\"bg-royal-dark p-4 mb-8 rounded\">\n              <div className=\"flex justify-between mb-6\">\n                <div>\n                  <p className=\"font-press-start text-white mb-2\">TOTAL REFERRALS</p>\n                  <p className=\"font-press-start text-banana text-xl\">{totalReferrals}</p>\n                </div>\n                <div>\n                  <p className=\"font-press-start text-white mb-2\">TOTAL BIG EARNED</p>\n                  <p className=\"font-press-start text-banana text-xl\">{totalBigEarned} $BIG</p>\n                </div>\n              </div>\n\n              <p className=\"font-press-start text-white mb-2\">YOUR REFERRAL LINK</p>\n              <div className=\"flex gap-2\">\n                <input\n                  type=\"text\"\n                  readOnly\n                  value={referralLink}\n                  aria-label=\"Your referral link\"\n                  title=\"Your referral link\"\n                  className=\"flex-1 bg-royal font-press-start text-banana p-2 border-2 border-banana\"\n                />\n                <button\n                  onClick={() => navigator.clipboard.writeText(referralLink)}\n                  className=\"px-6 py-2 bg-banana font-press-start text-royal hover:bg-banana-dark transition-colors\"\n                >\n                  COPY\n                </button>\n              </div>\n            </div>\n\n            <div className=\"flex justify-center\">\n              <button\n                onClick={onClose}\n                className=\"px-6 py-2 bg-transparent font-press-start text-banana border-2 border-banana hover:bg-banana hover:text-royal transition-colors\"\n              >\n                CLOSE\n              </button>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ReferralModal; "],"names":[],"mappings":";;;;AACA;AACA;;;;AASA,MAAM,gBAA8C,CAAC,EACnD,MAAM,EACN,OAAO,EACP,cAAc,EACd,cAAc,EACf;IACC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,eAAe,UACjB,CAAC,6BAA6B,EAAE,SAAS,GACzC;IAEJ,qBACE,8OAAC,+KAAA,CAAA,SAAM;QACL,MAAM;QACN,SAAS;QACT,WAAU;;0BAEV,8OAAC;gBAAI,WAAU;gBAA4B,eAAY;;;;;;0BAEvD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+KAAA,CAAA,SAAM,CAAC,KAAK;oBAAC,WAAU;8BACtB,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,+KAAA,CAAA,SAAM,CAAC,KAAK;gCAAC,WAAU;0CAAwD;;;;;;0CAIhF,8OAAC;gCAAE,WAAU;0CAAuD;;;;;;0CAIpE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;;kEACC,8OAAC;wDAAE,WAAU;kEAAmC;;;;;;kEAChD,8OAAC;wDAAE,WAAU;kEAAwC;;;;;;;;;;;;0DAEvD,8OAAC;;kEACC,8OAAC;wDAAE,WAAU;kEAAmC;;;;;;kEAChD,8OAAC;wDAAE,WAAU;;4DAAwC;4DAAe;;;;;;;;;;;;;;;;;;;kDAIxE,8OAAC;wCAAE,WAAU;kDAAmC;;;;;;kDAChD,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDACC,MAAK;gDACL,QAAQ;gDACR,OAAO;gDACP,cAAW;gDACX,OAAM;gDACN,WAAU;;;;;;0DAEZ,8OAAC;gDACC,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;gDAC7C,WAAU;0DACX;;;;;;;;;;;;;;;;;;0CAML,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;uCAEe","debugId":null}},
    {"offset": {"line": 1223, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/RoomVisualization.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Image from 'next/image';\nimport { useContractRead } from 'wagmi';\nimport { CONTRACT_ADDRESSES, MAIN_CONTRACT_ABI } from '../config/contracts';\nimport { Address, zeroAddress } from 'viem';\n\ninterface FacilityData {\n  power: number;\n  level: number;\n  miners: number;\n  capacity: number;\n  used: number;\n  resources: number;\n  spaces: number;\n}\n\ninterface RoomVisualizationProps {\n  hasFacility: boolean;\n  facilityData?: FacilityData;\n  onPurchaseFacility: () => Promise<void>;\n  onGetStarterMiner: (x: number, y: number) => Promise<void>;\n  onUpgradeFacility: () => Promise<void>;\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isUpgradingFacility: boolean;\n  onTileSelect?: (x: number, y: number) => void;\n  address?: Address;\n  isGridMode?: boolean;\n  toggleGridMode?: () => void;\n}\n\nconst RoomVisualization: React.FC<RoomVisualizationProps> = ({\n  hasFacility,\n  facilityData,\n  onPurchaseFacility,\n  onGetStarterMiner,\n  onUpgradeFacility,\n  isPurchasingFacility,\n  isGettingStarterMiner,\n  isUpgradingFacility,\n  onTileSelect,\n  address,\n  isGridMode = false,\n  toggleGridMode\n}) => {\n  const [selectedTile, setSelectedTile] = useState<{x: number, y: number}>();\n\n  // Check if user has claimed their free miner\n  const { data: minerData } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'getPlayerFacility',\n    args: [address || zeroAddress],\n    query: {\n      enabled: Boolean(address)\n    }\n  });\n\n  const handleTileClick = (x: number, y: number) => {\n    if (!isGridMode) return;\n    setSelectedTile({ x, y });\n    if (onTileSelect) {\n      onTileSelect(x, y);\n    }\n  };\n\n  // Function to check if a tile already has a miner\n  const tileHasMiner = (x: number, y: number) => {\n    // This would need to be implemented based on your contract data\n    return false;\n  };\n\n  if (!hasFacility) {\n    return (\n      <div className=\"room-container flex flex-col items-center justify-center h-[600px] bg-royal\">\n        <div className=\"text-center\">\n          <h2 className=\"pixel-text text-2xl mb-4\">YOU DONT HAVE A SPACE TO MINE!</h2>\n          <div className=\"space-y-4\">\n            <p className=\"text-white\">- NO MINING SPACE</p>\n            <p className=\"text-white\">- 0 TOTAL SPACES</p>\n            <p className=\"text-white\">- 0 TOTAL GIGAWATTS</p>\n            <p className=\"text-white\">- CANT MINE WITHOUT SPACE, BUDDY</p>\n          </div>\n          <button \n            className=\"pixel-button mt-8\"\n            onClick={onPurchaseFacility}\n            disabled={isPurchasingFacility}\n          >\n            {isPurchasingFacility ? 'PURCHASING...' : 'BUY FACILITY'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative w-full h-full bg-royal\">\n      {/* Bedroom Facility Background */}\n      <div className=\"w-full h-full flex items-center justify-center\">\n        <div className=\"relative w-full h-full\">\n          <Image src=\"/bedroom.png\" alt=\"Mining Facility\" fill className=\"object-contain\" priority />\n\n          {/* Clickable Mining Spaces - Positioned to match the isometric view */}\n          <div className=\"absolute inset-0\">\n            {/* \n              These positions are carefully calculated to match the isometric blue tiles\n              in the pixel art image. The transform is used to create the isometric alignment.\n            */}\n            <div\n              onClick={() => handleTileClick(0, 0)}\n              className={`absolute w-[80px] h-[80px] cursor-pointer transition-all duration-300 ${\n                selectedTile?.x === 0 && selectedTile?.y === 0\n                  ? \"bg-blue-500 bg-opacity-50\"\n                  : isGridMode ? \"bg-blue-500 bg-opacity-30 hover:bg-opacity-50\" : \"\"\n              }`}\n              style={{\n                top: \"58%\",\n                left: \"32%\",\n                transform: \"skew(-26.5deg, 0) rotate(45deg)\",\n                borderRadius: \"4px\",\n              }}\n            />\n            <div\n              onClick={() => handleTileClick(1, 0)}\n              className={`absolute w-[80px] h-[80px] cursor-pointer transition-all duration-300 ${\n                selectedTile?.x === 1 && selectedTile?.y === 0\n                  ? \"bg-blue-500 bg-opacity-50\"\n                  : isGridMode ? \"bg-blue-500 bg-opacity-30 hover:bg-opacity-50\" : \"\"\n              }`}\n              style={{\n                top: \"50%\",\n                left: \"42%\",\n                transform: \"skew(-26.5deg, 0) rotate(45deg)\",\n                borderRadius: \"4px\",\n              }}\n            />\n            <div\n              onClick={() => handleTileClick(0, 1)}\n              className={`absolute w-[80px] h-[80px] cursor-pointer transition-all duration-300 ${\n                selectedTile?.x === 0 && selectedTile?.y === 1\n                  ? \"bg-blue-500 bg-opacity-50\"\n                  : isGridMode ? \"bg-blue-500 bg-opacity-30 hover:bg-opacity-50\" : \"\"\n              }`}\n              style={{\n                top: \"66%\",\n                left: \"42%\",\n                transform: \"skew(-26.5deg, 0) rotate(45deg)\",\n                borderRadius: \"4px\",\n              }}\n            />\n            <div\n              onClick={() => handleTileClick(1, 1)}\n              className={`absolute w-[80px] h-[80px] cursor-pointer transition-all duration-300 ${\n                selectedTile?.x === 1 && selectedTile?.y === 1\n                  ? \"bg-blue-500 bg-opacity-50\"\n                  : isGridMode ? \"bg-blue-500 bg-opacity-30 hover:bg-opacity-50\" : \"\"\n              }`}\n              style={{\n                top: \"58%\",\n                left: \"52%\",\n                transform: \"skew(-26.5deg, 0) rotate(45deg)\",\n                borderRadius: \"4px\",\n              }}\n            />\n          </div>\n\n          {/* GRID and UPGRADE buttons */}\n          <div className=\"absolute bottom-[30px] left-0 w-full flex justify-center space-x-8\">\n            <button\n              className=\"w-[100px] h-[40px] bg-transparent hover:opacity-80 transition-opacity\"\n              onClick={toggleGridMode}\n            >\n              <span className=\"sr-only\">GRID</span>\n            </button>\n            <button\n              className=\"w-[100px] h-[40px] bg-transparent hover:opacity-80 transition-opacity\"\n              onClick={onUpgradeFacility}\n              disabled={isUpgradingFacility}\n            >\n              <span className=\"sr-only\">UPGRADE</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomVisualization;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1493, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useIsMounted.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * Custom hook to determine if a component has mounted.\n * Useful for avoiding hydration issues with server-side rendering.\n * \n * @returns {boolean} True if component is mounted, false otherwise\n */\nexport function useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  return isMounted;\n} "],"names":[],"mappings":";;;AAAA;;AAQO,SAAS;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa;IACf,GAAG,EAAE;IAEL,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1511, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/app/room/%5Baddress%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useParams, useRouter } from 'next/navigation';\nimport { useAccount, useContractRead } from 'wagmi';\nimport { Address, zeroAddress } from 'viem';\nimport { useGameState } from '@/hooks/useGameState';\nimport { useTokenBalance } from '@/hooks/useTokenBalance';\nimport { CONTRACT_ADDRESSES, MAIN_CONTRACT_ABI } from '@/config/contracts';\nimport BuyFacilityModal from '@/components/BuyFacilityModal';\nimport AccountModal from '@/components/AccountModal';\nimport ReferralModal from '@/components/ReferralModal';\nimport RoomVisualization from '@/components/RoomVisualization';\nimport FacilityStats from '@/components/FacilityStats';\nimport { useIsMounted } from '@/hooks/useIsMounted';\nimport { formatEther } from 'viem/utils';\nimport { Modal } from '@/components/Modal';\n\ntype Tab = 'resources' | 'space' | 'selectedTile';\n\ninterface SelectedTile {\n  x: number;\n  y: number;\n}\n\ninterface FacilityData {\n  level: bigint;\n  power: bigint;\n  miners: bigint;\n  capacity: bigint;\n  used: bigint;\n  resources: bigint;\n  spaces: bigint;\n}\n\ninterface MinerData {\n  minerIndex: bigint;\n  id: bigint;\n  x: bigint;\n  y: bigint;\n  hashrate: bigint;\n  powerConsumption: bigint;\n  cost: bigint;\n}\n\nexport default function RoomPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { address, isConnected } = useAccount();\n  const gameState = useGameState();\n  const { apeBalance, bitBalance } = useTokenBalance();\n  const [activeTab, setActiveTab] = useState<Tab>('resources');\n  const [isBuyModalOpen, setIsBuyModalOpen] = useState(false);\n  const [isProfileModalOpen, setIsProfileModalOpen] = useState(false);\n  const [isReferralModalOpen, setIsReferralModalOpen] = useState(false);\n  const [isUpgradeModalOpen, setIsUpgradeModalOpen] = useState(false);\n  const [selectedTile, setSelectedTile] = useState<SelectedTile | null>(null);\n  const [showMinerModal, setShowMinerModal] = useState(false);\n  const [isGridModeActive, setIsGridModeActive] = useState(false);\n  const isMounted = useIsMounted();\n\n  // Get player facility data directly from contract\n  const { data: facilityData } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'getPlayerFacility',\n    args: [address || zeroAddress],\n    query: {\n      enabled: Boolean(address)\n    }\n  });\n\n  // Get player miners - currently mocked since not in ABI\n  const playerMiners: bigint[] = [];\n\n  // Get free miner data (index 1) - currently mocked since not in ABI\n  const freeMinerData: MinerData = {\n    minerIndex: BigInt(1),\n    id: BigInt(0),\n    x: BigInt(0),\n    y: BigInt(0),\n    hashrate: BigInt(100),\n    powerConsumption: BigInt(1),\n    cost: BigInt(0)\n  };\n\n  // Process facility data\n  const facility = facilityData as FacilityData | undefined;\n  \n  // Check if selected tile has a miner\n  const selectedTileHasMiner = (x: number, y: number): boolean => {\n    if (!playerMiners || playerMiners.length === 0) {\n      return false;\n    }\n    // Implementation would check if any miner exists at the given coordinates\n    return false;\n  };\n\n  // Redirect if not connected or trying to access someone else's room\n  useEffect(() => {\n    if (!isConnected) {\n      router.push('/');\n    } else if (address && params?.address && \n      (typeof params.address === 'string') && \n      address.toLowerCase() !== params.address.toLowerCase()) {\n      router.push(`/room/${address}`);\n    }\n  }, [isConnected, address, params?.address, router]);\n\n  if (!isConnected || !address) {\n    return null;\n  }\n\n  const renderTabContent = () => {\n    if (!gameState.hasFacility) {\n      return (\n        <div className=\"text-center p-4\">\n          <p>Purchase a facility to view details</p>\n          <div className=\"mt-6\">\n            <button \n              onClick={() => setIsBuyModalOpen(true)}\n              className=\"pixel-button\"\n            >\n              BUY FACILITY\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    switch (activeTab) {\n      case 'resources':\n        return (\n          <div className=\"p-4 space-y-4\">\n            <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n              <span className=\"text-white/80\">APE BALANCE</span>\n              <span className=\"text-white font-semibold\">\n                {apeBalance} APE\n              </span>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n              <span className=\"text-white/80\">BIT BALANCE</span>\n              <span className=\"text-white font-semibold\">\n                {bitBalance} BIT\n              </span>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n              <span className=\"text-white/80\">SPACES LEFT</span>\n              <span className=\"text-white font-semibold\">\n                {facility ? Number(facility.maxMiners) - Number(facility.currMiners) : 0} SPACES\n              </span>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2\">\n              <span className=\"text-white/80\">GIGAWATTS AVAILABLE</span>\n              <span className=\"text-white font-semibold\">\n                {facility ? Number(facility.totalPowerOutput) - Number(facility.currPowerOutput) : 0} GW\n              </span>\n            </div>\n          </div>\n        );\n        \n      case 'space':\n        return (\n          <div className=\"p-4 space-y-4\">\n            <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n              <span className=\"text-white/80\">YOUR MINING ROOM</span>\n              <span className=\"text-white font-semibold\">1</span>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n              <span className=\"text-white/80\">TOTAL SPACES</span>\n              <span className=\"text-white font-semibold\">\n                {facility ? Number(facility.maxMiners) : 4} SPACES\n              </span>\n            </div>\n            \n            <div className=\"flex justify-between items-center py-2\">\n              <span className=\"text-white/80\">TOTAL GIGAWATTS</span>\n              <span className=\"text-white font-semibold\">\n                {facility ? Number(facility.totalPowerOutput) : 28} GW\n              </span>\n            </div>\n\n            <div className=\"mt-4\">\n              <button\n                onClick={() => setIsUpgradeModalOpen(true)}\n                className=\"w-full pixel-button bg-royal text-white\"\n              >\n                UPGRADE FACILITY\n              </button>\n            </div>\n          </div>\n        );\n        \n      case 'selectedTile':\n        return (\n          <div className=\"p-4\">\n            {selectedTile ? (\n              <div className=\"space-y-4\">\n                <div className=\"text-center\">\n                  <h3 className=\"text-xl font-semibold mb-2\">GRID SPACE {selectedTile.x},{selectedTile.y}</h3>\n                </div>\n                \n                {selectedTileHasMiner(selectedTile.x, selectedTile.y) ? (\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n                      <span className=\"text-white/80\">MINER TYPE</span>\n                      <span className=\"text-white font-semibold\">BASIC MINER</span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n                      <span className=\"text-white/80\">HASHRATE</span>\n                      <span className=\"text-white font-semibold\">100 H/s</span>\n                    </div>\n                    <div className=\"flex justify-between items-center py-2\">\n                      <span className=\"text-white/80\">POWER USAGE</span>\n                      <span className=\"text-white font-semibold\">1 GW</span>\n                    </div>\n                    <button\n                      className=\"w-full mt-4 pixel-button bg-banana text-royal\"\n                    >\n                      UPGRADE MINER\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    <p className=\"text-center text-white/80\">This space is empty. Add a miner to start earning APE.</p>\n                    <button\n                      onClick={() => setIsBuyModalOpen(true)}\n                      className=\"w-full mt-2 pixel-button bg-banana text-royal\"\n                    >\n                      BUY MINER\n                    </button>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center p-4\">\n                <p>Select a tile to view or add miners</p>\n                <p className=\"text-sm text-white/60 mt-2\">Click GRID button then select a space</p>\n              </div>\n            )}\n          </div>\n        );\n        \n      default:\n        return <div>Select a tab</div>;\n    }\n  };\n\n  const getLocationDescription = (tile: SelectedTile) => {\n    if (tile.x === 0 && tile.y === 0) return \"NEAR BED\";\n    if (tile.x === 1 && tile.y === 0) return \"NEAR BANANA BOXES\";\n    if (tile.x === 0 && tile.y === 1) return \"NEAR JUKEBOX\";\n    if (tile.x === 1 && tile.y === 1) return \"NEAR CONTROL PANEL\";\n    return \"UNKNOWN LOCATION\";\n  };\n\n  const handleTileSelect = (x: number, y: number) => {\n    setSelectedTile({ x, y });\n    setActiveTab('selectedTile');\n  };\n\n  const handlePurchaseFacility = async () => {\n    setIsBuyModalOpen(true);\n    return Promise.resolve();\n  };\n\n  const handleUpgradeFacility = async () => {\n    setIsUpgradeModalOpen(true);\n  };\n\n  const handleMinerPurchase = async (x: number, y: number) => {\n    if (!selectedTile) return;\n    await gameState.getStarterMiner(x, y);\n    setShowMinerModal(false);\n  };\n  \n  const toggleGridMode = () => {\n    setIsGridModeActive(!isGridModeActive);\n  };\n\n  const handleGetStarterMiner = async () => {\n    if (!selectedTile) return;\n    await gameState.getStarterMiner(selectedTile.x, selectedTile.y);\n    setIsBuyModalOpen(false);\n  };\n\n  if (!isMounted) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-royal\">\n      {/* Header */}\n      <header className=\"nav-bar flex justify-between items-center px-6 py-4\">\n        <div className=\"flex items-center\">\n          <Image\n            src=\"/bitape-logo.svg\"\n            alt=\"BitApe Logo\"\n            width={32}\n            height={32}\n            className=\"mr-2 pixel-art\"\n          />\n          <span className=\"font-press-start text-banana text-xl\">bitape</span>\n        </div>\n        <nav className=\"flex items-center gap-4\">\n          <Link href=\"/about\" className=\"font-press-start text-white hover:text-banana\">\n            ABOUT\n          </Link>\n          <Link href=\"/trade\" className=\"font-press-start text-white hover:text-banana\">\n            TRADE $BIT\n          </Link>\n          <Link href=\"/leaderboard\" className=\"font-press-start text-[#4A5568] hover:text-banana\">\n            LEADERBOARD\n          </Link>\n          <button className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\">\n            ANNOUNCEMENTS\n          </button>\n          <button \n            onClick={() => setIsReferralModalOpen(true)}\n            className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\"\n          >\n            REFER A FRIEND\n          </button>\n          <button \n            onClick={() => setIsProfileModalOpen(true)}\n            className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\"\n          >\n            PROFILE\n          </button>\n        </nav>\n      </header>\n\n      <div className=\"grid grid-cols-12 gap-6 p-6\">\n        {/* Left Column */}\n        <div className=\"col-span-4\">\n          {/* Tabs */}\n          <div className=\"bg-royal border-2 border-banana rounded-lg overflow-hidden mb-6\">\n            <div className=\"flex border-b-2 border-banana\">\n              <button\n                className={`px-4 py-2 flex-1 font-press-start text-sm ${activeTab === 'resources' ? 'bg-banana text-royal' : 'text-banana'}`}\n                onClick={() => setActiveTab('resources')}\n              >\n                RESOURCES\n              </button>\n              <button\n                className={`px-4 py-2 flex-1 font-press-start text-sm ${activeTab === 'space' ? 'bg-banana text-royal' : 'text-banana'}`}\n                onClick={() => setActiveTab('space')}\n              >\n                SPACE\n              </button>\n              <button\n                className={`px-4 py-2 flex-1 font-press-start text-sm ${activeTab === 'selectedTile' ? 'bg-banana text-royal' : 'text-banana'}`}\n                onClick={() => setActiveTab('selectedTile')}\n              >\n                SELECTED TILE\n              </button>\n            </div>\n            {renderTabContent()}\n          </div>\n\n          {/* Stats Panel */}\n          <div className=\"bg-royal border-2 border-banana rounded-lg overflow-hidden mb-6\">\n            <div className=\"flex border-b-2 border-banana px-4 py-2\">\n              <button className=\"font-press-start text-sm text-banana mr-4\">SIMPLE</button>\n              <button className=\"font-press-start text-sm text-[#4A5568]\">PRO</button>\n            </div>\n            <div className=\"p-4 space-y-2 font-press-start text-white\">\n              <p>- YOU ARE MINING {gameState.miningRate || 0} BitApe A DAY</p>\n              <p>- YOUR HASH RATE IS {gameState.hashRate || 0} GH/S</p>\n              <p>- {gameState.blocksUntilHalving || 0} BLOCKS UNTIL NEXT HALVENING</p>\n              <p>- YOU HAVE {gameState.networkHashRatePercentage || 0}% OF THE TOTAL NETWORK HASH RATE ({gameState.totalNetworkHashRate || 0} GH/S)</p>\n            </div>\n          </div>\n\n          {/* Mining Panel */}\n          <div className=\"bg-royal border-2 border-banana rounded-lg overflow-hidden\">\n            <div className=\"p-4 text-center font-press-start\">\n              <p className=\"text-white mb-4\">YOU HAVE MINED {gameState.minedBit || 0} $BIT</p>\n              <button \n                onClick={() => gameState.claimReward()}\n                disabled={gameState.isClaimingReward || !gameState.hasFacility}\n                className=\"w-full bg-dark-blue text-banana py-2 px-4 hover:bg-opacity-80 disabled:opacity-50 border-2 border-banana\"\n              >\n                CLAIM MINED $BIT\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Room Area */}\n        <div className=\"col-span-8\">\n          <div className=\"relative w-full aspect-square border-4 border-banana rounded-lg overflow-hidden\">\n            <RoomVisualization \n              hasFacility={gameState.hasFacility}\n              facilityData={facility ? {\n                power: Number(facility.totalPowerOutput),\n                level: Number(facility.level),\n                miners: Number(facility.miners),\n                capacity: Number(facility.capacity),\n                used: Number(facility.used),\n                resources: Number(facility.resources),\n                spaces: Number(facility.spaces)\n              } : undefined}\n              onPurchaseFacility={handlePurchaseFacility}\n              onGetStarterMiner={gameState.getStarterMiner}\n              onUpgradeFacility={handleUpgradeFacility}\n              isPurchasingFacility={gameState.isPurchasingFacility}\n              isGettingStarterMiner={gameState.isGettingStarterMiner}\n              isUpgradingFacility={gameState.isUpgradingFacility}\n              onTileSelect={handleTileSelect}\n              address={address as Address}\n              isGridMode={isGridModeActive}\n              toggleGridMode={toggleGridMode}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Buy Facility Modal */}\n      <BuyFacilityModal \n        isOpen={isBuyModalOpen}\n        onClose={() => setIsBuyModalOpen(false)}\n        onConfirm={() => {\n          setIsBuyModalOpen(false);\n          // Refresh the game state after purchase\n          gameState.refetch?.();\n        }}\n      />\n\n      {/* Profile Modal */}\n      {isConnected && address && (\n        <AccountModal\n          isOpen={isProfileModalOpen}\n          onClose={() => setIsProfileModalOpen(false)}\n          address={address}\n          apeBalance={apeBalance}\n          bitBalance={bitBalance}\n        />\n      )}\n\n      {/* Referral Modal */}\n      <ReferralModal\n        isOpen={isReferralModalOpen}\n        onClose={() => setIsReferralModalOpen(false)}\n        totalReferrals={gameState.totalReferrals || 0}\n        totalBigEarned={gameState.totalBigEarned || '0.00'}\n      />\n\n      {/* Miner Purchase Modal */}\n      {showMinerModal && selectedTile && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-royal border-2 border-banana p-6 rounded-lg max-w-3xl w-full\">\n            <h2 className=\"text-banana font-press-start text-xl mb-6\">BUY MINER</h2>\n            \n            <div className=\"bg-dark-blue p-4 mb-4\">\n              <p className=\"text-white font-press-start mb-2\">SELECTED LOCATION: ({selectedTile.x}, {selectedTile.y})</p>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-6\">\n              <div className=\"border-r border-banana pr-4\">\n                <div className=\"bg-dark-blue p-3 mb-2 flex items-center\">\n                  <div className=\"w-8 h-8 bg-banana rounded-full mr-3\"></div>\n                  <span className=\"text-banana font-press-start\">POTATO MINER</span>\n                </div>\n                <div className=\"bg-dark-blue p-3 mb-2 flex items-center opacity-50\">\n                  <div className=\"w-8 h-8 bg-banana rounded-full mr-3\"></div>\n                  <span className=\"text-banana font-press-start\">RASPBERRY PI</span>\n                </div>\n                <div className=\"bg-dark-blue p-3 mb-2 flex items-center opacity-50\">\n                  <div className=\"w-8 h-8 bg-banana rounded-full mr-3\"></div>\n                  <span className=\"text-banana font-press-start\">OLD DESKTOP</span>\n                </div>\n                <div className=\"bg-dark-blue p-3 mb-2 flex items-center opacity-50\">\n                  <div className=\"w-8 h-8 bg-banana rounded-full mr-3\"></div>\n                  <span className=\"text-banana font-press-start\">SINGLE GPU</span>\n                </div>\n              </div>\n              \n              <div>\n                <h3 className=\"text-banana font-press-start mb-4\">POTATO MINER</h3>\n                <div className=\"w-32 h-32 bg-gray-800 mx-auto mb-4\"></div>\n                <p className=\"text-white font-press-start\">- HASH RATE: {Number(freeMinerData.hashrate)} GH/S</p>\n                <p className=\"text-white font-press-start\">- PRICE: 0 $BIT</p>\n                <p className=\"text-white font-press-start\">- ENERGY: {Number(freeMinerData.powerConsumption)} WATTS</p>\n                <p className=\"text-green-400 font-press-start mt-4\">YOUR FIRST POTATO MINER IS FREE!</p>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between mt-8\">\n              <button \n                className=\"pixel-button bg-transparent\"\n                onClick={() => setShowMinerModal(false)}\n              >\n                CANCEL\n              </button>\n              <button \n                className=\"pixel-button bg-banana text-royal\"\n                onClick={() => handleMinerPurchase(selectedTile.x, selectedTile.y)}\n                disabled={gameState.isGettingStarterMiner}\n              >\n                {gameState.isGettingStarterMiner ? 'CONNECTING...' : 'GET FREE MINER'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Upgrade Facility Modal */}\n      <Modal \n        isOpen={isUpgradeModalOpen} \n        onClose={() => setIsUpgradeModalOpen(false)}\n        title=\"Upgrade Facility\"\n      >\n        <div className=\"p-4 space-y-4\">\n          <div className=\"text-center mb-4\">\n            <h3 className=\"text-xl font-semibold\">UPGRADE TO LEVEL {facility ? Number(facility.level) + 1 : 2}</h3>\n            <p className=\"text-sm text-white/70 mt-1\">Increases capacity and power</p>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n              <span className=\"text-white/80\">CURRENT LEVEL</span>\n              <span className=\"text-white font-semibold\">{facility ? Number(facility.level) : 1}</span>\n            </div>\n            <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n              <span className=\"text-white/80\">NEW CAPACITY</span>\n              <span className=\"text-white font-semibold\">{facility ? Number(facility.capacity) + 2 : 6} SPACES</span>\n            </div>\n            <div className=\"flex justify-between items-center py-2 border-b border-white/20\">\n              <span className=\"text-white/80\">NEW POWER</span>\n              <span className=\"text-white font-semibold\">{facility ? Number(facility.power) + 2 : 6} GW</span>\n            </div>\n            <div className=\"flex justify-between items-center py-2\">\n              <span className=\"text-white/80\">COST</span>\n              <span className=\"text-white font-semibold\">\n                {facility ? Number(facility.level) * 0.5 : 0.5} APE\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"flex space-x-4 mt-6\">\n            <button\n              onClick={() => setIsUpgradeModalOpen(false)}\n              className=\"w-1/2 pixel-button bg-transparent border border-white/50 text-white\"\n            >\n              CANCEL\n            </button>\n            <button\n              className=\"w-1/2 pixel-button bg-banana text-royal\"\n            >\n              UPGRADE\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}