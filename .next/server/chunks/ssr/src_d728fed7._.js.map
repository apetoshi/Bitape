{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/config/contracts.ts"],"sourcesContent":["// ApeChain Network Configuration\nexport const APECHAIN_ID = 33139;\n\n// Contract Addresses on ApeChain\nexport const CONTRACT_ADDRESSES = {\n  APE_TOKEN: '0x4d224452801ACEd8B2F0aebE155379bb5D594381', // APE Token on ApeChain\n  BIT_TOKEN: '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5', // BIT token address\n  MINING_CONTROLLER: '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6', // Mining controller address\n} as const;\n\n// Minimal ABIs for token interactions\nexport const ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', type: 'uint8' }],\n    type: 'function',\n  },\n] as const;\n\n// Mining Controller ABI\nexport const MINING_CONTROLLER_ABI = [\n  // Read functions\n  'function facilities(address user) view returns (uint256 power, uint256 level, uint256 lastClaimBlock)',\n  'function totalPower() view returns (uint256)',\n  'function rewardPerBlock() view returns (uint256)',\n  'function getUnclaimedRewards(address user) view returns (uint256)',\n  'function getUserMiningRate(address user) view returns (uint256)',\n  'function getNetworkHashRate() view returns (uint256)',\n  'function getUserHashRate(address user) view returns (uint256)',\n  'function getBlocksUntilHalving() view returns (uint256)',\n  'function getTotalMinedBit() view returns (uint256)',\n  'function getBurnedBit() view returns (uint256)',\n  \n  // Write functions\n  'function purchaseInitialFacility(address referrer) payable returns (bool)',\n  'function getStarterMiner() returns (bool)',\n  'function claimReward() returns (bool)',\n  'function upgradeFacility() returns (bool)',\n] as const;\n\nexport const APE_TOKEN_ADDRESS = '0x4d224452801ACEd8B2F0aebE155379bb5D594381' as const;\nexport const BIT_TOKEN_ADDRESS = '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5' as const; "],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;;;AAC1B,MAAM,cAAc;AAGpB,MAAM,qBAAqB;IAChC,WAAW;IACX,WAAW;IACX,mBAAmB;AACrB;AAGO,MAAM,YAAY;IACvB;QACE,UAAU;QACV,QAAQ;YAAC;gBAAE,MAAM;gBAAU,MAAM;YAAU;SAAE;QAC7C,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAW,MAAM;YAAU;SAAE;QAC/C,MAAM;IACR;IACA;QACE,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAI,MAAM;YAAQ;SAAE;QACtC,MAAM;IACR;CACD;AAGM,MAAM,wBAAwB;IACnC,iBAAiB;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,kBAAkB;IAClB;IACA;IACA;IACA;CACD;AAEM,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useGameState.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract, useBalance, useContractRead } from 'wagmi';\nimport { formatEther, parseEther } from 'viem';\nimport { CONTRACT_ADDRESSES, MINING_CONTROLLER_ABI, ERC20_ABI, APECHAIN_ID } from '../config/contracts';\nimport { useEffect, useState } from 'react';\n\nexport interface GameState {\n  // User state\n  isConnected: boolean;\n  address: string | undefined;\n  \n  // Resources\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n  \n  // Mining stats\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  \n  // Network stats\n  totalMinedBit: string;\n  burnedBit: string;\n  rewardPerBlock: string;\n  \n  // Mining rewards\n  minedBit: string;\n  \n  // Facility state\n  hasFacility: boolean;\n  facilityLevel: number;\n  facilityPower: number;\n  \n  // Actions\n  purchaseFacility: (referrer?: string) => Promise<void>;\n  getStarterMiner: () => Promise<void>;\n  claimReward: () => Promise<void>;\n  upgradeFacility: () => Promise<void>;\n  \n  // Loading states\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isClaimingReward: boolean;\n  isUpgradingFacility: boolean;\n\n  // New fields\n  isGameActive: boolean;\n  isUserActive: boolean;\n}\n\nexport function useGameState(): GameState {\n  const { address, isConnected } = useAccount();\n  \n  // State variables\n  const [apeBalance, setApeBalance] = useState('0');\n  const [bitBalance, setBitBalance] = useState('0');\n  const [minedBit, setMinedBit] = useState('0');\n  const [hasFacility, setHasFacility] = useState(false);\n  const [facilityLevel, setFacilityLevel] = useState(0);\n  const [facilityPower, setFacilityPower] = useState(0);\n  const [spacesLeft, setSpacesLeft] = useState(0);\n  const [gigawattsAvailable, setGigawattsAvailable] = useState(0);\n  const [miningRate, setMiningRate] = useState('0');\n  const [hashRate, setHashRate] = useState('0');\n  const [blocksUntilHalving, setBlocksUntilHalving] = useState('0');\n  const [networkHashRatePercentage, setNetworkHashRatePercentage] = useState('0');\n  const [totalNetworkHashRate, setTotalNetworkHashRate] = useState('0');\n  \n  // Get native APE balance\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get BIT token balance\n  const { data: bitBalanceData } = useReadContract({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  // Contract read hooks\n  const { data: facilityData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'facilities',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  const { data: totalPowerData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'totalPower',\n    query: {\n      enabled: isConnected,\n    },\n  });\n  \n  const { data: rewardPerBlockData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'rewardPerBlock',\n    query: {\n      enabled: isConnected,\n    },\n  });\n  \n  // Contract write hooks\n  const { writeContractAsync: writeMainContract, isPending: isMainContractPending } = useWriteContract();\n  \n  // Loading states\n  const [isPurchasingFacility, setIsPurchasingFacility] = useState(false);\n  const [isGettingStarterMiner, setIsGettingStarterMiner] = useState(false);\n  const [isClaimingReward, setIsClaimingReward] = useState(false);\n  const [isUpgradingFacility, setIsUpgradingFacility] = useState(false);\n  \n  // Update state based on contract data\n  useEffect(() => {\n    if (facilityData) {\n      const [power, level, lastClaimBlock] = facilityData as [bigint, bigint, bigint];\n      setFacilityPower(Number(power));\n      setFacilityLevel(Number(level));\n      setHasFacility(Number(power) > 0);\n      \n      // Calculate available gigawatts based on facility power\n      setGigawattsAvailable(Number(power) / 1000); // Assuming 1 GW = 1000 power units\n      \n      // Calculate spaces left (placeholder logic)\n      setSpacesLeft(0); // In BitApe, users have one facility\n      \n      // Calculate mining rate if facility exists\n      if (Number(power) > 0 && totalPowerData && rewardPerBlockData) {\n        const playerPower = Number(power);\n        const totalPower = Number(totalPowerData);\n        const rewardPerBlock = Number(rewardPerBlockData);\n        \n        // Calculate mining rate (BIT per day)\n        const blocksPerDay = 7200; // Approximate blocks per day\n        const dailyReward = (playerPower / totalPower) * rewardPerBlock * blocksPerDay;\n        setMiningRate(dailyReward.toFixed(2));\n        \n        // Set hash rate (GH/s)\n        setHashRate((playerPower * 228).toFixed(0)); // Simplified calculation\n        \n        // Network hash rate percentage\n        const percentage = (playerPower / totalPower) * 100;\n        setNetworkHashRatePercentage(percentage.toFixed(6));\n        \n        // Total network hash rate\n        setTotalNetworkHashRate((totalPower * 228).toFixed(0));\n        \n        // Blocks until halving (placeholder)\n        setBlocksUntilHalving('3,284,172');\n        \n        // Calculate mined BIT (placeholder)\n        setMinedBit('0.5107');\n      }\n    }\n  }, [facilityData, totalPowerData, rewardPerBlockData]);\n  \n  // Update APE balance\n  useEffect(() => {\n    if (apeBalanceData) {\n      setApeBalance(apeBalanceData.formatted);\n    } else {\n      setApeBalance('0');\n    }\n  }, [apeBalanceData]);\n  \n  // Update BIT balance\n  useEffect(() => {\n    if (bitBalanceData) {\n      setBitBalance(formatEther(bitBalanceData as bigint));\n    } else {\n      setBitBalance('0');\n    }\n  }, [bitBalanceData]);\n  \n  // Action functions\n  const purchaseFacility = async (referrer?: string) => {\n    if (!isConnected || !address) return;\n    \n    try {\n      setIsPurchasingFacility(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [referrer || '0x0000000000000000000000000000000000000000'],\n        value: parseEther('10.003'), // Initial facility price + fees\n      });\n      \n      // Refresh data after purchase\n      // This would typically be handled by listening for events\n      \n    } catch (error) {\n      console.error('Error purchasing facility:', error);\n    } finally {\n      setIsPurchasingFacility(false);\n    }\n  };\n  \n  const getStarterMiner = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsGettingStarterMiner(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'getStarterMiner',\n      });\n      \n      // Refresh data after getting starter miner\n      \n    } catch (error) {\n      console.error('Error getting starter miner:', error);\n    } finally {\n      setIsGettingStarterMiner(false);\n    }\n  };\n  \n  const claimReward = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsClaimingReward(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'claimReward',\n      });\n      \n      // Reset mined BIT after claiming\n      setMinedBit('0');\n      \n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    } finally {\n      setIsClaimingReward(false);\n    }\n  };\n  \n  const upgradeFacility = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsUpgradingFacility(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'upgradeFacility',\n      });\n      \n      // Refresh facility data after upgrade\n      \n    } catch (error) {\n      console.error('Error upgrading facility:', error);\n    } finally {\n      setIsUpgradingFacility(false);\n    }\n  };\n  \n  const { data: isGameActive } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isGameActive',\n    query: {\n      enabled: true,\n    },\n  });\n\n  const { data: isUserActive } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isUserActive',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  return {\n    isConnected,\n    address,\n    apeBalance,\n    bitBalance,\n    spacesLeft,\n    gigawattsAvailable,\n    miningRate,\n    hashRate,\n    blocksUntilHalving,\n    networkHashRatePercentage,\n    totalNetworkHashRate,\n    totalMinedBit: '2,211,552.572', // Placeholder values until we get real data\n    burnedBit: '1,238,626.5',\n    rewardPerBlock: '2.5',\n    minedBit,\n    hasFacility,\n    facilityLevel,\n    facilityPower,\n    purchaseFacility,\n    getStarterMiner,\n    claimReward,\n    upgradeFacility,\n    isPurchasingFacility,\n    isGettingStarterMiner,\n    isClaimingReward,\n    isUpgradingFacility,\n    isGameActive: !!isGameActive,\n    isUserActive: !!isUserActive,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useTokenBalance.ts"],"sourcesContent":["'use client';\n\nimport { useAccount, useContractRead, useBalance } from 'wagmi';\nimport { formatUnits } from 'viem';\nimport { APECHAIN_ID, CONTRACT_ADDRESSES, ERC20_ABI } from '../config/contracts';\n\nexport function useTokenBalance() {\n  const { address } = useAccount();\n\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  const { data: bitBalance } = useContractRead({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  return {\n    apeBalance: apeBalanceData?.formatted ?? '0',\n    bitBalance: bitBalance ? formatUnits(bitBalance as bigint, 18) : '0',\n  };\n} "],"names":[],"mappings":";;;AAEA;AAAA;AAAA;AACA;AACA;AAJA;;;;AAMO,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD,EAAE;QAC1C,SAAS;QACT,SAAS,0HAAA,CAAA,cAAW;QACpB,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,MAAM,EAAE,MAAM,UAAU,EAAE,GAAG,CAAA,GAAA,sNAAA,CAAA,kBAAe,AAAD,EAAE;QAC3C,SAAS,0HAAA,CAAA,qBAAkB,CAAC,SAAS;QACrC,KAAK,0HAAA,CAAA,YAAS;QACd,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,OAAO;QACL,YAAY,gBAAgB,aAAa;QACzC,YAAY,aAAa,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD,EAAE,YAAsB,MAAM;IACnE;AACF","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/BuyFacilityModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport { Dialog } from '@headlessui/react';\nimport { useContractWrite, useAccount } from 'wagmi';\nimport { parseEther } from 'viem';\nimport { MAIN_CONTRACT_ADDRESS, MAIN_CONTRACT_ABI } from '@/config/contracts';\n\ninterface BuyFacilityModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nconst BuyFacilityModal: React.FC<BuyFacilityModalProps> = ({\n  isOpen,\n  onClose,\n  onConfirm\n}) => {\n  const { address } = useAccount();\n  \n  // Get referrer from URL if it exists\n  const getReferrer = () => {\n    if (typeof window === 'undefined') return '0x0000000000000000000000000000000000000000';\n    const urlParams = new URLSearchParams(window.location.search);\n    const ref = urlParams.get('ref');\n    return ref || '0x0000000000000000000000000000000000000000';\n  };\n\n  const { write: purchaseFacility, isLoading } = useContractWrite({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'purchaseInitialFacility',\n    args: [getReferrer()],\n    value: parseEther('0.02'), // 0.02 ETH as shown in the UI\n  });\n\n  const handlePurchase = async () => {\n    try {\n      await purchaseFacility();\n      onConfirm();\n    } catch (error) {\n      console.error('Failed to purchase facility:', error);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      className=\"relative z-50\"\n    >\n      <div className=\"fixed inset-0 bg-black/70\" aria-hidden=\"true\" />\n      \n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-2xl bg-royal border-4 border-banana rounded-lg shadow-xl\">\n          <div className=\"p-6\">\n            <Dialog.Title className=\"text-xl font-press-start text-center text-banana mb-4\">\n              PURCHASE YOUR FIRST MINING SPACE\n            </Dialog.Title>\n            \n            <p className=\"text-sm font-press-start text-center text-white mb-6\">\n              Start mining BitApe with your own mining facility!\n            </p>\n\n            <div className=\"relative w-full h-48 mb-6\">\n              <Image\n                src=\"/bedroom.png\"\n                alt=\"Mining Facility\"\n                fill\n                className=\"object-contain pixel-art\"\n                priority\n              />\n            </div>\n\n            <div className=\"space-y-4 mb-6\">\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Power Output:</span>\n                <span className=\"text-banana\">20 WATTS</span>\n              </div>\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Space Capacity:</span>\n                <span className=\"text-banana\">4 UNITS</span>\n              </div>\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Price:</span>\n                <span className=\"text-banana\">0.02 ETH</span>\n              </div>\n            </div>\n\n            <div className=\"bg-royal-blue p-4 rounded-lg mb-6\">\n              <p className=\"text-center font-press-start text-banana text-sm\">\n                FREE STARTER MINER INCLUDED!\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4\">\n              <button\n                onClick={onClose}\n                className=\"px-6 py-2 bg-transparent font-press-start text-banana text-sm border-2 border-banana hover:bg-banana hover:text-royal transition-colors\"\n              >\n                CANCEL\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isLoading}\n                className=\"px-6 py-2 bg-banana font-press-start text-royal text-sm hover:bg-banana-dark transition-colors disabled:opacity-50\"\n              >\n                {isLoading ? 'PURCHASING...' : 'PURCHASE NOW'}\n              </button>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default BuyFacilityModal; "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AACA;AACA;AAPA;;;;;;;AAeA,MAAM,mBAAoD,CAAC,EACzD,MAAM,EACN,OAAO,EACP,SAAS,EACV;IACC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD;IAE7B,qCAAqC;IACrC,MAAM,cAAc;QAClB,wCAAmC,OAAO;;QAC1C,MAAM;QACN,MAAM;IAER;IAEA,MAAM,EAAE,OAAO,gBAAgB,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,yNAAA,CAAA,mBAAgB,AAAD,EAAE;QAC9D,SAAS,0HAAA,CAAA,wBAAqB;QAC9B,KAAK,0HAAA,CAAA,oBAAiB;QACtB,cAAc;QACd,MAAM;YAAC;SAAc;QACrB,OAAO,CAAA,GAAA,2JAAA,CAAA,aAAU,AAAD,EAAE;IACpB;IAEA,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM;YACN;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC,+KAAA,CAAA,SAAM;QACL,MAAM;QACN,SAAS;QACT,WAAU;;0BAEV,8OAAC;gBAAI,WAAU;gBAA4B,eAAY;;;;;;0BAEvD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+KAAA,CAAA,SAAM,CAAC,KAAK;oBAAC,WAAU;8BACtB,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,+KAAA,CAAA,SAAM,CAAC,KAAK;gCAAC,WAAU;0CAAwD;;;;;;0CAIhF,8OAAC;gCAAE,WAAU;0CAAuD;;;;;;0CAIpE,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,IAAI;oCACJ,WAAU;oCACV,QAAQ;;;;;;;;;;;0CAIZ,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,8OAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;kDAEhC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,8OAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;kDAEhC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,8OAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;;;;;;;0CAIlC,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAE,WAAU;8CAAmD;;;;;;;;;;;0CAKlE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;kDAGD,8OAAC;wCACC,SAAS;wCACT,UAAU;wCACV,WAAU;kDAET,YAAY,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/C;uCAEe","debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/AccountModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useAccount, useDisconnect } from 'wagmi';\n\ninterface AccountModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  address: string;\n  apeBalance: string;\n  bitBalance: string;\n}\n\nconst AccountModal: React.FC<AccountModalProps> = ({\n  isOpen,\n  onClose,\n  address,\n  apeBalance,\n  bitBalance\n}) => {\n  const { disconnect } = useDisconnect();\n\n  if (!isOpen) return null;\n\n  // Format address for display (truncate middle)\n  const displayAddress = `${address.slice(0, 6)}...${address.slice(-4)}`;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black/70\">\n      <div className=\"bg-royal p-6 max-w-lg w-full mx-4 border-2 border-banana\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"font-press-start text-2xl text-banana\">ACCOUNT</h2>\n          <button \n            onClick={onClose}\n            className=\"text-white hover:text-banana font-press-start text-xl\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Account Info Section */}\n        <div className=\"bg-royal-dark p-4 mb-6\">\n          <h3 className=\"font-press-start text-white mb-4\">\n            YOUR ACCOUNT INFORMATION AND BALANCES\n          </h3>\n\n          {/* Wallet Address */}\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm mb-2\">WALLET ADDRESS</p>\n            <div className=\"flex justify-between items-center bg-royal p-2\">\n              <span className=\"font-press-start text-sm text-white\">{displayAddress}</span>\n              <button \n                className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-4 py-1 font-press-start text-sm transition-colors\"\n                onClick={() => navigator.clipboard.writeText(address)}\n              >\n                COPY\n              </button>\n            </div>\n          </div>\n\n          {/* Balances */}\n          <div className=\"mb-2\">\n            <p className=\"font-press-start text-sm\">APE BALANCE</p>\n            <p className=\"font-press-start text-banana\">{apeBalance} APE</p>\n          </div>\n\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm\">BIT BALANCE</p>\n            <p className=\"font-press-start text-banana\">{bitBalance} BIT</p>\n          </div>\n\n          {/* Bridge Section */}\n          <div className=\"bg-royal p-4\">\n            <p className=\"font-press-start text-sm mb-2\">NEED TO BRIDGE APE TO APECHAIN?</p>\n            <button className=\"w-full bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal py-2 font-press-start flex justify-center items-center transition-colors\">\n              BRIDGE APE <span className=\"ml-2\">→</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Footer Buttons */}\n        <div className=\"flex justify-between\">\n          <button \n            onClick={onClose}\n            className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-6 py-2 font-press-start transition-colors\"\n          >\n            CLOSE\n          </button>\n          <button \n            onClick={() => {\n              disconnect();\n              onClose();\n            }}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 font-press-start transition-colors\"\n          >\n            DISCONNECT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountModal;\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAaA,MAAM,eAA4C,CAAC,EACjD,MAAM,EACN,OAAO,EACP,OAAO,EACP,UAAU,EACV,UAAU,EACX;IACC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD;IAEnC,IAAI,CAAC,QAAQ,OAAO;IAEpB,+CAA+C;IAC/C,MAAM,iBAAiB,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;IAEtE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAMH,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAKjD,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAK,WAAU;sDAAuC;;;;;;sDACvD,8OAAC;4CACC,WAAU;4CACV,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;sDAC9C;;;;;;;;;;;;;;;;;;sCAOL,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,8OAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAG1D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,8OAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAI1D,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,8OAAC;oCAAO,WAAU;;wCAAqK;sDAC1K,8OAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;8BAMxC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,8OAAC;4BACC,SAAS;gCACP;gCACA;4BACF;4BACA,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe","debugId":null}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/app/room/%5Baddress%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useParams, useRouter } from 'next/navigation';\nimport { useAccount } from 'wagmi';\nimport { useEffect } from 'react';\nimport { useGameState } from '@/hooks/useGameState';\nimport { useTokenBalance } from '@/hooks/useTokenBalance';\nimport BuyFacilityModal from '@/components/BuyFacilityModal';\nimport AccountModal from '@/components/AccountModal';\n\ntype Tab = 'RESOURCES' | 'SPACE' | 'SELECTED TILE';\n\nexport default function RoomPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { address, isConnected } = useAccount();\n  const gameState = useGameState();\n  const { apeBalance, bitBalance } = useTokenBalance();\n  const [activeTab, setActiveTab] = useState<Tab>('RESOURCES');\n  const [isBuyModalOpen, setIsBuyModalOpen] = useState(false);\n  const [isProfileModalOpen, setIsProfileModalOpen] = useState(false);\n\n  // Redirect if not connected or trying to access someone else's room\n  useEffect(() => {\n    if (!isConnected) {\n      router.push('/');\n    } else if (address && params?.address && \n      (typeof params.address === 'string') && \n      address.toLowerCase() !== params.address.toLowerCase()) {\n      router.push(`/room/${address}`);\n    }\n  }, [isConnected, address, params?.address, router]);\n\n  if (!isConnected || !address) {\n    return null;\n  }\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'RESOURCES':\n        return (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center gap-2 font-press-start text-white\">\n              <span className=\"text-banana\">💎</span>\n              <span>{apeBalance} APE</span>\n            </div>\n            <div className=\"flex items-center gap-2 font-press-start text-white\">\n              <span className=\"text-banana\">🪙</span>\n              <span>{bitBalance} BIT</span>\n            </div>\n            <div className=\"flex items-center gap-2 font-press-start text-white\">\n              <span className=\"text-banana\">🏠</span>\n              <span>0 SPACES LEFT</span>\n            </div>\n            <div className=\"flex items-center gap-2 font-press-start text-white\">\n              <span className=\"text-banana\">⚡</span>\n              <span>0 GIGAWATTS AVAILABLE</span>\n            </div>\n          </div>\n        );\n      case 'SPACE':\n        return (\n          <div className=\"font-press-start text-white space-y-4\">\n            <p>- NO MINING SPACE</p>\n            <p>- 0 TOTAL SPACES</p>\n            <p>- 0 TOTAL GIGAWATTS</p>\n            <p>- CANT MINE WITHOUT SPACE, BUDDY</p>\n            <div className=\"mt-6\">\n              <button \n                onClick={() => setIsBuyModalOpen(true)}\n                className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors px-6 py-2 font-press-start\"\n              >\n                UPGRADE\n              </button>\n            </div>\n          </div>\n        );\n      case 'SELECTED TILE':\n        return (\n          <div className=\"font-press-start text-white\">\n            <p>NO TILE SELECTED</p>\n            <p>CLICK ON A TILE TO VIEW ITS DETAILS</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-royal\">\n      {/* Header */}\n      <header className=\"nav-bar flex justify-between items-center px-6 py-4\">\n        <div className=\"flex items-center\">\n          <Image\n            src=\"/bitape-logo.svg\"\n            alt=\"BitApe Logo\"\n            width={32}\n            height={32}\n            className=\"mr-2 pixel-art\"\n          />\n          <span className=\"font-press-start text-banana text-xl\">bitape</span>\n        </div>\n        <nav className=\"flex items-center gap-4\">\n          <Link href=\"/about\" className=\"font-press-start text-white hover:text-banana\">\n            ABOUT\n          </Link>\n          <Link href=\"/trade\" className=\"font-press-start text-white hover:text-banana\">\n            TRADE $BIT\n          </Link>\n          <Link href=\"/leaderboard\" className=\"font-press-start text-[#4A5568] hover:text-banana\">\n            LEADERBOARD\n          </Link>\n          <button className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\">\n            ANNOUNCEMENTS\n          </button>\n          <button className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\">\n            REFER A FRIEND\n          </button>\n          <button \n            onClick={() => setIsProfileModalOpen(true)}\n            className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\"\n          >\n            PROFILE\n          </button>\n        </nav>\n      </header>\n\n      <div className=\"grid grid-cols-12 gap-6 p-6\">\n        {/* Left Column */}\n        <div className=\"col-span-4\">\n          {/* Resources Panel */}\n          <div className=\"panel p-4 mb-6\">\n            <div className=\"flex gap-4 font-press-start text-white mb-4\">\n              {(['RESOURCES', 'SPACE', 'SELECTED TILE'] as const).map((tab) => (\n                <button\n                  key={tab}\n                  onClick={() => setActiveTab(tab)}\n                  className={`${activeTab === tab ? 'text-banana' : 'text-[#4A5568]'}`}\n                >\n                  {tab}\n                </button>\n              ))}\n            </div>\n            {renderTabContent()}\n          </div>\n\n          {/* Stats Panel */}\n          <div className=\"panel p-4 mb-6\">\n            <div className=\"flex gap-4 font-press-start text-white mb-4\">\n              <button className=\"text-banana\">SIMPLE</button>\n              <button className=\"text-[#4A5568]\">PRO</button>\n            </div>\n            <div className=\"space-y-2 font-press-start text-white\">\n              <p>- YOU ARE MINING {gameState.miningRate} BitApe A DAY</p>\n              <p>- YOUR HASH RATE IS {gameState.hashRate} GH/S</p>\n              <p>- {gameState.blocksUntilHalving} BLOCKS UNTIL NEXT HALVENING</p>\n              <p>- YOU HAVE {gameState.networkHashRatePercentage}% OF THE TOTAL NETWORK HASH RATE ({gameState.totalNetworkHashRate} GH/S)</p>\n            </div>\n          </div>\n\n          {/* Mining Panel */}\n          <div className=\"panel p-4\">\n            <div className=\"text-center font-press-start\">\n              <p className=\"text-white mb-4\">YOU HAVE MINED {gameState.minedBit} $BIT</p>\n              <button \n                onClick={() => gameState.claimReward()}\n                disabled={gameState.isClaimingReward || !gameState.hasFacility}\n                className=\"w-full bg-royal text-banana py-2 px-4 hover:bg-royal-dark disabled:opacity-50 pixel-button\"\n              >\n                CLAIM MINED $BIT\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Right Column */}\n        <div className=\"col-span-8\">\n          <div className=\"panel p-8 h-full flex flex-col items-center justify-center\">\n            {!gameState.hasFacility ? (\n              <>\n                <h2 className=\"font-press-start text-white text-2xl mb-8\">YOU DON'T HAVE A SPACE TO MINE!</h2>\n                <button\n                  onClick={() => setIsBuyModalOpen(true)}\n                  className=\"font-press-start text-banana border-2 border-banana px-8 py-4 hover:bg-banana hover:text-royal pixel-button\"\n                >\n                  BUY FACILITY\n                </button>\n              </>\n            ) : (\n              <div className=\"w-full h-full flex items-center justify-center\">\n                <span className=\"font-press-start text-white\">Your mining facility will appear here</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* BIGBOY 9000 Label */}\n      <div className=\"absolute bottom-4 right-4\">\n        <span className=\"font-press-start text-banana\">BIGBOY 9000</span>\n      </div>\n\n      {/* Buy Facility Modal */}\n      <BuyFacilityModal \n        isOpen={isBuyModalOpen}\n        onClose={() => setIsBuyModalOpen(false)}\n        onConfirm={() => {\n          // Add your confirm logic here\n          setIsBuyModalOpen(false);\n        }}\n      />\n\n      {isConnected && address && (\n        <AccountModal\n          isOpen={isProfileModalOpen}\n          onClose={() => setIsProfileModalOpen(false)}\n          address={address}\n          apeBalance={apeBalance}\n          bitBalance={bitBalance}\n        />\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}