{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/config/contracts.ts"],"sourcesContent":["// ApeChain Network Configuration\nexport const APECHAIN_ID = 33139;\n\n// Contract Addresses on ApeChain\nexport const CONTRACT_ADDRESSES = {\n  APE_TOKEN: '0x4d224452801ACEd8B2F0aebE155379bb5D594381', // APE Token on ApeChain\n  BIT_TOKEN: '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5', // BIT token address\n  MINING_CONTROLLER: '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6', // Mining controller address\n} as const;\n\n// Minimal ABIs for token interactions\nexport const ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', type: 'uint8' }],\n    type: 'function',\n  },\n] as const;\n\n// Mining Controller ABI\nexport const MINING_CONTROLLER_ABI = [\n  // Read functions\n  'function facilities(address user) view returns (uint256 power, uint256 level, uint256 lastClaimBlock)',\n  'function totalPower() view returns (uint256)',\n  'function rewardPerBlock() view returns (uint256)',\n  'function getUnclaimedRewards(address user) view returns (uint256)',\n  'function getUserMiningRate(address user) view returns (uint256)',\n  'function getNetworkHashRate() view returns (uint256)',\n  'function getUserHashRate(address user) view returns (uint256)',\n  'function getBlocksUntilHalving() view returns (uint256)',\n  'function getTotalMinedBit() view returns (uint256)',\n  'function getBurnedBit() view returns (uint256)',\n  \n  // Write functions\n  'function purchaseInitialFacility(address referrer) payable returns (bool)',\n  'function getStarterMiner() returns (bool)',\n  'function claimReward() returns (bool)',\n  'function upgradeFacility() returns (bool)',\n] as const;\n\nexport const APE_TOKEN_ADDRESS = '0x4d224452801ACEd8B2F0aebE155379bb5D594381' as const;\nexport const BIT_TOKEN_ADDRESS = '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5' as const; "],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;;;AAC1B,MAAM,cAAc;AAGpB,MAAM,qBAAqB;IAChC,WAAW;IACX,WAAW;IACX,mBAAmB;AACrB;AAGO,MAAM,YAAY;IACvB;QACE,UAAU;QACV,QAAQ;YAAC;gBAAE,MAAM;gBAAU,MAAM;YAAU;SAAE;QAC7C,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAW,MAAM;YAAU;SAAE;QAC/C,MAAM;IACR;IACA;QACE,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAI,MAAM;YAAQ;SAAE;QACtC,MAAM;IACR;CACD;AAGM,MAAM,wBAAwB;IACnC,iBAAiB;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,kBAAkB;IAClB;IACA;IACA;IACA;CACD;AAEM,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useGameState.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract, useBalance, useContractRead } from 'wagmi';\nimport { formatEther, parseEther } from 'viem';\nimport { CONTRACT_ADDRESSES, MINING_CONTROLLER_ABI, ERC20_ABI, APECHAIN_ID } from '../config/contracts';\nimport { useEffect, useState } from 'react';\n\nexport interface GameState {\n  // User state\n  isConnected: boolean;\n  address: string | undefined;\n  \n  // Resources\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n  \n  // Mining stats\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  \n  // Network stats\n  totalMinedBit: string;\n  burnedBit: string;\n  rewardPerBlock: string;\n  \n  // Mining rewards\n  minedBit: string;\n  \n  // Facility state\n  hasFacility: boolean;\n  facilityLevel: number;\n  facilityPower: number;\n  \n  // Actions\n  purchaseFacility: (referrer?: string) => Promise<void>;\n  getStarterMiner: () => Promise<void>;\n  claimReward: () => Promise<void>;\n  upgradeFacility: () => Promise<void>;\n  \n  // Loading states\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isClaimingReward: boolean;\n  isUpgradingFacility: boolean;\n\n  // New fields\n  isGameActive: boolean;\n  isUserActive: boolean;\n}\n\nexport function useGameState(): GameState {\n  const { address, isConnected } = useAccount();\n  \n  // State variables\n  const [apeBalance, setApeBalance] = useState('0');\n  const [bitBalance, setBitBalance] = useState('0');\n  const [minedBit, setMinedBit] = useState('0');\n  const [hasFacility, setHasFacility] = useState(false);\n  const [facilityLevel, setFacilityLevel] = useState(0);\n  const [facilityPower, setFacilityPower] = useState(0);\n  const [spacesLeft, setSpacesLeft] = useState(0);\n  const [gigawattsAvailable, setGigawattsAvailable] = useState(0);\n  const [miningRate, setMiningRate] = useState('0');\n  const [hashRate, setHashRate] = useState('0');\n  const [blocksUntilHalving, setBlocksUntilHalving] = useState('0');\n  const [networkHashRatePercentage, setNetworkHashRatePercentage] = useState('0');\n  const [totalNetworkHashRate, setTotalNetworkHashRate] = useState('0');\n  \n  // Get native APE balance\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get BIT token balance\n  const { data: bitBalanceData } = useReadContract({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  // Contract read hooks\n  const { data: facilityData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'facilities',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  const { data: totalPowerData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'totalPower',\n    query: {\n      enabled: isConnected,\n    },\n  });\n  \n  const { data: rewardPerBlockData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'rewardPerBlock',\n    query: {\n      enabled: isConnected,\n    },\n  });\n  \n  // Contract write hooks\n  const { writeContractAsync: writeMainContract, isPending: isMainContractPending } = useWriteContract();\n  \n  // Loading states\n  const [isPurchasingFacility, setIsPurchasingFacility] = useState(false);\n  const [isGettingStarterMiner, setIsGettingStarterMiner] = useState(false);\n  const [isClaimingReward, setIsClaimingReward] = useState(false);\n  const [isUpgradingFacility, setIsUpgradingFacility] = useState(false);\n  \n  // Update state based on contract data\n  useEffect(() => {\n    if (facilityData) {\n      const [power, level, lastClaimBlock] = facilityData as [bigint, bigint, bigint];\n      setFacilityPower(Number(power));\n      setFacilityLevel(Number(level));\n      setHasFacility(Number(power) > 0);\n      \n      // Calculate available gigawatts based on facility power\n      setGigawattsAvailable(Number(power) / 1000); // Assuming 1 GW = 1000 power units\n      \n      // Calculate spaces left (placeholder logic)\n      setSpacesLeft(0); // In BitApe, users have one facility\n      \n      // Calculate mining rate if facility exists\n      if (Number(power) > 0 && totalPowerData && rewardPerBlockData) {\n        const playerPower = Number(power);\n        const totalPower = Number(totalPowerData);\n        const rewardPerBlock = Number(rewardPerBlockData);\n        \n        // Calculate mining rate (BIT per day)\n        const blocksPerDay = 7200; // Approximate blocks per day\n        const dailyReward = (playerPower / totalPower) * rewardPerBlock * blocksPerDay;\n        setMiningRate(dailyReward.toFixed(2));\n        \n        // Set hash rate (GH/s)\n        setHashRate((playerPower * 228).toFixed(0)); // Simplified calculation\n        \n        // Network hash rate percentage\n        const percentage = (playerPower / totalPower) * 100;\n        setNetworkHashRatePercentage(percentage.toFixed(6));\n        \n        // Total network hash rate\n        setTotalNetworkHashRate((totalPower * 228).toFixed(0));\n        \n        // Blocks until halving (placeholder)\n        setBlocksUntilHalving('3,284,172');\n        \n        // Calculate mined BIT (placeholder)\n        setMinedBit('0.5107');\n      }\n    }\n  }, [facilityData, totalPowerData, rewardPerBlockData]);\n  \n  // Update APE balance\n  useEffect(() => {\n    if (apeBalanceData) {\n      setApeBalance(apeBalanceData.formatted);\n    } else {\n      setApeBalance('0');\n    }\n  }, [apeBalanceData]);\n  \n  // Update BIT balance\n  useEffect(() => {\n    if (bitBalanceData) {\n      setBitBalance(formatEther(bitBalanceData as bigint));\n    } else {\n      setBitBalance('0');\n    }\n  }, [bitBalanceData]);\n  \n  // Action functions\n  const purchaseFacility = async (referrer?: string) => {\n    if (!isConnected || !address) return;\n    \n    try {\n      setIsPurchasingFacility(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [referrer || '0x0000000000000000000000000000000000000000'],\n        value: parseEther('10.003'), // Initial facility price + fees\n      });\n      \n      // Refresh data after purchase\n      // This would typically be handled by listening for events\n      \n    } catch (error) {\n      console.error('Error purchasing facility:', error);\n    } finally {\n      setIsPurchasingFacility(false);\n    }\n  };\n  \n  const getStarterMiner = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsGettingStarterMiner(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'getStarterMiner',\n      });\n      \n      // Refresh data after getting starter miner\n      \n    } catch (error) {\n      console.error('Error getting starter miner:', error);\n    } finally {\n      setIsGettingStarterMiner(false);\n    }\n  };\n  \n  const claimReward = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsClaimingReward(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'claimReward',\n      });\n      \n      // Reset mined BIT after claiming\n      setMinedBit('0');\n      \n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    } finally {\n      setIsClaimingReward(false);\n    }\n  };\n  \n  const upgradeFacility = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsUpgradingFacility(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'upgradeFacility',\n      });\n      \n      // Refresh facility data after upgrade\n      \n    } catch (error) {\n      console.error('Error upgrading facility:', error);\n    } finally {\n      setIsUpgradingFacility(false);\n    }\n  };\n  \n  const { data: isGameActive } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isGameActive',\n    query: {\n      enabled: true,\n    },\n  });\n\n  const { data: isUserActive } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isUserActive',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  return {\n    isConnected,\n    address,\n    apeBalance,\n    bitBalance,\n    spacesLeft,\n    gigawattsAvailable,\n    miningRate,\n    hashRate,\n    blocksUntilHalving,\n    networkHashRatePercentage,\n    totalNetworkHashRate,\n    totalMinedBit: '2,211,552.572', // Placeholder values until we get real data\n    burnedBit: '1,238,626.5',\n    rewardPerBlock: '2.5',\n    minedBit,\n    hasFacility,\n    facilityLevel,\n    facilityPower,\n    purchaseFacility,\n    getStarterMiner,\n    claimReward,\n    upgradeFacility,\n    isPurchasingFacility,\n    isGettingStarterMiner,\n    isClaimingReward,\n    isUpgradingFacility,\n    isGameActive: !!isGameActive,\n    isUserActive: !!isUserActive,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useTokenBalance.ts"],"sourcesContent":["'use client';\n\nimport { useAccount, useContractRead, useBalance } from 'wagmi';\nimport { formatUnits } from 'viem';\nimport { APECHAIN_ID, CONTRACT_ADDRESSES, ERC20_ABI } from '../config/contracts';\n\nexport function useTokenBalance() {\n  const { address } = useAccount();\n\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  const { data: bitBalance } = useContractRead({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  return {\n    apeBalance: apeBalanceData?.formatted ?? '0',\n    bitBalance: bitBalance ? formatUnits(bitBalance as bigint, 18) : '0',\n  };\n} "],"names":[],"mappings":";;;AAEA;AAAA;AAAA;AACA;AACA;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;QAC1C,SAAS;QACT,SAAS,6HAAA,CAAA,cAAW;QACpB,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,MAAM,EAAE,MAAM,UAAU,EAAE,GAAG,CAAA,GAAA,yNAAA,CAAA,kBAAe,AAAD,EAAE;QAC3C,SAAS,6HAAA,CAAA,qBAAkB,CAAC,SAAS;QACrC,KAAK,6HAAA,CAAA,YAAS;QACd,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,OAAO;QACL,YAAY,gBAAgB,aAAa;QACzC,YAAY,aAAa,CAAA,GAAA,+JAAA,CAAA,cAAW,AAAD,EAAE,YAAsB,MAAM;IACnE;AACF;GAzBgB;;QACM,8JAAA,CAAA,aAAU;QAEG,8JAAA,CAAA,aAAU;QAQd,yNAAA,CAAA,kBAAe","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/app/room/%5Baddress%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useParams } from 'next/navigation';\nimport { useAccount } from 'wagmi';\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useGameState } from '@/hooks/useGameState';\nimport { useTokenBalance } from '@/hooks/useTokenBalance';\n\nexport default function RoomPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { address, isConnected } = useAccount();\n  const gameState = useGameState();\n  const { apeBalance, bitBalance } = useTokenBalance();\n\n  // Redirect if not connected or trying to access someone else's room\n  useEffect(() => {\n    if (!isConnected) {\n      router.push('/');\n    } else if (address && params?.address && \n      (typeof params.address === 'string') && \n      address.toLowerCase() !== params.address.toLowerCase()) {\n      router.push(`/room/${address}`);\n    }\n  }, [isConnected, address, params?.address, router]);\n\n  if (!isConnected || !address) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-royal p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <h1 className=\"font-press-start text-2xl text-banana mb-8 pixel-text\">\n          MINING FACILITY: {address.slice(0, 6)}...{address.slice(-4)}\n        </h1>\n\n        {/* Resources Display */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n          <div className=\"bg-royal-blue p-6 rounded pixel-border\">\n            <h2 className=\"font-press-start text-banana mb-4\">RESOURCES</h2>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-banana pixel-art\">💎</span>\n                <span className=\"font-press-start\">{apeBalance} APE</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-banana pixel-art\">🪙</span>\n                <span className=\"font-press-start\">{bitBalance} BIT</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-royal-blue p-6 rounded pixel-border\">\n            <h2 className=\"font-press-start text-banana mb-4\">MINING STATS</h2>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-banana pixel-art\">⚡</span>\n                <span className=\"font-press-start\">{gameState.hashRate} GH/s</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-banana pixel-art\">📈</span>\n                <span className=\"font-press-start\">{gameState.miningRate} BIT/day</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Mining Controls */}\n        <div className=\"bg-royal-blue p-6 rounded pixel-border\">\n          <h2 className=\"font-press-start text-banana mb-4\">MINING CONTROLS</h2>\n          <div className=\"space-y-4\">\n            {!gameState.hasFacility ? (\n              <button\n                onClick={() => gameState.purchaseFacility()}\n                disabled={gameState.isPurchasingFacility}\n                className=\"w-full font-press-start py-3 px-6 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors pixel-button\"\n              >\n                {gameState.isPurchasingFacility ? 'PURCHASING...' : 'PURCHASE FACILITY (10 APE)'}\n              </button>\n            ) : (\n              <>\n                <button\n                  onClick={() => gameState.claimReward()}\n                  disabled={gameState.isClaimingReward}\n                  className=\"w-full font-press-start py-3 px-6 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors pixel-button\"\n                >\n                  {gameState.isClaimingReward ? 'CLAIMING...' : 'CLAIM MINING REWARDS'}\n                </button>\n                <button\n                  onClick={() => gameState.upgradeFacility()}\n                  disabled={gameState.isUpgradingFacility}\n                  className=\"w-full font-press-start py-3 px-6 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors pixel-button\"\n                >\n                  {gameState.isUpgradingFacility ? 'UPGRADING...' : 'UPGRADE FACILITY'}\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 756, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["../../src/version.ts"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,SAAS,CAAA","debugId":null}},
    {"offset": {"line": 773, "column": 0}, "map": {"version":3,"file":"getVersion.js","sourceRoot":"","sources":["../../../src/utils/getVersion.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAA;;AAEhC,MAAM,UAAU,GAAG,GAAG,CAAG,CAAD,AAAC,MAAA,qJAAS,UAAO,EAAE,CAAA","debugId":null}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"file":"base.js","sourceRoot":"","sources":["../../../src/errors/base.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,IAAI,SAAS,EAAE,MAAM,aAAa,CAAA;AAEpD,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAA;;;AAG7C,MAAO,SAAU,6KAAQ,YAAS;IAAxC,aAAA;;QACW,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,YAAY;WAAA;IAO9B,CAAC;IANC,IAAa,WAAW,GAAA;QACtB,OAAO,wBAAwB,CAAA;IACjC,CAAC;IACD,IAAa,OAAO,GAAA;QAClB,0KAAO,aAAA,AAAU,EAAE,CAAA;IACrB,CAAC;CACF","debugId":null}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"file":"context.js","sourceRoot":"","sources":["../../../src/errors/context.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,0BAA2B,mKAAQ,YAAS;IAEvD,aAAA;QACE,KAAK,CAAC,kDAAkD,EAAE;YACxD,QAAQ,EAAE,oBAAoB;SAC/B,CAAC,CAAA;QAJK,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,4BAA4B;WAAA;IAK5C,CAAC;CACF","debugId":null}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"file":"useConfig.js","sourceRoot":"","sources":["../../../src/hooks/useConfig.ts"],"names":[],"mappings":";;;AAGA,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAA;AAElC,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAA;AAC5C,OAAO,EAAE,0BAA0B,EAAE,MAAM,sBAAsB,CAAA;AANjE,YAAY,CAAA;;;;AAeN,SAAU,SAAS,CACvB,aAA0C,CAAA,CAAE;IAE5C,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,sKAAI,aAAA,AAAU,qJAAC,eAAY,CAAC,CAAA;IAC5D,IAAI,CAAC,MAAM,EAAE,MAAM,iKAAI,6BAA0B,EAAE,CAAA;IACnD,OAAO,MAAqC,CAAA;AAC9C,CAAC","debugId":null}},
    {"offset": {"line": 859, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    function useSyncExternalStore$2(subscribe, getSnapshot) {\n      didWarnOld18Alpha ||\n        void 0 === React.startTransition ||\n        ((didWarnOld18Alpha = !0),\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        ));\n      var value = getSnapshot();\n      if (!didWarnUncachedGetSnapshot) {\n        var cachedValue = getSnapshot();\n        objectIs(value, cachedValue) ||\n          (console.error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          ),\n          (didWarnUncachedGetSnapshot = !0));\n      }\n      cachedValue = useState({\n        inst: { value: value, getSnapshot: getSnapshot }\n      });\n      var inst = cachedValue[0].inst,\n        forceUpdate = cachedValue[1];\n      useLayoutEffect(\n        function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n        },\n        [subscribe, value, getSnapshot]\n      );\n      useEffect(\n        function () {\n          checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          return subscribe(function () {\n            checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n          });\n        },\n        [subscribe]\n      );\n      useDebugValue(value);\n      return value;\n    }\n    function checkIfSnapshotChanged(inst) {\n      var latestGetSnapshot = inst.getSnapshot;\n      inst = inst.value;\n      try {\n        var nextValue = latestGetSnapshot();\n        return !objectIs(inst, nextValue);\n      } catch (error) {\n        return !0;\n      }\n    }\n    function useSyncExternalStore$1(subscribe, getSnapshot) {\n      return getSnapshot();\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useState = React.useState,\n      useEffect = React.useEffect,\n      useLayoutEffect = React.useLayoutEffect,\n      useDebugValue = React.useDebugValue,\n      didWarnOld18Alpha = !1,\n      didWarnUncachedGetSnapshot = !1,\n      shim =\n        \"undefined\" === typeof window ||\n        \"undefined\" === typeof window.document ||\n        \"undefined\" === typeof window.document.createElement\n          ? useSyncExternalStore$1\n          : useSyncExternalStore$2;\n    exports.useSyncExternalStore =\n      void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC,GAGgB;AADjB;AACA,oEACE,AAAC;IACC,SAAS,GAAG,CAAC,EAAE,CAAC;QACd,OAAO,AAAC,MAAM,KAAK,CAAC,MAAM,KAAK,IAAI,MAAM,IAAI,CAAC,KAAO,MAAM,KAAK,MAAM;IACxE;IACA,SAAS,uBAAuB,SAAS,EAAE,WAAW;QACpD,qBACE,KAAK,MAAM,MAAM,eAAe,IAChC,CAAC,AAAC,oBAAoB,CAAC,GACvB,QAAQ,KAAK,CACX,iMACD;QACH,IAAI,QAAQ;QACZ,IAAI,CAAC,4BAA4B;YAC/B,IAAI,cAAc;YAClB,SAAS,OAAO,gBACd,CAAC,QAAQ,KAAK,CACZ,yEAED,6BAA6B,CAAC,CAAE;QACrC;QACA,cAAc,SAAS;YACrB,MAAM;gBAAE,OAAO;gBAAO,aAAa;YAAY;QACjD;QACA,IAAI,OAAO,WAAW,CAAC,EAAE,CAAC,IAAI,EAC5B,cAAc,WAAW,CAAC,EAAE;QAC9B;sDACE;gBACE,KAAK,KAAK,GAAG;gBACb,KAAK,WAAW,GAAG;gBACnB,uBAAuB,SAAS,YAAY;oBAAE,MAAM;gBAAK;YAC3D;qDACA;YAAC;YAAW;YAAO;SAAY;QAEjC;gDACE;gBACE,uBAAuB,SAAS,YAAY;oBAAE,MAAM;gBAAK;gBACzD,OAAO;wDAAU;wBACf,uBAAuB,SAAS,YAAY;4BAAE,MAAM;wBAAK;oBAC3D;;YACF;+CACA;YAAC;SAAU;QAEb,cAAc;QACd,OAAO;IACT;IACA,SAAS,uBAAuB,IAAI;QAClC,IAAI,oBAAoB,KAAK,WAAW;QACxC,OAAO,KAAK,KAAK;QACjB,IAAI;YACF,IAAI,YAAY;YAChB,OAAO,CAAC,SAAS,MAAM;QACzB,EAAE,OAAO,OAAO;YACd,OAAO,CAAC;QACV;IACF;IACA,SAAS,uBAAuB,SAAS,EAAE,WAAW;QACpD,OAAO;IACT;IACA,gBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,2BAA2B,IACnE,+BAA+B,2BAA2B,CAAC;IAC7D,IAAI,uHACF,WAAW,eAAe,OAAO,OAAO,EAAE,GAAG,OAAO,EAAE,GAAG,IACzD,WAAW,MAAM,QAAQ,EACzB,YAAY,MAAM,SAAS,EAC3B,kBAAkB,MAAM,eAAe,EACvC,gBAAgB,MAAM,aAAa,EACnC,oBAAoB,CAAC,GACrB,6BAA6B,CAAC,GAC9B,OACE,gBAAgB,OAAO,UACvB,gBAAgB,OAAO,OAAO,QAAQ,IACtC,gBAAgB,OAAO,OAAO,QAAQ,CAAC,aAAa,GAChD,yBACA;IACR,QAAQ,oBAAoB,GAC1B,KAAK,MAAM,MAAM,oBAAoB,GAAG,MAAM,oBAAoB,GAAG;IACvE,gBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,0BAA0B,IAClE,+BAA+B,0BAA0B,CAAC;AAC9D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/use-sync-external-store/shim/index.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA,uCAA2C;;AAE3C,OAAO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function is(x, y) {\n      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n    }\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());\n    var React = require(\"react\"),\n      shim = require(\"use-sync-external-store/shim\"),\n      objectIs = \"function\" === typeof Object.is ? Object.is : is,\n      useSyncExternalStore = shim.useSyncExternalStore,\n      useRef = React.useRef,\n      useEffect = React.useEffect,\n      useMemo = React.useMemo,\n      useDebugValue = React.useDebugValue;\n    exports.useSyncExternalStoreWithSelector = function (\n      subscribe,\n      getSnapshot,\n      getServerSnapshot,\n      selector,\n      isEqual\n    ) {\n      var instRef = useRef(null);\n      if (null === instRef.current) {\n        var inst = { hasValue: !1, value: null };\n        instRef.current = inst;\n      } else inst = instRef.current;\n      instRef = useMemo(\n        function () {\n          function memoizedSelector(nextSnapshot) {\n            if (!hasMemo) {\n              hasMemo = !0;\n              memoizedSnapshot = nextSnapshot;\n              nextSnapshot = selector(nextSnapshot);\n              if (void 0 !== isEqual && inst.hasValue) {\n                var currentSelection = inst.value;\n                if (isEqual(currentSelection, nextSnapshot))\n                  return (memoizedSelection = currentSelection);\n              }\n              return (memoizedSelection = nextSnapshot);\n            }\n            currentSelection = memoizedSelection;\n            if (objectIs(memoizedSnapshot, nextSnapshot))\n              return currentSelection;\n            var nextSelection = selector(nextSnapshot);\n            if (void 0 !== isEqual && isEqual(currentSelection, nextSelection))\n              return (memoizedSnapshot = nextSnapshot), currentSelection;\n            memoizedSnapshot = nextSnapshot;\n            return (memoizedSelection = nextSelection);\n          }\n          var hasMemo = !1,\n            memoizedSnapshot,\n            memoizedSelection,\n            maybeGetServerSnapshot =\n              void 0 === getServerSnapshot ? null : getServerSnapshot;\n          return [\n            function () {\n              return memoizedSelector(getSnapshot());\n            },\n            null === maybeGetServerSnapshot\n              ? void 0\n              : function () {\n                  return memoizedSelector(maybeGetServerSnapshot());\n                }\n          ];\n        },\n        [getSnapshot, getServerSnapshot, selector, isEqual]\n      );\n      var value = useSyncExternalStore(subscribe, instRef[0], instRef[1]);\n      useEffect(\n        function () {\n          inst.hasValue = !0;\n          inst.value = value;\n        },\n        [value]\n      );\n      useDebugValue(value);\n      return value;\n    };\n    \"undefined\" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&\n      \"function\" ===\n        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());\n  })();\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC,GAGgB;AADjB;AACA,oEACE,AAAC;IACC,SAAS,GAAG,CAAC,EAAE,CAAC;QACd,OAAO,AAAC,MAAM,KAAK,CAAC,MAAM,KAAK,IAAI,MAAM,IAAI,CAAC,KAAO,MAAM,KAAK,MAAM;IACxE;IACA,gBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,2BAA2B,IACnE,+BAA+B,2BAA2B,CAAC;IAC7D,IAAI,uHACF,0HACA,WAAW,eAAe,OAAO,OAAO,EAAE,GAAG,OAAO,EAAE,GAAG,IACzD,uBAAuB,KAAK,oBAAoB,EAChD,SAAS,MAAM,MAAM,EACrB,YAAY,MAAM,SAAS,EAC3B,UAAU,MAAM,OAAO,EACvB,gBAAgB,MAAM,aAAa;IACrC,QAAQ,gCAAgC,GAAG,SACzC,SAAS,EACT,WAAW,EACX,iBAAiB,EACjB,QAAQ,EACR,OAAO;QAEP,IAAI,UAAU,OAAO;QACrB,IAAI,SAAS,QAAQ,OAAO,EAAE;YAC5B,IAAI,OAAO;gBAAE,UAAU,CAAC;gBAAG,OAAO;YAAK;YACvC,QAAQ,OAAO,GAAG;QACpB,OAAO,OAAO,QAAQ,OAAO;QAC7B,UAAU,QACR;YACE,SAAS,iBAAiB,YAAY;gBACpC,IAAI,CAAC,SAAS;oBACZ,UAAU,CAAC;oBACX,mBAAmB;oBACnB,eAAe,SAAS;oBACxB,IAAI,KAAK,MAAM,WAAW,KAAK,QAAQ,EAAE;wBACvC,IAAI,mBAAmB,KAAK,KAAK;wBACjC,IAAI,QAAQ,kBAAkB,eAC5B,OAAQ,oBAAoB;oBAChC;oBACA,OAAQ,oBAAoB;gBAC9B;gBACA,mBAAmB;gBACnB,IAAI,SAAS,kBAAkB,eAC7B,OAAO;gBACT,IAAI,gBAAgB,SAAS;gBAC7B,IAAI,KAAK,MAAM,WAAW,QAAQ,kBAAkB,gBAClD,OAAO,AAAC,mBAAmB,cAAe;gBAC5C,mBAAmB;gBACnB,OAAQ,oBAAoB;YAC9B;YACA,IAAI,UAAU,CAAC,GACb,kBACA,mBACA,yBACE,KAAK,MAAM,oBAAoB,OAAO;YAC1C,OAAO;gBACL;oBACE,OAAO,iBAAiB;gBAC1B;gBACA,SAAS,yBACL,KAAK,IACL;oBACE,OAAO,iBAAiB;gBAC1B;aACL;QACH,GACA;YAAC;YAAa;YAAmB;YAAU;SAAQ;QAErD,IAAI,QAAQ,qBAAqB,WAAW,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE;QAClE,UACE;YACE,KAAK,QAAQ,GAAG,CAAC;YACjB,KAAK,KAAK,GAAG;QACf,GACA;YAAC;SAAM;QAET,cAAc;QACd,OAAO;IACT;IACA,gBAAgB,OAAO,kCACrB,eACE,OAAO,+BAA+B,0BAA0B,IAClE,+BAA+B,0BAA0B,CAAC;AAC9D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1030, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/use-sync-external-store/shim/with-selector.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA,uCAA2C;;AAE3C,OAAO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1043, "column": 0}, "map": {"version":3,"file":"useSyncExternalStoreWithTracked.js","sourceRoot":"","sources":["../../../src/hooks/useSyncExternalStoreWithTracked.ts"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAA;AAChD,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAA;AACvC,OAAO,EAAE,gCAAgC,EAAE,MAAM,+CAA+C,CAAA;AAJhG,YAAY,CAAA;;;;AAMZ,MAAM,aAAa,GAAG,CAAC,GAAY,EAAE,CACnC,CADqC,MAC9B,GAAG,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;AAE1C,SAAU,+BAA+B,CAI7C,SAAoD,EACpD,WAA2B,EAC3B,oBAAyD,WAAW,EACpE,kLAAmD,YAAS;IAE5D,MAAM,WAAW,GAAG,2KAAA,AAAM,EAAW,EAAE,CAAC,CAAA;IACxC,MAAM,MAAM,uLAAG,mCAAA,AAAgC,EAC7C,SAAS,EACT,WAAW,EACX,iBAAiB;oFACjB,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE;;oFACR,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACP,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gBACvE,KAAK,MAAM,GAAG,IAAI,WAAW,CAAC,OAAO,CAAE,CAAC;oBACtC,MAAM,KAAK,GAAG,OAAO,CAClB,CAA2B,CAAC,GAAG,CAAC,EAChC,CAA2B,CAAC,GAAG,CAAC,CAClC,CAAA;oBACD,IAAI,CAAC,KAAK,EAAE,OAAO,KAAK,CAAA;gBAC1B,CAAC;gBACD,OAAO,IAAI,CAAA;YACb,CAAC;YACD,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACtB,CAAC,CACF,CAAA;;IAED,yKAAO,UAAA,AAAO;mDAAC,GAAG,EAAE;YAClB,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC;gBAC1B,MAAM,aAAa,GAAG;oBAAE,GAAG,MAAM;gBAAA,CAAE,CAAA;gBACnC,IAAI,UAAU,GAAG,CAAA,CAAE,CAAA;gBACnB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CACvC,aAAuC,CACxC,CAAE,CAAC;oBACF,UAAU,GAAG;wBACX,GAAG,UAAU;wBACb,CAAC,GAAG,CAAC,EAAE;4BACL,YAAY,EAAE,KAAK;4BACnB,UAAU,EAAE,IAAI;4BAChB,GAAG;2EAAE,GAAG,EAAE;oCACR,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;wCACvC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;oCAC/B,CAAC;oCACD,OAAO,KAAK,CAAA;gCACd,CAAC;;yBACF;qBACF,CAAA;gBACH,CAAC;gBACD,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,UAAU,CAAC,CAAA;gBAClD,OAAO,aAAa,CAAA;YACtB,CAAC;YAED,OAAO,MAAM,CAAA;QACf,CAAC;kDAAE;QAAC,MAAM;KAAC,CAAC,CAAA;AACd,CAAC","debugId":null}},
    {"offset": {"line": 1109, "column": 0}, "map": {"version":3,"file":"useAccount.js","sourceRoot":"","sources":["../../../src/hooks/useAccount.ts"],"names":[],"mappings":";;;AAEA,OAAO,EAIL,UAAU,EACV,YAAY,GACb,MAAM,aAAa,CAAA;;AAGpB,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAC1C,OAAO,EAAE,+BAA+B,EAAE,MAAM,sCAAsC,CAAA;AAZtF,YAAY,CAAA;;;;AAqBN,SAAU,UAAU,CACxB,aAA2C,CAAA,CAAE;IAE7C,MAAM,MAAM,qKAAG,YAAA,AAAS,EAAC,UAAU,CAAC,CAAA;IAEpC,+LAAO,kCAAA,AAA+B;sDACpC,CAAC,QAAQ,EAAE,EAAE,gLAAC,eAAY,AAAZ,EAAa,MAAM,EAAE;gBAAE,QAAQ;YAAA,CAAE,CAAC;;sDAChD,GAAG,EAAE,8KAAC,aAAA,AAAU,EAAC,MAAM,CAAC,CACzB,CAAA;;AACH,CAAC","debugId":null}},
    {"offset": {"line": 1136, "column": 0}, "map": {"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/query/utils.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAiB,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;;AAEhE,SAAU,iBAAiB,CAC/B,OAAyB,EACzB,OAAa;IAEb,sLAAO,mBAAA,AAAgB,EAAC,OAAO,EAAE,OAAO,CAAC,CAAA;AAC3C,CAAC;AAEK,SAAU,MAAM,CAAC,QAAkB;IACvC,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;QAC3C,IAAI,aAAa,CAAC,KAAK,CAAC,EACtB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CACtB,IAAI,EAAE,CACN,MAAM,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACtB,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;YACxB,OAAO,MAAM,CAAA;QACf,CAAC,EAAE,CAAA,CAAS,CAAC,CAAA;QACjB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAA;QACtD,OAAO,KAAK,CAAA;IACd,CAAC,CAAC,CAAA;AACJ,CAAC;AAED,8CAA8C;AAC9C,SAAS,aAAa,CAAC,KAAU;IAC/B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC;QAC/B,OAAO,KAAK,CAAA;IACd,CAAC;IAED,8BAA8B;IAC9B,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAA;IAC9B,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE,OAAO,IAAI,CAAA;IAE5C,4BAA4B;IAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAA;IAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAA;IAE3C,yDAAyD;IACzD,kEAAkE;IAClE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,OAAO,KAAK,CAAA;IAEvD,6BAA6B;IAC7B,OAAO,IAAI,CAAA;AACb,CAAC;AAED,SAAS,kBAAkB,CAAC,CAAM;IAChC,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,iBAAiB,CAAA;AAChE,CAAC;AAEK,SAAU,kBAAkB,CAChC,OAAa;IAEb,8BAA8B;IAC9B,qCAAqC;IACrC,MAAM,EACJ,8CAA8C;IAC9C,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,oBAAoB,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAEhL,8DAA8D;IAC9D,oBAAoB,EAAE,gBAAgB,EAAE,gBAAgB,EAExD,kDAAkD;IAClD,kBAAkB,EAAE,OAAO,EAAE,mBAAmB,EAAE,eAAe,EAAE,eAAe,EAAE,2BAA2B,EAAE,cAAc,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,YAAY,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,YAAY,EAElO,gIAAgI;IAChI,QAAQ;IACR,gIAAgI;IAChI,MAAM,EAAE,SAAS,EAAE,KAAK,EACxB,GAAG,IAAI,EACR,GAAG,OAAO,CAAA;IAEX,OAAO,IAAY,CAAA;AACrB,CAAC","debugId":null}},
    {"offset": {"line": 1194, "column": 0}, "map": {"version":3,"file":"readContract.js","sourceRoot":"","sources":["../../../src/query/readContract.ts"],"names":[],"mappings":";;;;AAGA,OAAO,EAIL,YAAY,GACb,MAAM,4BAA4B,CAAA;AAInC,OAAO,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAA;;;AAUzC,SAAU,wBAAwB,CAMtC,MAAc,EACd,UAAgE,CAAA,CAAS;IAEzE,OAAO;QACL,6DAA6D;QAC7D,qEAAqE;QACrE,KAAK,CAAC,OAAO,EAAC,EAAE,QAAQ,EAAE;YACxB,MAAM,GAAG,GAAG,OAAO,CAAC,GAAU,CAAA;YAC9B,IAAI,CAAC,GAAG,EAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAA;YAE5C,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,UAAU,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;YAChE,MAAM,mBAAmB,GAAG,CAAC,GAAG,EAAE;gBAChC,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAsC,CAAA;gBAC/D,IAAI,MAAM,CAAC,OAAO,EAAE,OAAO;oBAAE,OAAO,EAAE,MAAM,CAAC,OAAO;gBAAA,CAAE,CAAA;gBACtD,IAAI,MAAM,CAAC,IAAI,EAAE,OAAO;oBAAE,IAAI,EAAE,MAAM,CAAC,IAAI;gBAAA,CAAE,CAAA;gBAC7C,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAA;YAChD,CAAC,CAAC,EAAE,CAAA;YAEJ,IAAI,CAAC,YAAY,EAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAA;YAE9D,wLAAO,eAAA,AAAY,EAAC,MAAM,EAAE;gBAC1B,GAAG;gBACH,YAAY;gBACZ,IAAI,EAAE,UAAU,CAAC,IAA0B;gBAC3C,GAAG,mBAAmB;gBACtB,GAAG,UAAU;aACd,CAAuD,CAAA;QAC1D,CAAC;QACD,QAAQ,EAAE,oBAAoB,CAAC,OAAc,CAAQ;KAMtD,CAAA;AACH,CAAC;AAcK,SAAU,oBAAoB,CAKlC,UAAgE,CAAA,CAAS;IACzE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,EAAE,GAAG,OAAO,CAAA;IACnC,OAAO;QAAC,cAAc;gLAAE,qBAAA,AAAkB,EAAC,IAAI,CAAC;KAAU,CAAA;AAC5D,CAAC","debugId":null}},
    {"offset": {"line": 1245, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/query-core/src/queryObserver.ts"],"sourcesContent":["import { focusManager } from './focusManager'\nimport { notifyManager } from './notifyManager'\nimport { fetchState } from './query'\nimport { Subscribable } from './subscribable'\nimport { pendingThenable } from './thenable'\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport type { FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { PendingThenable, Thenable } from './thenable'\nimport type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\ninterface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  #client: QueryClient\n  #currentQuery: Query<TQueryFnData, TError, TQueryData, TQueryKey> = undefined!\n  #currentQueryInitialState: QueryState<TQueryData, TError> = undefined!\n  #currentResult: QueryObserverResult<TData, TError> = undefined!\n  #currentResultState?: QueryState<TQueryData, TError>\n  #currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  #currentThenable: Thenable<TData>\n  #selectError: TError | null\n  #selectFn?: (data: TQueryData) => TData\n  #selectResult?: TData\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData?: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  #staleTimeoutId?: ReturnType<typeof setTimeout>\n  #refetchIntervalId?: ReturnType<typeof setInterval>\n  #currentRefetchInterval?: number | false\n  #trackedProps = new Set<keyof QueryObserverResult>()\n\n  constructor(\n    client: QueryClient,\n    public options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.#selectError = null\n    this.#currentThenable = pendingThenable()\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error('experimental_prefetchInRender feature flag is not enabled'),\n      )\n    }\n\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch()\n      } else {\n        this.updateResult()\n      }\n\n      this.#updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.#clearStaleTimeout()\n    this.#clearRefetchInterval()\n    this.#currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.#currentQuery\n\n    this.options = this.#client.defaultQueryOptions(options)\n\n    if (\n      this.options.enabled !== undefined &&\n      typeof this.options.enabled !== 'boolean' &&\n      typeof this.options.enabled !== 'function' &&\n      typeof resolveEnabled(this.options.enabled, this.#currentQuery) !==\n        'boolean'\n    ) {\n      throw new Error(\n        'Expected enabled to be a boolean or a callback that returns a boolean',\n      )\n    }\n\n    this.#updateQuery()\n    this.#currentQuery.setOptions(this.options)\n\n    if (\n      prevOptions._defaulted &&\n      !shallowEqualObjects(this.options, prevOptions)\n    ) {\n      this.#client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.#currentQuery,\n        observer: this,\n      })\n    }\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.#currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.#executeFetch()\n    }\n\n    // Update result\n    this.updateResult()\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        resolveStaleTime(this.options.staleTime, this.#currentQuery) !==\n          resolveStaleTime(prevOptions.staleTime, this.#currentQuery))\n    ) {\n      this.#updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.#computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        nextRefetchInterval !== this.#currentRefetchInterval)\n    ) {\n      this.#updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.#client.getQueryCache().build(this.#client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult every time\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.#currentResult = result\n      this.#currentResultOptions = this.options\n      this.#currentResultState = this.#currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.#currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n    onPropTracked?: (key: keyof QueryObserverResult) => void,\n  ): QueryObserverResult<TData, TError> {\n    const trackedResult = {} as QueryObserverResult<TData, TError>\n\n    Object.keys(result).forEach((key) => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackProp(key as keyof QueryObserverResult)\n          onPropTracked?.(key as keyof QueryObserverResult)\n          return result[key as keyof QueryObserverResult]\n        },\n      })\n    })\n\n    return trackedResult\n  }\n\n  trackProp(key: keyof QueryObserverResult) {\n    this.#trackedProps.add(key)\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.#currentQuery\n  }\n\n  refetch({ ...options }: RefetchOptions = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.#client.defaultQueryOptions(options)\n\n    const query = this.#client\n      .getQueryCache()\n      .build(this.#client, defaultedOptions)\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.#currentResult\n    })\n  }\n\n  #executeFetch(\n    fetchOptions?: Omit<ObserverFetchOptions, 'initialPromise'>,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.#updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.#currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  #updateStaleTimeout(): void {\n    this.#clearStaleTimeout()\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery,\n    )\n\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return\n    }\n\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime)\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  #computeRefetchInterval() {\n    return (\n      (typeof this.options.refetchInterval === 'function'\n        ? this.options.refetchInterval(this.#currentQuery)\n        : this.options.refetchInterval) ?? false\n    )\n  }\n\n  #updateRefetchInterval(nextInterval: number | false): void {\n    this.#clearRefetchInterval()\n\n    this.#currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      resolveEnabled(this.options.enabled, this.#currentQuery) === false ||\n      !isValidTimeout(this.#currentRefetchInterval) ||\n      this.#currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.#refetchIntervalId = setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.#executeFetch()\n      }\n    }, this.#currentRefetchInterval)\n  }\n\n  #updateTimers(): void {\n    this.#updateStaleTimeout()\n    this.#updateRefetchInterval(this.#computeRefetchInterval())\n  }\n\n  #clearStaleTimeout(): void {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId)\n      this.#staleTimeoutId = undefined\n    }\n  }\n\n  #clearRefetchInterval(): void {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId)\n      this.#refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.#currentQuery\n    const prevOptions = this.options\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.#currentResultState\n    const prevResultOptions = this.#currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.#currentQueryInitialState\n\n    const { state } = query\n    let newState = { ...state }\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options),\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        newState.fetchStatus = 'idle'\n      }\n    }\n\n    let { error, errorUpdatedAt, status } = newState\n\n    // Select data if needed\n    if (options.select && newState.data !== undefined) {\n      // Memoize select result\n      if (\n        prevResult &&\n        newState.data === prevResultState?.data &&\n        options.select === this.#selectFn\n      ) {\n        data = this.#selectResult\n      } else {\n        try {\n          this.#selectFn = options.select\n          data = options.select(newState.data)\n          data = replaceData(prevResult?.data, data, options)\n          this.#selectResult = data\n          this.#selectError = null\n        } catch (selectError) {\n          this.#selectError = selectError as TError\n        }\n      }\n    }\n    // Use query data\n    else {\n      data = newState.data as unknown as TData\n    }\n\n    // Show placeholder data if needed\n    if (\n      options.placeholderData !== undefined &&\n      data === undefined &&\n      status === 'pending'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n      } else {\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (\n                options.placeholderData as unknown as PlaceholderDataFunction<TQueryData>\n              )(\n                this.#lastQueryWithDefinedData?.state.data,\n                this.#lastQueryWithDefinedData as any,\n              )\n            : options.placeholderData\n        if (options.select && placeholderData !== undefined) {\n          try {\n            placeholderData = options.select(placeholderData)\n            this.#selectError = null\n          } catch (selectError) {\n            this.#selectError = selectError as TError\n          }\n        }\n      }\n\n      if (placeholderData !== undefined) {\n        status = 'success'\n        data = replaceData(\n          prevResult?.data,\n          placeholderData as unknown,\n          options,\n        ) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    if (this.#selectError) {\n      error = this.#selectError as any\n      data = this.#selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = newState.fetchStatus === 'fetching'\n    const isPending = status === 'pending'\n    const isError = status === 'error'\n\n    const isLoading = isPending && isFetching\n    const hasData = data !== undefined\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        newState.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === 'paused',\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n    }\n\n    const nextResult = result as QueryObserverResult<TData, TError>\n\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable: PendingThenable<TData>) => {\n        if (nextResult.status === 'error') {\n          thenable.reject(nextResult.error)\n        } else if (nextResult.data !== undefined) {\n          thenable.resolve(nextResult.data)\n        }\n      }\n\n      /**\n       * Create a new thenable and result promise when the results have changed\n       */\n      const recreateThenable = () => {\n        const pending =\n          (this.#currentThenable =\n          nextResult.promise =\n            pendingThenable())\n\n        finalizeThenableIfPossible(pending)\n      }\n\n      const prevThenable = this.#currentThenable\n      switch (prevThenable.status) {\n        case 'pending':\n          // Finalize the previous thenable if it was pending\n          // and we are still observing the same query\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable)\n          }\n          break\n        case 'fulfilled':\n          if (\n            nextResult.status === 'error' ||\n            nextResult.data !== prevThenable.value\n          ) {\n            recreateThenable()\n          }\n          break\n        case 'rejected':\n          if (\n            nextResult.status !== 'error' ||\n            nextResult.error !== prevThenable.reason\n          ) {\n            recreateThenable()\n          }\n          break\n      }\n    }\n\n    return nextResult\n  }\n\n  updateResult(): void {\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.#currentQuery, this.options)\n\n    this.#currentResultState = this.#currentQuery.state\n    this.#currentResultOptions = this.options\n\n    if (this.#currentResultState.data !== undefined) {\n      this.#lastQueryWithDefinedData = this.#currentQuery\n    }\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.#currentResult = nextResult\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.#trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps,\n      )\n\n      if (this.options.throwOnError) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey]\n\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    this.#notify({ listeners: shouldNotifyListeners() })\n  }\n\n  #updateQuery(): void {\n    const query = this.#client.getQueryCache().build(this.#client, this.options)\n\n    if (query === this.#currentQuery) {\n      return\n    }\n\n    const prevQuery = this.#currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.#currentQuery = query\n    this.#currentQueryInitialState = query.state\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(): void {\n    this.updateResult()\n\n    if (this.hasListeners()) {\n      this.#updateTimers()\n    }\n  }\n\n  #notify(notifyOptions: { listeners: boolean }): void {\n    notifyManager.batch(() => {\n      // First, trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: 'observerResultsUpdated',\n      })\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.state.data === undefined &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.data !== undefined &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: (typeof options)['refetchOnMount'] &\n    (typeof options)['refetchOnWindowFocus'] &\n    (typeof options)['refetchOnReconnect'],\n) {\n  if (resolveEnabled(options.enabled, query) !== false) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    (query !== prevQuery ||\n      resolveEnabled(prevOptions.enabled, query) === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.isStaleByTime(resolveStaleTime(options.staleTime, query))\n  )\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n) {\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1697, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/query-core/src/infiniteQueryObserver.ts"],"sourcesContent":["import { QueryObserver } from './queryObserver'\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior,\n} from './infiniteQueryBehavior'\nimport type { Subscribable } from './subscribable'\nimport type {\n  DefaultError,\n  DefaultedInfiniteQueryObserverOptions,\n  FetchNextPageOptions,\n  FetchPreviousPageOptions,\n  InfiniteData,\n  InfiniteQueryObserverBaseResult,\n  InfiniteQueryObserverOptions,\n  InfiniteQueryObserverResult,\n  QueryKey,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Query } from './query'\n\ntype InfiniteQueryObserverListener<TData, TError> = (\n  result: InfiniteQueryObserverResult<TData, TError>,\n) => void\n\nexport class InfiniteQueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n> extends QueryObserver<\n  TQueryFnData,\n  TError,\n  TData,\n  InfiniteData<TQueryData, TPageParam>,\n  TQueryKey\n> {\n  // Type override\n  subscribe!: Subscribable<\n    InfiniteQueryObserverListener<TData, TError>\n  >['subscribe']\n\n  // Type override\n  getCurrentResult!: ReplaceReturnType<\n    QueryObserver<\n      TQueryFnData,\n      TError,\n      TData,\n      InfiniteData<TQueryData, TPageParam>,\n      TQueryKey\n    >['getCurrentResult'],\n    InfiniteQueryObserverResult<TData, TError>\n  >\n\n  // Type override\n  protected fetch!: ReplaceReturnType<\n    QueryObserver<\n      TQueryFnData,\n      TError,\n      TData,\n      InfiniteData<TQueryData, TPageParam>,\n      TQueryKey\n    >['fetch'],\n    Promise<InfiniteQueryObserverResult<TData, TError>>\n  >\n\n  constructor(\n    client: QueryClient,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey,\n      TPageParam\n    >,\n  ) {\n    super(client, options)\n  }\n\n  protected bindMethods(): void {\n    super.bindMethods()\n    this.fetchNextPage = this.fetchNextPage.bind(this)\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this)\n  }\n\n  setOptions(\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): void {\n    super.setOptions({\n      ...options,\n      behavior: infiniteQueryBehavior(),\n    })\n  }\n\n  getOptimisticResult(\n    options: DefaultedInfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    options.behavior = infiniteQueryBehavior()\n    return super.getOptimisticResult(options) as InfiniteQueryObserverResult<\n      TData,\n      TError\n    >\n  }\n\n  fetchNextPage(\n    options?: FetchNextPageOptions,\n  ): Promise<InfiniteQueryObserverResult<TData, TError>> {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'forward' },\n      },\n    })\n  }\n\n  fetchPreviousPage(\n    options?: FetchPreviousPageOptions,\n  ): Promise<InfiniteQueryObserverResult<TData, TError>> {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: 'backward' },\n      },\n    })\n  }\n\n  protected createResult(\n    query: Query<\n      TQueryFnData,\n      TError,\n      InfiniteData<TQueryData, TPageParam>,\n      TQueryKey\n    >,\n    options: InfiniteQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): InfiniteQueryObserverResult<TData, TError> {\n    const { state } = query\n    const parentResult = super.createResult(query, options)\n\n    const { isFetching, isRefetching, isError, isRefetchError } = parentResult\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction\n\n    const isFetchNextPageError = isError && fetchDirection === 'forward'\n    const isFetchingNextPage = isFetching && fetchDirection === 'forward'\n\n    const isFetchPreviousPageError = isError && fetchDirection === 'backward'\n    const isFetchingPreviousPage = isFetching && fetchDirection === 'backward'\n\n    const result: InfiniteQueryObserverBaseResult<TData, TError> = {\n      ...parentResult,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError:\n        isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching:\n        isRefetching && !isFetchingNextPage && !isFetchingPreviousPage,\n    }\n\n    return result as InfiniteQueryObserverResult<TData, TError>\n  }\n}\n\ntype ReplaceReturnType<\n  TFunction extends (...args: Array<any>) => unknown,\n  TReturn,\n> = (...args: Parameters<TFunction>) => TReturn\n"],"names":[],"mappings":";;;;AAAA,SAAS,qBAAqB;AAC9B;;;AAwBO,IAAM,wBAAN,iMAOG,gBAAA,CAMR;IA8BA,YACE,MAAA,EACA,OAAA,CAQA;QACA,KAAA,CAAM,QAAQ,OAAO;IACvB;IAEU,cAAoB;QAC5B,KAAA,CAAM,YAAY;QAClB,IAAA,CAAK,aAAA,GAAgB,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK,IAAI;QACjD,IAAA,CAAK,iBAAA,GAAoB,IAAA,CAAK,iBAAA,CAAkB,IAAA,CAAK,IAAI;IAC3D;IAEA,WACE,OAAA,EAQM;QACN,KAAA,CAAM,WAAW;YACf,GAAG,OAAA;YACH,cAAU,mNAAA,CAAsB;QAClC,CAAC;IACH;IAEA,oBACE,OAAA,EAQ4C;QAC5C,QAAQ,QAAA,GAAW,uNAAA,CAAsB;QACzC,OAAO,KAAA,CAAM,oBAAoB,OAAO;IAI1C;IAEA,cACE,OAAA,EACqD;QACrD,OAAO,IAAA,CAAK,KAAA,CAAM;YAChB,GAAG,OAAA;YACH,MAAM;gBACJ,WAAW;oBAAE,WAAW;gBAAU;YACpC;QACF,CAAC;IACH;IAEA,kBACE,OAAA,EACqD;QACrD,OAAO,IAAA,CAAK,KAAA,CAAM;YAChB,GAAG,OAAA;YACH,MAAM;gBACJ,WAAW;oBAAE,WAAW;gBAAW;YACrC;QACF,CAAC;IACH;IAEU,aACR,KAAA,EAMA,OAAA,EAQ4C;QAC5C,MAAM,EAAE,KAAA,CAAM,CAAA,GAAI;QAClB,MAAM,eAAe,KAAA,CAAM,aAAa,OAAO,OAAO;QAEtD,MAAM,EAAE,UAAA,EAAY,YAAA,EAAc,OAAA,EAAS,cAAA,CAAe,CAAA,GAAI;QAC9D,MAAM,iBAAiB,MAAM,SAAA,EAAW,WAAW;QAEnD,MAAM,uBAAuB,WAAW,mBAAmB;QAC3D,MAAM,qBAAqB,cAAc,mBAAmB;QAE5D,MAAM,2BAA2B,WAAW,mBAAmB;QAC/D,MAAM,yBAAyB,cAAc,mBAAmB;QAEhE,MAAM,SAAyD;YAC7D,GAAG,YAAA;YACH,eAAe,IAAA,CAAK,aAAA;YACpB,mBAAmB,IAAA,CAAK,iBAAA;YACxB,4MAAa,cAAA,EAAY,SAAS,MAAM,IAAI;YAC5C,kBAAiB,gNAAA,EAAgB,SAAS,MAAM,IAAI;YACpD;YACA;YACA;YACA;YACA,gBACE,kBAAkB,CAAC,wBAAwB,CAAC;YAC9C,cACE,gBAAgB,CAAC,sBAAsB,CAAC;QAC5C;QAEA,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1777, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/QueryErrorResetBoundary.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\n// CONTEXT\nexport type QueryErrorResetFunction = () => void\nexport type QueryErrorIsResetFunction = () => boolean\nexport type QueryErrorClearResetFunction = () => void\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: QueryErrorClearResetFunction\n  isReset: QueryErrorIsResetFunction\n  reset: QueryErrorResetFunction\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport type QueryErrorResetBoundaryFunction = (\n  value: QueryErrorResetBoundaryValue,\n) => React.ReactNode\n\nexport interface QueryErrorResetBoundaryProps {\n  children: QueryErrorResetBoundaryFunction | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function' ? children(value) : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;AAkDnB;;;;AArCJ,SAAS,cAA4C;IACnD,IAAI,UAAU;IACd,OAAO;QACL,YAAY,MAAM;YAChB,UAAU;QACZ;QACA,OAAO,MAAM;YACX,UAAU;QACZ;QACA,SAAS,MAAM;YACb,OAAO;QACT;IACF;AACF;AAEA,IAAM,mMAAuC,gBAAA,EAAc,YAAY,CAAC;AAIjE,IAAM,6BAA6B,sKAClC,aAAA,EAAW,8BAA8B;AAY1C,IAAM,0BAA0B,CAAC,EACtC,QAAA,EACF,KAAoC;IAClC,MAAM,CAAC,KAAK,CAAA,qKAAU,WAAA;4CAAS,IAAM,YAAY,CAAC;;IAClD,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAC,+BAA+B,QAAA,EAA/B;QAAwC;QACtC,UAAA,OAAO,aAAa,aAAa,SAAS,KAAK,IAAI;IAAA,CACtD;AAEJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1820, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/utils.ts"],"sourcesContent":["export function shouldThrowError<T extends (...args: Array<any>) => boolean>(\n  throwError: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow throwError function to override throwing behavior on a per-error basis\n  if (typeof throwError === 'function') {\n    return throwError(...params)\n  }\n\n  return !!throwError\n}\n\nexport function noop(): void {}\n"],"names":[],"mappings":";;;;;AAAO,SAAS,iBACd,UAAA,EACA,MAAA,EACS;IAET,IAAI,OAAO,eAAe,YAAY;QACpC,OAAO,WAAW,GAAG,MAAM;IAC7B;IAEA,OAAO,CAAC,CAAC;AACX;AAEO,SAAS,OAAa,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1840, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/errorBoundaryUtils.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from './utils'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  ThrowOnError,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (\n    options.suspense ||\n    options.throwOnError ||\n    options.experimental_prefetchInRender\n  ) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  throwOnError: ThrowOnError<TQueryFnData, TError, TQueryData, TQueryKey>\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey> | undefined\n  suspense: boolean | undefined\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    query &&\n    ((suspense && result.data === undefined) ||\n      shouldThrowError(throwOnError, [result.error, query]))\n  )\n}\n"],"names":[],"mappings":";;;;;;AACA,YAAY,WAAW;AACvB,SAAS,wBAAwB;;;;AAU1B,IAAM,kCAAkC,CAO7C,SAOA,uBACG;IACH,IACE,QAAQ,QAAA,IACR,QAAQ,YAAA,IACR,QAAQ,6BAAA,EACR;QAEA,IAAI,CAAC,mBAAmB,OAAA,CAAQ,GAAG;YACjC,QAAQ,YAAA,GAAe;QACzB;IACF;AACF;AAEO,IAAM,6BAA6B,CACxC,uBACG;sKACG,YAAA;gDAAU,MAAM;YACpB,mBAAmB,UAAA,CAAW;QAChC;+CAAG;QAAC,kBAAkB;KAAC;AACzB;AAEO,IAAM,cAAc,CAMzB,EACA,MAAA,EACA,kBAAA,EACA,YAAA,EACA,KAAA,EACA,QAAA,EACF,KAMM;IACJ,OACE,OAAO,OAAA,IACP,CAAC,mBAAmB,OAAA,CAAQ,KAC5B,CAAC,OAAO,UAAA,IACR,SAAA,CACE,YAAY,OAAO,IAAA,KAAS,KAAA,qLAC5B,mBAAA,EAAiB,cAAc;QAAC,OAAO,KAAA;QAAO,KAAK;KAAC,CAAA;AAE1D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1881, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/isRestoring.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;;;AAEvB,IAAM,uLAA2B,gBAAA,EAAc,KAAK;AAE7C,IAAM,iBAAiB,sKAAY,aAAA,EAAW,kBAAkB;AAChE,IAAM,sBAAsB,mBAAmB,QAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1900, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/suspense.ts"],"sourcesContent":["import type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const defaultThrowOnError = <\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  _error: TError,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n) => query.state.data === undefined\n\nexport const ensureSuspenseTimers = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  const originalStaleTime = defaultedOptions.staleTime\n\n  if (defaultedOptions.suspense) {\n    // Handle staleTime to ensure minimum 1000ms in Suspense mode\n    // This prevents unnecessary refetching when components remount after suspending\n    defaultedOptions.staleTime =\n      typeof originalStaleTime === 'function'\n        ? (...args) => Math.max(originalStaleTime(...args), 1000)\n        : Math.max(originalStaleTime ?? 1000, 1000)\n\n    if (typeof defaultedOptions.gcTime === 'number') {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1000)\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n) => defaultedOptions?.suspense && result.isPending\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer.fetchOptimistic(defaultedOptions).catch(() => {\n    errorResetBoundary.clearReset()\n  })\n"],"names":[],"mappings":";;;;;;;;AAUO,IAAM,sBAAsB,CAMjC,QACA,QACG,MAAM,KAAA,CAAM,IAAA,KAAS,KAAA;AAEnB,IAAM,uBAAuB,CAClC,qBACG;IACH,MAAM,oBAAoB,iBAAiB,SAAA;IAE3C,IAAI,iBAAiB,QAAA,EAAU;QAG7B,iBAAiB,SAAA,GACf,OAAO,sBAAsB,aACzB,CAAA,GAAI,OAAS,KAAK,GAAA,CAAI,kBAAkB,GAAG,IAAI,GAAG,GAAI,IACtD,KAAK,GAAA,CAAI,qBAAqB,KAAM,GAAI;QAE9C,IAAI,OAAO,iBAAiB,MAAA,KAAW,UAAU;YAC/C,iBAAiB,MAAA,GAAS,KAAK,GAAA,CAAI,iBAAiB,MAAA,EAAQ,GAAI;QAClE;IACF;AACF;AAEO,IAAM,YAAY,CACvB,QACA,cACG,OAAO,SAAA,IAAa,OAAO,UAAA,IAAc,CAAC;AAExC,IAAM,gBAAgB,CAC3B,kBAGA,SACG,kBAAkB,YAAY,OAAO,SAAA;AAEnC,IAAM,kBAAkB,CAO7B,kBAOA,UACA,qBAEA,SAAS,eAAA,CAAgB,gBAAgB,EAAE,KAAA,CAAM,MAAM;QACrD,mBAAmB,UAAA,CAAW;IAChC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1931, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/useBaseQuery.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport { isServer, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport { noop } from './utils'\nimport type {\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n  queryClient?: QueryClient,\n): QueryObserverResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options !== 'object' || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object',\n      )\n    }\n  }\n\n  const client = useQueryClient(queryClient)\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = client.defaultQueryOptions(options)\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_beforeQuery?.(\n    defaultedOptions,\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`,\n      )\n    }\n  }\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  ensureSuspenseTimers(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  // this needs to be invoked before creating the Observer because that can create a cache entry\n  const isNewCacheEntry = !client\n    .getQueryCache()\n    .get(defaultedOptions.queryHash)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        client,\n        defaultedOptions,\n      ),\n  )\n\n  // note: this must be called before useSyncExternalStore\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  const shouldSubscribe = !isRestoring && options.subscribed !== false\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe\n          ? observer.subscribe(notifyManager.batchCalls(onStoreChange))\n          : noop\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, shouldSubscribe],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions)\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client\n        .getQueryCache()\n        .get<\n          TQueryFnData,\n          TError,\n          TQueryData,\n          TQueryKey\n        >(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense,\n    })\n  ) {\n    throw result.error\n  }\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_afterQuery?.(\n    defaultedOptions,\n    result,\n  )\n\n  if (\n    defaultedOptions.experimental_prefetchInRender &&\n    !isServer &&\n    willFetch(result, isRestoring)\n  ) {\n    const promise = isNewCacheEntry\n      ? // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n        fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n      : // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n        client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n\n    promise?.catch(noop).finally(() => {\n      // `.updateResult()` will trigger `.#currentThenable` to finalize\n      observer.updateResult()\n    })\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n"],"names":[],"mappings":";;;AA4CM,QAAQ,IAAI,aAAa;;AA3C/B,YAAY,WAAW;;AAEvB,SAAS,UAAU,qBAAqB;AACxC,SAAS,sBAAsB;AAC/B,SAAS,kCAAkC;AAC3C;AAKA,SAAS,sBAAsB;AAC/B;AAMA,SAAS,YAAY;;;;;;;;;;AASd,SAAS,aAOd,OAAA,EAOA,QAAA,EACA,WAAA,EACoC;IACpC,wCAA2C;QACzC,IAAI,OAAO,YAAY,YAAY,MAAM,OAAA,CAAQ,OAAO,GAAG;YACzD,MAAM,IAAI,MACR;QAEJ;IACF;IAEA,MAAM,uMAAS,iBAAA,EAAe,WAAW;IACzC,MAAM,oMAAc,iBAAA,CAAe;IACnC,MAAM,yBAAqB,2NAAA,CAA2B;IACtD,MAAM,mBAAmB,OAAO,mBAAA,CAAoB,OAAO;IAEzD,OAAO,iBAAA,CAAkB,EAAE,OAAA,EAAiB,4BAC5C;IAGF,IAAI,QAAQ,IAAI,aAAa,WAAc;QACzC,IAAI,CAAC,iBAAiB,OAAA,EAAS;YAC7B,QAAQ,KAAA,CACN,CAAA,CAAA,EAAI,iBAAiB,SAAS,CAAA,kPAAA,CAAA;QAElC;IACF;IAGA,iBAAiB,kBAAA,GAAqB,cAClC,gBACA;IAEJ,CAAA,GAAA,8KAAA,CAAA,uBAAA,EAAqB,gBAAgB;IACrC,CAAA,GAAA,wLAAA,CAAA,kCAAA,EAAgC,kBAAkB,kBAAkB;IAEpE,CAAA,GAAA,wLAAA,CAAA,6BAAA,EAA2B,kBAAkB;IAG7C,MAAM,kBAAkB,CAAC,OACtB,aAAA,CAAc,EACd,GAAA,CAAI,iBAAiB,SAAS;IAEjC,MAAM,CAAC,QAAQ,CAAA,qKAAU,WAAA;iCACvB,IACE,IAAI,SACF,QACA;;IAKN,MAAM,SAAS,SAAS,mBAAA,CAAoB,gBAAgB;IAE5D,MAAM,kBAAkB,CAAC,eAAe,QAAQ,UAAA,KAAe;sKACzD,uBAAA,oKACE,cAAA;yDACJ,CAAC,kBAAkB;YACjB,MAAM,cAAc,kBAChB,SAAS,SAAA,oLAAU,gBAAA,CAAc,UAAA,CAAW,aAAa,CAAC,gLAC1D,OAAA;YAIJ,SAAS,YAAA,CAAa;YAEtB,OAAO;QACT;wDACA;QAAC;QAAU,eAAe;KAAA;6CAE5B,IAAM,SAAS,gBAAA,CAAiB;;6CAChC,IAAM,SAAS,gBAAA,CAAiB;;sKAG5B,YAAA;kCAAU,MAAM;YACpB,SAAS,UAAA,CAAW,gBAAgB;QACtC;iCAAG;QAAC;QAAkB,QAAQ;KAAC;IAG/B,uLAAI,gBAAA,EAAc,kBAAkB,MAAM,GAAG;QAC3C,yLAAM,kBAAA,EAAgB,kBAAkB,UAAU,kBAAkB;IACtE;IAGA,iMACE,cAAA,EAAY;QACV;QACA;QACA,cAAc,iBAAiB,YAAA;QAC/B,OAAO,OACJ,aAAA,CAAc,EACd,GAAA,CAKC,iBAAiB,SAAS;QAC9B,UAAU,iBAAiB,QAAA;IAC7B,CAAC,GACD;QACA,MAAM,OAAO,KAAA;IACf;;IAEE,OAAO,iBAAA,CAAkB,EAAE,OAAA,EAAiB,2BAC5C,kBACA;IAGF,IACE,iBAAiB,6BAAA,IACjB,4KAAC,WAAA,uLACD,YAAA,EAAU,QAAQ,WAAW,GAC7B;QACA,MAAM,UAAU,kBAAA,2GAAA;2LAEZ,kBAAA,EAAgB,kBAAkB,UAAU,kBAAkB,IAAA,kGAAA;QAE9D,OAAO,aAAA,CAAc,EAAE,GAAA,CAAI,iBAAiB,SAAS,GAAG;QAE5D,SAAS,kLAAM,OAAI,EAAE,QAAQ,MAAM;YAEjC,SAAS,YAAA,CAAa;QACxB,CAAC;IACH;IAGA,OAAO,CAAC,iBAAiB,mBAAA,GACrB,SAAS,WAAA,CAAY,MAAM,IAC3B;AACN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2034, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/useInfiniteQuery.ts"],"sourcesContent":["'use client'\nimport { InfiniteQueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  DefaultError,\n  InfiniteData,\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type {\n  DefinedUseInfiniteQueryResult,\n  UseInfiniteQueryOptions,\n  UseInfiniteQueryResult,\n} from './types'\nimport type {\n  DefinedInitialDataInfiniteOptions,\n  UndefinedInitialDataInfiniteOptions,\n} from './infiniteQueryOptions'\n\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: DefinedInitialDataInfiniteOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): DefinedUseInfiniteQueryResult<TData, TError>\n\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UndefinedInitialDataInfiniteOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): UseInfiniteQueryResult<TData, TError>\n\nexport function useInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryFnData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): UseInfiniteQueryResult<TData, TError>\n\nexport function useInfiniteQuery(\n  options: UseInfiniteQueryOptions,\n  queryClient?: QueryClient,\n) {\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver as typeof QueryObserver,\n    queryClient,\n  )\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,6BAA6B;AACtC,SAAS,oBAAoB;;;;AAsEtB,SAAS,iBACd,OAAA,EACA,WAAA,EACA;IACA,8LAAO,eAAA,EACL,oMACA,wBAAA,EACA;AAEJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2054, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/useQuery.ts"],"sourcesContent":["'use client'\nimport { QueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type { DefaultError, QueryClient, QueryKey } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\nimport type {\n  DefinedInitialDataOptions,\n  UndefinedInitialDataOptions,\n} from './queryOptions'\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<TData, TError>\n\nexport function useQuery(options: UseQueryOptions, queryClient?: QueryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient)\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,qBAAqB;AAC9B,SAAS,oBAAoB;;;;AA0CtB,SAAS,SAAS,OAAA,EAA0B,WAAA,EAA2B;IAC5E,8LAAO,eAAA,EAAa,4LAAS,gBAAA,EAAe,WAAW;AACzD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2074, "column": 0}, "map": {"version":3,"file":"query.js","sourceRoot":"","sources":["../../../src/utils/query.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EASL,gBAAgB,IAAI,yBAAyB,EAC7C,QAAQ,IAAI,iBAAiB,EAC7B,WAAW,GACZ,MAAM,uBAAuB,CAAA;;AAO9B,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAA;;;;AAuDpC,SAAU,QAAQ,CACtB,UAEC;IAED,MAAM,MAAM,sLAAG,WAAA,AAAiB,EAAC;QAC/B,GAAI,UAAkB;QACtB,cAAc,sKAAE,SAAM,EAAE,qBAAqB;KAC9C,CAAoC,CAAA;IACrC,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAA;IACrC,OAAO,MAAM,CAAA;AACf,CAAC;AA2CK,SAAU,gBAAgB,CAM9B,UAEC;IAED,MAAM,MAAM,8LAAG,mBAAA,AAAyB,EAAC;QACvC,GAAI,UAAkB;QACtB,cAAc,sKAAE,SAAM,EAAE,qBAAqB;KAC9C,CAA4C,CAAA;IAC7C,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAA;IACrC,OAAO,MAAM,CAAA;AACf,CAAC","debugId":null}},
    {"offset": {"line": 2106, "column": 0}, "map": {"version":3,"file":"getChainId.js","sourceRoot":"","sources":["../../../src/actions/getChainId.ts"],"names":[],"mappings":"AAKA,iDAAA,EAAmD;;;AAC7C,SAAU,UAAU,CACxB,MAAc;IAEd,OAAO,MAAM,CAAC,KAAK,CAAC,OAAO,CAAA;AAC7B,CAAC","debugId":null}},
    {"offset": {"line": 2118, "column": 0}, "map": {"version":3,"file":"watchChainId.js","sourceRoot":"","sources":["../../../src/actions/watchChainId.ts"],"names":[],"mappings":"AAYA,mDAAA,EAAqD;;;AAC/C,SAAU,YAAY,CAC1B,MAAc,EACd,UAA0C;IAE1C,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAA;IAC/B,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAG,CAAD,IAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA;AAC7D,CAAC","debugId":null}},
    {"offset": {"line": 2131, "column": 0}, "map": {"version":3,"file":"useChainId.js","sourceRoot":"","sources":["../../../src/hooks/useChainId.ts"],"names":[],"mappings":";;;AAEA,OAAO,EAIL,UAAU,EACV,YAAY,GACb,MAAM,aAAa,CAAA;;AACpB,OAAO,EAAE,oBAAoB,EAAE,MAAM,OAAO,CAAA;AAG5C,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAZ1C,YAAY,CAAA;;;;AAqBN,SAAU,UAAU,CACxB,aAA2C,CAAA,CAAE;IAE7C,MAAM,MAAM,qKAAG,YAAA,AAAS,EAAC,UAAU,CAAC,CAAA;IAEpC,yKAAO,uBAAA,AAAoB;2CACzB,CAAC,QAAQ,EAAE,EAAE,gLAAC,eAAA,AAAY,EAAC,MAAM,EAAE;gBAAE,QAAQ;YAAA,CAAE,CAAC;;2CAChD,GAAG,EAAE,8KAAC,aAAA,AAAU,EAAC,MAAM,CAAC;;2CACxB,GAAG,EAAE,8KAAC,aAAA,AAAU,EAAC,MAAM,CAAC,CACzB,CAAA;;AACH,CAAC","debugId":null}},
    {"offset": {"line": 2160, "column": 0}, "map": {"version":3,"file":"useReadContract.js","sourceRoot":"","sources":["../../../src/hooks/useReadContract.ts"],"names":[],"mappings":";;;AAQA,OAAO,EAKL,wBAAwB,EACxB,iBAAiB,GAClB,MAAM,mBAAmB,CAAA;;AAI1B,OAAO,EAA2B,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AACrE,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAC5C,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AArB1C,YAAY,CAAA;;;;;AA8DN,SAAU,eAAe,CAO7B,aAMI,CAAA,CAAS;IAEb,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,GAAG,CAAA,CAAE,EAAE,GAAG,UAAU,CAAA;IAC7D,aAAa;IACb,MAAM,IAAI,GAAG,UAAU,CAAC,IAAuB,CAAA;IAE/C,MAAM,MAAM,qKAAG,YAAA,AAAS,EAAC,UAAU,CAAC,CAAA;IACpC,MAAM,OAAO,sKAAG,aAAA,AAAU,EAAC;QAAE,MAAM;IAAA,CAAE,CAAC,CAAA;IAEtC,MAAM,OAAO,IAAG,yMAAA,AAAwB,EACtC,MAAM,EACN;QAAE,GAAI,UAAkB;QAAE,OAAO,EAAE,UAAU,CAAC,OAAO,IAAI,OAAO;IAAA,CAAE,CACnE,CAAA;IACD,MAAM,OAAO,GAAG,OAAO,CACrB,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,CACpE,CAAA;IAED,qLAAO,WAAA,AAAQ,EAAC;QACd,GAAG,KAAK;QACR,GAAG,OAAO;QACV,OAAO;QACP,iBAAiB,EAAE,KAAK,CAAC,iBAAiB,wKAAI,oBAAiB;KAChE,CAAC,CAAA;AACJ,CAAC","debugId":null}},
    {"offset": {"line": 2199, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/query-core/src/mutationObserver.ts"],"sourcesContent":["import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2307, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/node_modules/%40tanstack/react-query/src/useMutation.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { noop, shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":[],"mappings":";;;;AACA,YAAY,WAAW;;AACvB,SAAS,kBAAkB,qBAAqB;AAChD,SAAS,sBAAsB;AAC/B,SAAS,MAAM,wBAAwB;;;;;;AAUhC,SAAS,YAMd,OAAA,EACA,WAAA,EACwD;IACxD,MAAM,uMAAS,iBAAA,EAAe,WAAW;IAEzC,MAAM,CAAC,QAAQ,CAAA,GAAU,6KAAA;gCACvB,IACE,0LAAI,mBAAA,CACF,QACA;;sKAIA,YAAA;iCAAU,MAAM;YACpB,SAAS,UAAA,CAAW,OAAO;QAC7B;gCAAG;QAAC;QAAU,OAAO;KAAC;IAEtB,MAAM,UAAe,wLAAA,oKACb,cAAA;oDACJ,CAAC,gBACC,SAAS,SAAA,oLAAU,gBAAA,CAAc,UAAA,CAAW,aAAa,CAAC;mDAC5D;QAAC,QAAQ;KAAA;oDAEX,IAAM,SAAS,gBAAA,CAAiB;;oDAChC,IAAM,SAAS,gBAAA,CAAiB;;IAGlC,MAAM,2KAAe,cAAA;2CAGnB,CAAC,WAAW,kBAAkB;YAC5B,SAAS,MAAA,CAAO,WAAW,aAAa,EAAE,KAAA,6KAAM,OAAI;QACtD;0CACA;QAAC,QAAQ;KAAA;IAGX,IACE,OAAO,KAAA,IACP,mMAAA,EAAiB,SAAS,OAAA,CAAQ,YAAA,EAAc;QAAC,OAAO,KAAK;KAAC,GAC9D;QACA,MAAM,OAAO,KAAA;IACf;IAEA,OAAO;QAAE,GAAG,MAAA;QAAQ;QAAQ,aAAa,OAAO,MAAA;IAAO;AACzD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2369, "column": 0}, "map": {"version":3,"file":"writeContract.js","sourceRoot":"","sources":["../../../src/query/writeContract.ts"],"names":[],"mappings":";;;AAGA,OAAO,EAIL,aAAa,GACd,MAAM,6BAA6B,CAAA;;AAI9B,SAAU,4BAA4B,CAC1C,MAAc;IAEd,OAAO;QACL,UAAU,EAAC,SAAS;YAClB,yLAAO,gBAAA,AAAa,EAAC,MAAM,EAAE,SAAS,CAAC,CAAA;QACzC,CAAC;QACD,WAAW,EAAE;YAAC,eAAe;SAAC;KAW/B,CAAA;AACH,CAAC","debugId":null}},
    {"offset": {"line": 2390, "column": 0}, "map": {"version":3,"file":"useWriteContract.js","sourceRoot":"","sources":["../../../src/hooks/useWriteContract.ts"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAA;AAMnD,OAAO,EAKL,4BAA4B,GAC7B,MAAM,mBAAmB,CAAA;AAQ1B,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAtB1C,YAAY,CAAA;;;;AAgEN,SAAU,gBAAgB,CAI9B,aAA0D,CAAA,CAAE;IAE5D,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAA;IAE/B,MAAM,MAAM,IAAG,6KAAA,AAAS,EAAC,UAAU,CAAC,CAAA;IAEpC,MAAM,eAAe,mLAAG,+BAAA,AAA4B,EAAC,MAAM,CAAC,CAAA;IAC5D,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,EAAE,yLAAG,cAAA,AAAW,EAAC;QACrD,GAAG,QAAQ;QACX,GAAG,eAAe;KACnB,CAAC,CAAA;IAGF,OAAO;QACL,GAAG,MAAM;QACT,aAAa,EAAE,MAAiC;QAChD,kBAAkB,EAAE,WAA2C;KAChE,CAAA;AACH,CAAC","debugId":null}},
    {"offset": {"line": 2420, "column": 0}, "map": {"version":3,"file":"getBalance.js","sourceRoot":"","sources":["../../../src/query/getBalance.ts"],"names":[],"mappings":";;;;AAEA,OAAO,EAIL,UAAU,GACX,MAAM,0BAA0B,CAAA;AAIjC,OAAO,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAA;;;AAMzC,SAAU,sBAAsB,CACpC,MAAc,EACd,UAAqC,CAAA,CAAE;IAEvC,OAAO;QACL,KAAK,CAAC,OAAO,EAAC,EAAE,QAAQ,EAAE;YACxB,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,GAAG,UAAU,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;YAC3D,IAAI,CAAC,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;YACpD,MAAM,OAAO,GAAG,OAAM,2LAAA,AAAU,EAAC,MAAM,EAAE;gBACvC,GAAI,UAAmC;gBACvC,OAAO;aACR,CAAC,CAAA;YACF,OAAO,OAAO,IAAI,IAAI,CAAA;QACxB,CAAC;QACD,QAAQ,EAAE,kBAAkB,CAAC,OAAO,CAAC;KAMtC,CAAA;AACH,CAAC;AAMK,SAAU,kBAAkB,CAChC,UAAqC,CAAA,CAAE;IAEvC,OAAO;QAAC,SAAS;gLAAE,qBAAA,AAAkB,EAAC,OAAO,CAAC;KAAU,CAAA;AAC1D,CAAC","debugId":null}},
    {"offset": {"line": 2454, "column": 0}, "map": {"version":3,"file":"useBalance.js","sourceRoot":"","sources":["../../../src/hooks/useBalance.ts"],"names":[],"mappings":";;;AAIA,OAAO,EAIL,sBAAsB,GACvB,MAAM,mBAAmB,CAAA;AAI1B,OAAO,EAA2B,QAAQ,EAAE,MAAM,mBAAmB,CAAA;AACrE,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAC5C,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAf1C,YAAY,CAAA;;;;;AAmCN,SAAU,UAAU,CAIxB,aAAuD,CAAA,CAAE;IAEzD,MAAM,EAAE,OAAO,EAAE,KAAK,GAAG,CAAA,CAAE,EAAE,GAAG,UAAU,CAAA;IAE1C,MAAM,MAAM,qKAAG,YAAA,AAAS,EAAC,UAAU,CAAC,CAAA;IACpC,MAAM,OAAO,sKAAG,aAAA,AAAU,EAAC;QAAE,MAAM;IAAA,CAAE,CAAC,CAAA;IAEtC,MAAM,OAAO,IAAG,qMAAA,AAAsB,EAAC,MAAM,EAAE;QAC7C,GAAG,UAAU;QACb,OAAO,EAAE,UAAU,CAAC,OAAO,IAAI,OAAO;KACvC,CAAC,CAAA;IACF,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAA;IAE3D,qLAAO,WAAA,AAAQ,EAAC;QAAE,GAAG,KAAK;QAAE,GAAG,OAAO;QAAE,OAAO;IAAA,CAAE,CAAC,CAAA;AACpD,CAAC","debugId":null}},
    {"offset": {"line": 2499, "column": 0}, "map": {"version":3,"file":"parseEther.js","sourceRoot":"","sources":["../../../utils/unit/parseEther.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAA;AAGpD,OAAO,EAA4B,UAAU,EAAE,MAAM,iBAAiB,CAAA;;;AAehE,SAAU,UAAU,CAAC,KAAa,EAAE,OAAuB,KAAK;IACpE,0KAAO,aAAA,AAAU,EAAC,KAAK,uJAAE,aAAU,CAAC,IAAI,CAAC,CAAC,CAAA;AAC5C,CAAC","debugId":null}}]
}