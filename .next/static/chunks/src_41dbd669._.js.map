{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/config/contracts.ts"],"sourcesContent":["// ApeChain Network Configuration\nexport const APECHAIN_ID = 33139;\n\n// Contract Addresses on ApeChain\nexport const CONTRACT_ADDRESSES = {\n  BIT_TOKEN: '0xd5f2A51440059C5E7B1E1E21634B5f48860A53f3', // BIT token address\n  MINING_CONTROLLER: '0x9281b1D9291e2D1911a400877B5c5e3c85342672', // Mining controller address\n  MAIN: '0x9281b1D9291e2D1911a400877B5c5e3c85342672' // Main contract address\n} as const;\n\n// Minimal ABIs for token interactions\nexport const ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', type: 'uint8' }],\n    type: 'function',\n  },\n] as const;\n\n// Main Contract ABI\nexport const MAIN_CONTRACT_ABI = [\n  {\n    inputs: [{ name: 'referrer', type: 'address' }],\n    name: 'purchaseInitialFacility',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'user', type: 'address' }],\n    name: 'initializedStarterFacility',\n    outputs: [{ name: '', type: 'bool' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'user', type: 'address' }],\n    name: 'getPlayerFacility',\n    outputs: [\n      { name: 'power', type: 'uint256' },\n      { name: 'level', type: 'uint256' },\n      { name: 'miners', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'user', type: 'address' }],\n    name: 'getPlayerStats',\n    outputs: [\n      { name: 'totalMined', type: 'uint256' },\n      { name: 'hashRate', type: 'uint256' },\n      { name: 'miningRate', type: 'uint256' },\n      { name: 'networkShare', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [{ name: 'user', type: 'address' }],\n    name: 'getUserReferralInfo',\n    outputs: [\n      { name: 'totalReferrals', type: 'uint256' },\n      { name: 'totalEarned', type: 'uint256' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const;\n\n// Mining Controller ABI\nexport const MINING_CONTROLLER_ABI = [\n  // Read functions\n  'function facilities(address user) view returns (uint256 power, uint256 level, uint256 lastClaimBlock)',\n  'function totalPower() view returns (uint256)',\n  'function rewardPerBlock() view returns (uint256)',\n  'function getUnclaimedRewards(address user) view returns (uint256)',\n  'function getUserMiningRate(address user) view returns (uint256)',\n  'function getNetworkHashRate() view returns (uint256)',\n  'function getUserHashRate(address user) view returns (uint256)',\n  'function getBlocksUntilHalving() view returns (uint256)',\n  'function getTotalMinedBit() view returns (uint256)',\n  'function getBurnedBit() view returns (uint256)',\n  \n  // Write functions\n  'function purchaseInitialFacility(address referrer) payable returns (bool)',\n  'function getStarterMiner() returns (bool)',\n  'function claimReward() returns (bool)',\n  'function upgradeFacility() returns (bool)',\n] as const;\n\nexport const BIT_TOKEN_ADDRESS = '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5' as const; "],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;;;AAC1B,MAAM,cAAc;AAGpB,MAAM,qBAAqB;IAChC,WAAW;IACX,mBAAmB;IACnB,MAAM,6CAA6C,wBAAwB;AAC7E;AAGO,MAAM,YAAY;IACvB;QACE,UAAU;QACV,QAAQ;YAAC;gBAAE,MAAM;gBAAU,MAAM;YAAU;SAAE;QAC7C,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAW,MAAM;YAAU;SAAE;QAC/C,MAAM;IACR;IACA;QACE,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAI,MAAM;YAAQ;SAAE;QACtC,MAAM;IACR;CACD;AAGM,MAAM,oBAAoB;IAC/B;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAY,MAAM;YAAU;SAAE;QAC/C,MAAM;QACN,SAAS,EAAE;QACX,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;SAAE;QAC3C,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAI,MAAM;YAAO;SAAE;QACrC,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;SAAE;QAC3C,MAAM;QACN,SAAS;YACP;gBAAE,MAAM;gBAAS,MAAM;YAAU;YACjC;gBAAE,MAAM;gBAAS,MAAM;YAAU;YACjC;gBAAE,MAAM;gBAAU,MAAM;YAAU;SACnC;QACD,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;SAAE;QAC3C,MAAM;QACN,SAAS;YACP;gBAAE,MAAM;gBAAc,MAAM;YAAU;YACtC;gBAAE,MAAM;gBAAY,MAAM;YAAU;YACpC;gBAAE,MAAM;gBAAc,MAAM;YAAU;YACtC;gBAAE,MAAM;gBAAgB,MAAM;YAAU;SACzC;QACD,iBAAiB;QACjB,MAAM;IACR;IACA;QACE,QAAQ;YAAC;gBAAE,MAAM;gBAAQ,MAAM;YAAU;SAAE;QAC3C,MAAM;QACN,SAAS;YACP;gBAAE,MAAM;gBAAkB,MAAM;YAAU;YAC1C;gBAAE,MAAM;gBAAe,MAAM;YAAU;SACxC;QACD,iBAAiB;QACjB,MAAM;IACR;CACD;AAGM,MAAM,wBAAwB;IACnC,iBAAiB;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,kBAAkB;IAClB;IACA;IACA;IACA;CACD;AAEM,MAAM,oBAAoB","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useGameState.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract, useBalance, useContractRead } from 'wagmi';\nimport { formatEther, parseEther } from 'viem';\nimport { CONTRACT_ADDRESSES, MINING_CONTROLLER_ABI, ERC20_ABI, APECHAIN_ID, MAIN_CONTRACT_ABI } from '../config/contracts';\nimport { useEffect, useState } from 'react';\n\ninterface PlayerFacility {\n  power: number;\n  level: number;\n  miners: number;\n  capacity: number;\n  used: number;\n  resources: number;\n  spaces: number;\n}\n\ninterface PlayerStats {\n  totalMined: bigint;\n  hashRate: number;\n  miningRate: number;\n  networkShare: number;\n}\n\nexport interface GameState {\n  // User state\n  isConnected: boolean;\n  address: string | undefined;\n  \n  // Resources\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n  \n  // Mining stats\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  \n  // Network stats\n  totalMinedBit: string;\n  burnedBit: string;\n  rewardPerBlock: string;\n  \n  // Mining rewards\n  minedBit: string;\n  \n  // Facility state\n  hasFacility: boolean;\n  facilityData?: PlayerFacility;\n  stats: PlayerStats;\n  \n  // Actions\n  purchaseFacility: (referrer?: string) => Promise<void>;\n  getStarterMiner: () => Promise<void>;\n  claimReward: () => Promise<void>;\n  upgradeFacility: () => Promise<void>;\n  \n  // Loading states\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isClaimingReward: boolean;\n  isUpgradingFacility: boolean;\n\n  // New fields\n  isGameActive: boolean;\n  isUserActive: boolean;\n\n  totalReferrals: number;\n  totalBigEarned: string;\n  refetch: () => void;\n}\n\nexport function useGameState(): GameState {\n  const { address, isConnected } = useAccount();\n  \n  // State variables\n  const [apeBalance, setApeBalance] = useState('0');\n  const [bitBalance, setBitBalance] = useState('0');\n  const [minedBit, setMinedBit] = useState('0');\n  const [hasFacility, setHasFacility] = useState(false);\n  const [facilityData, setFacilityData] = useState<PlayerFacility>();\n  const [spacesLeft, setSpacesLeft] = useState(0);\n  const [gigawattsAvailable, setGigawattsAvailable] = useState(0);\n  const [miningRate, setMiningRate] = useState('0');\n  const [hashRate, setHashRate] = useState('0');\n  const [blocksUntilHalving, setBlocksUntilHalving] = useState('0');\n  const [networkHashRatePercentage, setNetworkHashRatePercentage] = useState('0');\n  const [totalNetworkHashRate, setTotalNetworkHashRate] = useState('0');\n  const [isPurchasingFacility, setIsPurchasingFacility] = useState(false);\n  const [isGettingStarterMiner, setIsGettingStarterMiner] = useState(false);\n  const [isClaimingReward, setIsClaimingReward] = useState(false);\n  const [isUpgradingFacility, setIsUpgradingFacility] = useState(false);\n  const [isGameActive, setIsGameActive] = useState(false);\n  const [isUserActive, setIsUserActive] = useState(false);\n  const [totalReferrals, setTotalReferrals] = useState(0);\n  const [totalBigEarned, setTotalBigEarned] = useState('0');\n\n  // Get native APE balance\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get BIT token balance\n  const { data: bitBalanceData } = useContractRead({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get facility data\n  const { data: facilityDataResult, refetch: refetchFacility } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'getPlayerFacility',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Check if player has initialized facility\n  const { data: hasInitializedFacility, refetch: refetchInitialized } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'initializedStarterFacility',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get referral info\n  const { data: referralInfo } = useContractRead({\n    address: CONTRACT_ADDRESSES.MAIN,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'getUserReferralInfo',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Update state when data changes\n  useEffect(() => {\n    if (apeBalanceData) {\n      setApeBalance(apeBalanceData.formatted);\n    }\n  }, [apeBalanceData]);\n\n  useEffect(() => {\n    if (bitBalanceData) {\n      setBitBalance(formatEther(bitBalanceData as bigint));\n    }\n  }, [bitBalanceData]);\n\n  useEffect(() => {\n    if (hasInitializedFacility !== undefined) {\n      setHasFacility(!!hasInitializedFacility);\n    }\n  }, [hasInitializedFacility]);\n\n  useEffect(() => {\n    if (facilityDataResult) {\n      const [power, level, miners, capacity, used, resources, spaces] = facilityDataResult as unknown as number[];\n      setFacilityData({\n        power,\n        level,\n        miners,\n        capacity,\n        used,\n        resources,\n        spaces\n      });\n    }\n  }, [facilityDataResult]);\n\n  // Contract write functions\n  const { writeContract: writeMainContract } = useWriteContract();\n\n  const purchaseFacility = async (referrer?: string) => {\n    if (!isConnected || !address) return;\n    \n    try {\n      setIsPurchasingFacility(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MAIN,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [referrer || '0x0000000000000000000000000000000000000000'],\n        value: parseEther('.103'), // Initial facility price + fees\n      });\n      \n      // Refresh data after purchase\n      refetchInitialized?.();\n      refetchFacility?.();\n      \n    } catch (error) {\n      console.error('Error purchasing facility:', error);\n    } finally {\n      setIsPurchasingFacility(false);\n    }\n  };\n  \n  const getStarterMiner = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsGettingStarterMiner(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'getStarterMiner',\n      });\n      \n      // Refresh data after getting starter miner\n      \n    } catch (error) {\n      console.error('Error getting starter miner:', error);\n    } finally {\n      setIsGettingStarterMiner(false);\n    }\n  };\n  \n  const claimReward = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsClaimingReward(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'claimReward',\n      });\n      \n      // Reset mined BIT after claiming\n      setMinedBit('0');\n      \n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    } finally {\n      setIsClaimingReward(false);\n    }\n  };\n  \n  const upgradeFacility = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsUpgradingFacility(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'upgradeFacility',\n      });\n      \n      // Refresh facility data after upgrade\n      \n    } catch (error) {\n      console.error('Error upgrading facility:', error);\n    } finally {\n      setIsUpgradingFacility(false);\n    }\n  };\n  \n  const { data: isGameActive } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isGameActive',\n    query: {\n      enabled: true,\n    },\n  });\n\n  const { data: isUserActive } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isUserActive',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  const facility: PlayerFacility = {\n    power: facilityData?.power || 0,\n    level: facilityData?.level || 0,\n    miners: facilityData?.miners || 0,\n    capacity: facilityData?.capacity || 0,\n    used: facilityData?.used || 0,\n    resources: facilityData?.resources || 0,\n    spaces: facilityData?.spaces || 0,\n  };\n\n  const stats: PlayerStats = {\n    totalMined: facilityData?.totalMined || BigInt(0),\n    hashRate: facilityData?.hashRate || 0,\n    miningRate: facilityData?.miningRate || 0,\n    networkShare: facilityData?.networkShare || 0,\n  };\n  \n  return {\n    isConnected,\n    address,\n    apeBalance,\n    bitBalance,\n    spacesLeft,\n    gigawattsAvailable,\n    miningRate,\n    hashRate,\n    blocksUntilHalving,\n    networkHashRatePercentage,\n    totalNetworkHashRate,\n    totalMinedBit: stats.totalMined.toString(),\n    burnedBit: '1,238,626.5',\n    rewardPerBlock: '2.5',\n    minedBit,\n    hasFacility,\n    facilityData,\n    stats,\n    purchaseFacility,\n    getStarterMiner,\n    claimReward,\n    upgradeFacility,\n    isPurchasingFacility,\n    isGettingStarterMiner,\n    isClaimingReward,\n    isUpgradingFacility,\n    isGameActive: !!isGameActive,\n    isUserActive: !!isUserActive,\n    totalReferrals: referralInfo ? Number(referralInfo[0]) : 0,\n    totalBigEarned: referralInfo ? formatEther(referralInfo[1]) : '0.00',\n    refetch: () => {\n      refetchInitialized?.();\n      refetchFacility?.();\n    },\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useTokenBalance.ts"],"sourcesContent":["'use client';\n\nimport { useAccount, useContractRead, useBalance } from 'wagmi';\nimport { formatUnits } from 'viem';\nimport { APECHAIN_ID, CONTRACT_ADDRESSES, ERC20_ABI } from '../config/contracts';\n\nexport function useTokenBalance() {\n  const { address } = useAccount();\n\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  const { data: bitBalance } = useContractRead({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  return {\n    apeBalance: apeBalanceData?.formatted ?? '0',\n    bitBalance: bitBalance ? formatUnits(bitBalance as bigint, 18) : '0',\n  };\n} "],"names":[],"mappings":";;;AAEA;AAAA;AAAA;AACA;AACA;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;QAC1C,SAAS;QACT,SAAS,6HAAA,CAAA,cAAW;QACpB,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,MAAM,EAAE,MAAM,UAAU,EAAE,GAAG,CAAA,GAAA,yNAAA,CAAA,kBAAe,AAAD,EAAE;QAC3C,SAAS,6HAAA,CAAA,qBAAkB,CAAC,SAAS;QACrC,KAAK,6HAAA,CAAA,YAAS;QACd,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,OAAO;QACL,YAAY,gBAAgB,aAAa;QACzC,YAAY,aAAa,CAAA,GAAA,+JAAA,CAAA,cAAW,AAAD,EAAE,YAAsB,MAAM;IACnE;AACF;GAzBgB;;QACM,8JAAA,CAAA,aAAU;QAEG,8JAAA,CAAA,aAAU;QAQd,yNAAA,CAAA,kBAAe","debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/BuyFacilityModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport { Dialog } from '@headlessui/react';\nimport { useContractWrite, useAccount, useTransaction } from 'wagmi';\nimport { parseEther } from 'viem';\nimport { CONTRACT_ADDRESSES, MAIN_CONTRACT_ABI } from '@/config/contracts';\n\ninterface BuyFacilityModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nconst BuyFacilityModal: React.FC<BuyFacilityModalProps> = ({\n  isOpen,\n  onClose,\n  onConfirm\n}) => {\n  const { address } = useAccount();\n  \n  const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000' as `0x${string}`;\n  \n  const { data: hash, isPending: isWritePending, writeContract } = useContractWrite();\n\n  const { isLoading: isConfirming } = useTransaction({\n    hash,\n  });\n\n  const handlePurchase = async () => {\n    try {\n      await writeContract({\n        address: CONTRACT_ADDRESSES.MAIN,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [ZERO_ADDRESS],\n        value: parseEther('0.1'), // 10 APE\n      });\n      onConfirm();\n    } catch (error) {\n      console.error('Failed to purchase facility:', error);\n    }\n  };\n\n  const isLoading = isWritePending || isConfirming;\n\n  if (!isOpen) return null;\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      className=\"relative z-50\"\n    >\n      <div className=\"fixed inset-0 bg-black/70\" aria-hidden=\"true\" />\n      \n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-2xl bg-royal border-4 border-banana rounded-lg shadow-xl\">\n          <div className=\"p-6\">\n            <Dialog.Title className=\"text-xl font-press-start text-center text-banana mb-4\">\n              PURCHASE YOUR FIRST MINING SPACE\n            </Dialog.Title>\n            \n            <p className=\"text-sm font-press-start text-center text-white mb-6\">\n              Start mining BitApe with your own mining facility!\n            </p>\n\n            <div className=\"relative w-full h-48 mb-6\">\n              <Image\n                src=\"/bedroom.png\"\n                alt=\"Mining Facility\"\n                fill\n                className=\"object-contain pixel-art\"\n                priority\n              />\n            </div>\n\n            <div className=\"space-y-4 mb-6\">\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Power Output:</span>\n                <span className=\"text-banana\">20 WATTS</span>\n              </div>\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Space Capacity:</span>\n                <span className=\"text-banana\">4 UNITS</span>\n              </div>\n              <div className=\"flex justify-between items-center font-press-start text-sm\">\n                <span className=\"text-white\">Price:</span>\n                <span className=\"text-banana\">10 APE</span>\n              </div>\n            </div>\n\n            <div className=\"bg-royal-blue p-4 rounded-lg mb-6\">\n              <p className=\"text-center font-press-start text-banana text-sm\">\n                FREE STARTER MINER INCLUDED!\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4\">\n              <button\n                onClick={onClose}\n                className=\"px-6 py-2 bg-transparent font-press-start text-banana text-sm border-2 border-banana hover:bg-banana hover:text-royal transition-colors\"\n              >\n                CANCEL\n              </button>\n              <button\n                onClick={handlePurchase}\n                disabled={isLoading}\n                className=\"px-6 py-2 bg-banana font-press-start text-royal text-sm hover:bg-banana-dark transition-colors disabled:opacity-50\"\n              >\n                {isLoading ? 'PURCHASING...' : 'PURCHASE NOW'}\n              </button>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default BuyFacilityModal; "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAPA;;;;;;AAeA,MAAM,mBAAoD,CAAC,EACzD,MAAM,EACN,OAAO,EACP,SAAS,EACV;;IACC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,eAAe;IAErB,MAAM,EAAE,MAAM,IAAI,EAAE,WAAW,cAAc,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,4NAAA,CAAA,mBAAgB,AAAD;IAEhF,MAAM,EAAE,WAAW,YAAY,EAAE,GAAG,CAAA,GAAA,kKAAA,CAAA,iBAAc,AAAD,EAAE;QACjD;IACF;IAEA,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,cAAc;gBAClB,SAAS,6HAAA,CAAA,qBAAkB,CAAC,IAAI;gBAChC,KAAK,6HAAA,CAAA,oBAAiB;gBACtB,cAAc;gBACd,MAAM;oBAAC;iBAAa;gBACpB,OAAO,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;YACpB;YACA;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IAEA,MAAM,YAAY,kBAAkB;IAEpC,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC,kLAAA,CAAA,SAAM;QACL,MAAM;QACN,SAAS;QACT,WAAU;;0BAEV,6LAAC;gBAAI,WAAU;gBAA4B,eAAY;;;;;;0BAEvD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,kLAAA,CAAA,SAAM,CAAC,KAAK;oBAAC,WAAU;8BACtB,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,kLAAA,CAAA,SAAM,CAAC,KAAK;gCAAC,WAAU;0CAAwD;;;;;;0CAIhF,6LAAC;gCAAE,WAAU;0CAAuD;;;;;;0CAIpE,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,IAAI;oCACJ,WAAU;oCACV,QAAQ;;;;;;;;;;;0CAIZ,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,6LAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;kDAEhC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,6LAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;kDAEhC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,6LAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;;;;;;;0CAIlC,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAE,WAAU;8CAAmD;;;;;;;;;;;0CAKlE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,SAAS;wCACT,WAAU;kDACX;;;;;;kDAGD,6LAAC;wCACC,SAAS;wCACT,UAAU;wCACV,WAAU;kDAET,YAAY,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/C;GAxGM;;QAKgB,8JAAA,CAAA,aAAU;QAImC,4NAAA,CAAA,mBAAgB;QAE7C,kKAAA,CAAA,iBAAc;;;KAX9C;uCA0GS","debugId":null}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/AccountModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useAccount, useDisconnect } from 'wagmi';\n\ninterface AccountModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  address: string;\n  apeBalance: string;\n  bitBalance: string;\n}\n\nconst AccountModal: React.FC<AccountModalProps> = ({\n  isOpen,\n  onClose,\n  address,\n  apeBalance,\n  bitBalance\n}) => {\n  const { disconnect } = useDisconnect();\n\n  if (!isOpen) return null;\n\n  // Format address for display (truncate middle)\n  const displayAddress = `${address.slice(0, 6)}...${address.slice(-4)}`;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black/70\">\n      <div className=\"bg-royal p-6 max-w-lg w-full mx-4 border-2 border-banana\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"font-press-start text-2xl text-banana\">ACCOUNT</h2>\n          <button \n            onClick={onClose}\n            className=\"text-white hover:text-banana font-press-start text-xl\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Account Info Section */}\n        <div className=\"bg-royal-dark p-4 mb-6\">\n          <h3 className=\"font-press-start text-white mb-4\">\n            YOUR ACCOUNT INFORMATION AND BALANCES\n          </h3>\n\n          {/* Wallet Address */}\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm mb-2\">WALLET ADDRESS</p>\n            <div className=\"flex justify-between items-center bg-royal p-2\">\n              <span className=\"font-press-start text-sm text-white\">{displayAddress}</span>\n              <button \n                className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-4 py-1 font-press-start text-sm transition-colors\"\n                onClick={() => navigator.clipboard.writeText(address)}\n              >\n                COPY\n              </button>\n            </div>\n          </div>\n\n          {/* Balances */}\n          <div className=\"mb-2\">\n            <p className=\"font-press-start text-sm\">APE BALANCE</p>\n            <p className=\"font-press-start text-banana\">{apeBalance} APE</p>\n          </div>\n\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm\">BIT BALANCE</p>\n            <p className=\"font-press-start text-banana\">{bitBalance} BIT</p>\n          </div>\n\n          {/* Bridge Section */}\n          <div className=\"bg-royal p-4\">\n            <p className=\"font-press-start text-sm mb-2\">NEED TO BRIDGE APE TO APECHAIN?</p>\n            <button className=\"w-full bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal py-2 font-press-start flex justify-center items-center transition-colors\">\n              BRIDGE APE <span className=\"ml-2\">→</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Footer Buttons */}\n        <div className=\"flex justify-between\">\n          <button \n            onClick={onClose}\n            className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-6 py-2 font-press-start transition-colors\"\n          >\n            CLOSE\n          </button>\n          <button \n            onClick={() => {\n              disconnect();\n              onClose();\n            }}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 font-press-start transition-colors\"\n          >\n            DISCONNECT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountModal;\n"],"names":[],"mappings":";;;;AAGA;;;AAHA;;AAaA,MAAM,eAA4C,CAAC,EACjD,MAAM,EACN,OAAO,EACP,OAAO,EACP,UAAU,EACV,UAAU,EACX;;IACC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,gBAAa,AAAD;IAEnC,IAAI,CAAC,QAAQ,OAAO;IAEpB,+CAA+C;IAC/C,MAAM,iBAAiB,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;IAEtE,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAMH,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAKjD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAuC;;;;;;sDACvD,6LAAC;4CACC,WAAU;4CACV,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;sDAC9C;;;;;;;;;;;;;;;;;;sCAOL,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,6LAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAG1D,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,6LAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAI1D,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,6LAAC;oCAAO,WAAU;;wCAAqK;sDAC1K,6LAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;8BAMxC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS;gCACP;gCACA;4BACF;4BACA,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;GAzFM;;QAOmB,iKAAA,CAAA,gBAAa;;;KAPhC;uCA2FS","debugId":null}},
    {"offset": {"line": 1076, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ReferralModal.tsx"],"sourcesContent":["import React from 'react';\nimport { Dialog } from '@headlessui/react';\nimport { useAccount } from 'wagmi';\n\ninterface ReferralModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  totalReferrals: number;\n  totalBigEarned: string;\n}\n\nconst ReferralModal: React.FC<ReferralModalProps> = ({\n  isOpen,\n  onClose,\n  totalReferrals,\n  totalBigEarned\n}) => {\n  const { address } = useAccount();\n\n  const referralLink = address \n    ? `https://www.bigcoin.tech?ref=${address}`\n    : '';\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      className=\"relative z-50\"\n    >\n      <div className=\"fixed inset-0 bg-black/70\" aria-hidden=\"true\" />\n      \n      <div className=\"fixed inset-0 flex items-center justify-center p-4\">\n        <Dialog.Panel className=\"w-full max-w-2xl bg-royal border-4 border-banana rounded-lg shadow-xl\">\n          <div className=\"p-6\">\n            <Dialog.Title className=\"text-xl font-press-start text-center text-banana mb-4\">\n              REFER A FRIEND\n            </Dialog.Title>\n            \n            <p className=\"text-sm font-press-start text-center text-white mb-8\">\n              SHARE YOUR REFERRAL LINK WITH FRIENDS AND EARN A 2.5% BONUS OF WHATEVER BIGCOIN THEY MINE!\n            </p>\n\n            <div className=\"bg-royal-dark p-4 mb-8 rounded\">\n              <div className=\"flex justify-between mb-6\">\n                <div>\n                  <p className=\"font-press-start text-white mb-2\">TOTAL REFERRALS</p>\n                  <p className=\"font-press-start text-banana text-xl\">{totalReferrals}</p>\n                </div>\n                <div>\n                  <p className=\"font-press-start text-white mb-2\">TOTAL BIG EARNED</p>\n                  <p className=\"font-press-start text-banana text-xl\">{totalBigEarned} $BIG</p>\n                </div>\n              </div>\n\n              <p className=\"font-press-start text-white mb-2\">YOUR REFERRAL LINK</p>\n              <div className=\"flex gap-2\">\n                <input\n                  type=\"text\"\n                  readOnly\n                  value={referralLink}\n                  aria-label=\"Your referral link\"\n                  title=\"Your referral link\"\n                  className=\"flex-1 bg-royal font-press-start text-banana p-2 border-2 border-banana\"\n                />\n                <button\n                  onClick={() => navigator.clipboard.writeText(referralLink)}\n                  className=\"px-6 py-2 bg-banana font-press-start text-royal hover:bg-banana-dark transition-colors\"\n                >\n                  COPY\n                </button>\n              </div>\n            </div>\n\n            <div className=\"flex justify-center\">\n              <button\n                onClick={onClose}\n                className=\"px-6 py-2 bg-transparent font-press-start text-banana border-2 border-banana hover:bg-banana hover:text-royal transition-colors\"\n              >\n                CLOSE\n              </button>\n            </div>\n          </div>\n        </Dialog.Panel>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ReferralModal; "],"names":[],"mappings":";;;;AACA;AACA;;;;;AASA,MAAM,gBAA8C,CAAC,EACnD,MAAM,EACN,OAAO,EACP,cAAc,EACd,cAAc,EACf;;IACC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,eAAe,UACjB,CAAC,6BAA6B,EAAE,SAAS,GACzC;IAEJ,qBACE,6LAAC,kLAAA,CAAA,SAAM;QACL,MAAM;QACN,SAAS;QACT,WAAU;;0BAEV,6LAAC;gBAAI,WAAU;gBAA4B,eAAY;;;;;;0BAEvD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,kLAAA,CAAA,SAAM,CAAC,KAAK;oBAAC,WAAU;8BACtB,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,kLAAA,CAAA,SAAM,CAAC,KAAK;gCAAC,WAAU;0CAAwD;;;;;;0CAIhF,6LAAC;gCAAE,WAAU;0CAAuD;;;;;;0CAIpE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;;kEACC,6LAAC;wDAAE,WAAU;kEAAmC;;;;;;kEAChD,6LAAC;wDAAE,WAAU;kEAAwC;;;;;;;;;;;;0DAEvD,6LAAC;;kEACC,6LAAC;wDAAE,WAAU;kEAAmC;;;;;;kEAChD,6LAAC;wDAAE,WAAU;;4DAAwC;4DAAe;;;;;;;;;;;;;;;;;;;kDAIxE,6LAAC;wCAAE,WAAU;kDAAmC;;;;;;kDAChD,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDACC,MAAK;gDACL,QAAQ;gDACR,OAAO;gDACP,cAAW;gDACX,OAAM;gDACN,WAAU;;;;;;0DAEZ,6LAAC;gDACC,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;gDAC7C,WAAU;0DACX;;;;;;;;;;;;;;;;;;0CAML,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;GA3EM;;QAMgB,8JAAA,CAAA,aAAU;;;KAN1B;uCA6ES","debugId":null}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/app/room/%5Baddress%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useParams, useRouter } from 'next/navigation';\nimport { useAccount } from 'wagmi';\nimport { useEffect } from 'react';\nimport { useGameState } from '@/hooks/useGameState';\nimport { useTokenBalance } from '@/hooks/useTokenBalance';\nimport BuyFacilityModal from '@/components/BuyFacilityModal';\nimport AccountModal from '@/components/AccountModal';\nimport ReferralModal from '@/components/ReferralModal';\n\ntype Tab = 'RESOURCES' | 'SPACE' | 'SELECTED TILE';\n\nexport default function RoomPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { address, isConnected } = useAccount();\n  const gameState = useGameState();\n  const { apeBalance, bitBalance } = useTokenBalance();\n  const [activeTab, setActiveTab] = useState<Tab>('RESOURCES');\n  const [isBuyModalOpen, setIsBuyModalOpen] = useState(false);\n  const [isProfileModalOpen, setIsProfileModalOpen] = useState(false);\n  const [isReferralModalOpen, setIsReferralModalOpen] = useState(false);\n\n  // Redirect if not connected or trying to access someone else's room\n  useEffect(() => {\n    if (!isConnected) {\n      router.push('/');\n    } else if (address && params?.address && \n      (typeof params.address === 'string') && \n      address.toLowerCase() !== params.address.toLowerCase()) {\n      router.push(`/room/${address}`);\n    }\n  }, [isConnected, address, params?.address, router]);\n\n  if (!isConnected || !address) {\n    return null;\n  }\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'RESOURCES':\n        return (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center gap-2 font-press-start text-white\">\n              <span className=\"text-banana\">💎</span>\n              <span>{apeBalance} APE</span>\n            </div>\n            <div className=\"flex items-center gap-2 font-press-start text-white\">\n              <span className=\"text-banana\">🪙</span>\n              <span>{bitBalance} BIT</span>\n            </div>\n            <div className=\"flex items-center gap-2 font-press-start text-white\">\n              <span className=\"text-banana\">🏠</span>\n              <span>0 SPACES LEFT</span>\n            </div>\n            <div className=\"flex items-center gap-2 font-press-start text-white\">\n              <span className=\"text-banana\">⚡</span>\n              <span>0 GIGAWATTS AVAILABLE</span>\n            </div>\n          </div>\n        );\n      case 'SPACE':\n        return (\n          <div className=\"font-press-start text-white space-y-4\">\n            <p>- NO MINING SPACE</p>\n            <p>- 0 TOTAL SPACES</p>\n            <p>- 0 TOTAL GIGAWATTS</p>\n            <p>- CANT MINE WITHOUT SPACE, BUDDY</p>\n            <div className=\"mt-6\">\n              <button \n                onClick={() => setIsBuyModalOpen(true)}\n                className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors px-6 py-2 font-press-start\"\n              >\n                UPGRADE\n              </button>\n            </div>\n          </div>\n        );\n      case 'SELECTED TILE':\n        return (\n          <div className=\"font-press-start text-white\">\n            <p>NO TILE SELECTED</p>\n            <p>CLICK ON A TILE TO VIEW ITS DETAILS</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-royal\">\n      {/* Header */}\n      <header className=\"nav-bar flex justify-between items-center px-6 py-4\">\n        <div className=\"flex items-center\">\n          <Image\n            src=\"/bitape-logo.svg\"\n            alt=\"BitApe Logo\"\n            width={32}\n            height={32}\n            className=\"mr-2 pixel-art\"\n          />\n          <span className=\"font-press-start text-banana text-xl\">bitape</span>\n        </div>\n        <nav className=\"flex items-center gap-4\">\n          <Link href=\"/about\" className=\"font-press-start text-white hover:text-banana\">\n            ABOUT\n          </Link>\n          <Link href=\"/trade\" className=\"font-press-start text-white hover:text-banana\">\n            TRADE $BIT\n          </Link>\n          <Link href=\"/leaderboard\" className=\"font-press-start text-[#4A5568] hover:text-banana\">\n            LEADERBOARD\n          </Link>\n          <button className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\">\n            ANNOUNCEMENTS\n          </button>\n          <button \n            onClick={() => setIsReferralModalOpen(true)}\n            className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\"\n          >\n            REFER A FRIEND\n          </button>\n          <button \n            onClick={() => setIsProfileModalOpen(true)}\n            className=\"font-press-start text-banana border-2 border-banana px-4 py-2 hover:bg-banana hover:text-royal pixel-button\"\n          >\n            PROFILE\n          </button>\n        </nav>\n      </header>\n\n      <div className=\"grid grid-cols-12 gap-6 p-6\">\n        {/* Left Column */}\n        <div className=\"col-span-4\">\n          {/* Resources Panel */}\n          <div className=\"panel p-4 mb-6\">\n            <div className=\"flex gap-4 font-press-start text-white mb-4\">\n              {(['RESOURCES', 'SPACE', 'SELECTED TILE'] as const).map((tab) => (\n                <button\n                  key={tab}\n                  onClick={() => setActiveTab(tab)}\n                  className={`${activeTab === tab ? 'text-banana' : 'text-[#4A5568]'}`}\n                >\n                  {tab}\n                </button>\n              ))}\n            </div>\n            {renderTabContent()}\n          </div>\n\n          {/* Stats Panel */}\n          <div className=\"panel p-4 mb-6\">\n            <div className=\"flex gap-4 font-press-start text-white mb-4\">\n              <button className=\"text-banana\">SIMPLE</button>\n              <button className=\"text-[#4A5568]\">PRO</button>\n            </div>\n            <div className=\"space-y-2 font-press-start text-white\">\n              <p>- YOU ARE MINING {gameState.miningRate} BitApe A DAY</p>\n              <p>- YOUR HASH RATE IS {gameState.hashRate} GH/S</p>\n              <p>- {gameState.blocksUntilHalving} BLOCKS UNTIL NEXT HALVENING</p>\n              <p>- YOU HAVE {gameState.networkHashRatePercentage}% OF THE TOTAL NETWORK HASH RATE ({gameState.totalNetworkHashRate} GH/S)</p>\n            </div>\n          </div>\n\n          {/* Mining Panel */}\n          <div className=\"panel p-4\">\n            <div className=\"text-center font-press-start\">\n              <p className=\"text-white mb-4\">YOU HAVE MINED {gameState.minedBit} $BIT</p>\n              <button \n                onClick={() => gameState.claimReward()}\n                disabled={gameState.isClaimingReward || !gameState.hasFacility}\n                className=\"w-full bg-royal text-banana py-2 px-4 hover:bg-royal-dark disabled:opacity-50 pixel-button\"\n              >\n                CLAIM MINED $BIT\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Room Area */}\n        <div className=\"col-span-8\">\n          <div className=\"relative w-full h-full min-h-[600px] bg-royal border-4 border-banana rounded-lg overflow-hidden\">\n            {!gameState.hasFacility ? (\n              <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                <Image\n                  src=\"/bedroom.png\"\n                  alt=\"Empty Room\"\n                  fill\n                  className=\"object-cover opacity-30\"\n                  priority\n                />\n                <h2 className=\"text-2xl font-press-start text-white mb-8 z-10\">\n                  YOU DON'T HAVE A SPACE TO MINE!\n                </h2>\n                <button\n                  onClick={() => setIsBuyModalOpen(true)}\n                  className=\"px-8 py-3 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors font-press-start z-10\"\n                >\n                  BUY FACILITY\n                </button>\n              </div>\n            ) : (\n              <div className=\"relative w-full h-full\">\n                {/* Facility Image */}\n                <div className=\"relative w-full h-[80%]\">\n                  <Image\n                    src=\"/bedroom.png\"\n                    alt=\"Your Mining Facility\"\n                    fill\n                    className=\"object-contain\"\n                    priority\n                  />\n                </div>\n                \n                {/* Control Panel */}\n                <div className=\"absolute bottom-0 left-0 right-0 p-4 bg-royal border-t-2 border-banana\">\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex gap-4\">\n                      <button className=\"px-6 py-2 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors font-press-start\">\n                        GRID\n                      </button>\n                      <button className=\"px-6 py-2 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors font-press-start\">\n                        UPGRADE\n                      </button>\n                    </div>\n                    <div className=\"font-press-start text-banana\">\n                      BIGBOY 9000\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Buy Facility Modal */}\n      <BuyFacilityModal \n        isOpen={isBuyModalOpen}\n        onClose={() => setIsBuyModalOpen(false)}\n        onConfirm={() => {\n          setIsBuyModalOpen(false);\n          // Refresh the game state after purchase\n          gameState.refetch?.();\n        }}\n      />\n\n      {/* Profile Modal */}\n      {isConnected && address && (\n        <AccountModal\n          isOpen={isProfileModalOpen}\n          onClose={() => setIsProfileModalOpen(false)}\n          address={address}\n          apeBalance={apeBalance}\n          bitBalance={bitBalance}\n        />\n      )}\n\n      {/* Referral Modal */}\n      <ReferralModal\n        isOpen={isReferralModalOpen}\n        onClose={() => setIsReferralModalOpen(false)}\n        totalReferrals={gameState.totalReferrals || 0}\n        totalBigEarned={gameState.totalBigEarned || '0.00'}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}