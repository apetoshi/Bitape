{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useGameState.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract } from 'wagmi';\nimport { formatEther, parseEther } from 'viem';\nimport { MAIN_CONTRACT_ADDRESS, MAIN_CONTRACT_ABI, BITAPE_TOKEN_ADDRESS, BITAPE_TOKEN_ABI } from '../config/web3';\nimport { useEffect, useState } from 'react';\n\nexport interface GameState {\n  // User state\n  isConnected: boolean;\n  address: string | undefined;\n  \n  // Resources\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n  \n  // Mining stats\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  \n  // Mining rewards\n  minedBit: string;\n  \n  // Facility state\n  hasFacility: boolean;\n  facilityLevel: number;\n  facilityPower: number;\n  \n  // Actions\n  purchaseFacility: (referrer?: string) => Promise<void>;\n  getStarterMiner: () => Promise<void>;\n  claimReward: () => Promise<void>;\n  upgradeFacility: () => Promise<void>;\n  \n  // Loading states\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isClaimingReward: boolean;\n  isUpgradingFacility: boolean;\n}\n\nexport function useGameState(): GameState {\n  const { address, isConnected } = useAccount();\n  \n  // State variables\n  const [apeBalance, setApeBalance] = useState('0');\n  const [bitBalance, setBitBalance] = useState('0');\n  const [minedBit, setMinedBit] = useState('0');\n  const [hasFacility, setHasFacility] = useState(false);\n  const [facilityLevel, setFacilityLevel] = useState(0);\n  const [facilityPower, setFacilityPower] = useState(0);\n  const [spacesLeft, setSpacesLeft] = useState(0);\n  const [gigawattsAvailable, setGigawattsAvailable] = useState(0);\n  const [miningRate, setMiningRate] = useState('0');\n  const [hashRate, setHashRate] = useState('0');\n  const [blocksUntilHalving, setBlocksUntilHalving] = useState('0');\n  const [networkHashRatePercentage, setNetworkHashRatePercentage] = useState('0');\n  const [totalNetworkHashRate, setTotalNetworkHashRate] = useState('0');\n  \n  // Contract read hooks\n  const { data: facilityData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'facilities',\n    args: [address],\n    enabled: isConnected && !!address,\n  });\n  \n  const { data: apeBalanceData } = useReadContract({\n    address: BITAPE_TOKEN_ADDRESS,\n    abi: BITAPE_TOKEN_ABI,\n    functionName: 'balanceOf',\n    args: [address],\n    enabled: isConnected && !!address,\n  });\n  \n  const { data: totalPowerData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'totalPower',\n    enabled: isConnected,\n  });\n  \n  const { data: rewardPerBlockData } = useReadContract({\n    address: MAIN_CONTRACT_ADDRESS,\n    abi: MAIN_CONTRACT_ABI,\n    functionName: 'rewardPerBlock',\n    enabled: isConnected,\n  });\n  \n  // Contract write hooks\n  const { writeContractAsync: writeMainContract, isPending: isMainContractPending } = useWriteContract();\n  \n  // Loading states\n  const [isPurchasingFacility, setIsPurchasingFacility] = useState(false);\n  const [isGettingStarterMiner, setIsGettingStarterMiner] = useState(false);\n  const [isClaimingReward, setIsClaimingReward] = useState(false);\n  const [isUpgradingFacility, setIsUpgradingFacility] = useState(false);\n  \n  // Update state based on contract data\n  useEffect(() => {\n    if (facilityData) {\n      const [power, level, lastClaimBlock] = facilityData as [bigint, bigint, bigint];\n      setFacilityPower(Number(power));\n      setFacilityLevel(Number(level));\n      setHasFacility(Number(power) > 0);\n      \n      // Calculate available gigawatts based on facility power\n      setGigawattsAvailable(Number(power) / 1000); // Assuming 1 GW = 1000 power units\n      \n      // Calculate spaces left (placeholder logic)\n      setSpacesLeft(0); // In BitApe, users have one facility\n      \n      // Calculate mining rate if facility exists\n      if (Number(power) > 0 && totalPowerData && rewardPerBlockData) {\n        const playerPower = Number(power);\n        const totalPower = Number(totalPowerData);\n        const rewardPerBlock = Number(rewardPerBlockData);\n        \n        // Calculate mining rate (BIT per day)\n        const blocksPerDay = 7200; // Approximate blocks per day\n        const dailyReward = (playerPower / totalPower) * rewardPerBlock * blocksPerDay;\n        setMiningRate(dailyReward.toFixed(2));\n        \n        // Set hash rate (GH/s)\n        setHashRate((playerPower * 228).toFixed(0)); // Simplified calculation\n        \n        // Network hash rate percentage\n        const percentage = (playerPower / totalPower) * 100;\n        setNetworkHashRatePercentage(percentage.toFixed(6));\n        \n        // Total network hash rate\n        setTotalNetworkHashRate((totalPower * 228).toFixed(0));\n        \n        // Blocks until halving (placeholder)\n        setBlocksUntilHalving('3,284,172');\n        \n        // Calculate mined BIT (placeholder)\n        setMinedBit('0.5107');\n      }\n    }\n  }, [facilityData, totalPowerData, rewardPerBlockData]);\n  \n  // Update APE balance\n  useEffect(() => {\n    if (isConnected && address) {\n      // For demo purposes, set a placeholder APE balance\n      setApeBalance('0.00818');\n    }\n  }, [isConnected, address]);\n  \n  // Update BIT balance\n  useEffect(() => {\n    if (apeBalanceData) {\n      setBitBalance(formatEther(apeBalanceData as bigint));\n    } else {\n      // For demo purposes, set a placeholder BIT balance\n      setBitBalance('26.5474');\n    }\n  }, [apeBalanceData]);\n  \n  // Action functions\n  const purchaseFacility = async (referrer?: string) => {\n    if (!isConnected || !address) return;\n    \n    try {\n      setIsPurchasingFacility(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [referrer || '0x0000000000000000000000000000000000000000'],\n        value: parseEther('10.003'), // Initial facility price + fees\n      });\n      \n      // Refresh data after purchase\n      // This would typically be handled by listening for events\n      \n    } catch (error) {\n      console.error('Error purchasing facility:', error);\n    } finally {\n      setIsPurchasingFacility(false);\n    }\n  };\n  \n  const getStarterMiner = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsGettingStarterMiner(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'getStarterMiner',\n      });\n      \n      // Refresh data after getting starter miner\n      \n    } catch (error) {\n      console.error('Error getting starter miner:', error);\n    } finally {\n      setIsGettingStarterMiner(false);\n    }\n  };\n  \n  const claimReward = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsClaimingReward(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'claimReward',\n      });\n      \n      // Reset mined BIT after claiming\n      setMinedBit('0');\n      \n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    } finally {\n      setIsClaimingReward(false);\n    }\n  };\n  \n  const upgradeFacility = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsUpgradingFacility(true);\n      \n      await writeMainContract({\n        address: MAIN_CONTRACT_ADDRESS,\n        abi: MAIN_CONTRACT_ABI,\n        functionName: 'upgradeFacility',\n      });\n      \n      // Refresh facility data after upgrade\n      \n    } catch (error) {\n      console.error('Error upgrading facility:', error);\n    } finally {\n      setIsUpgradingFacility(false);\n    }\n  };\n  \n  return {\n    isConnected,\n    address,\n    apeBalance,\n    bitBalance,\n    spacesLeft,\n    gigawattsAvailable,\n    miningRate,\n    hashRate,\n    blocksUntilHalving,\n    networkHashRatePercentage,\n    totalNetworkHashRate,\n    minedBit,\n    hasFacility,\n    facilityLevel,\n    facilityPower,\n    purchaseFacility,\n    getStarterMiner,\n    claimReward,\n    upgradeFacility,\n    isPurchasingFacility,\n    isGettingStarterMiner,\n    isClaimingReward,\n    isUpgradingFacility,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAyCO,SAAS;;IACd,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAE1C,kBAAkB;IAClB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,2BAA2B,6BAA6B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3E,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjE,sBAAsB;IACtB,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE;QAC7C,SAAS,wHAAA,CAAA,wBAAqB;QAC9B,KAAK,wHAAA,CAAA,oBAAiB;QACtB,cAAc;QACd,MAAM;YAAC;SAAQ;QACf,SAAS,eAAe,CAAC,CAAC;IAC5B;IAEA,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE;QAC/C,SAAS,wHAAA,CAAA,uBAAoB;QAC7B,KAAK,wHAAA,CAAA,mBAAgB;QACrB,cAAc;QACd,MAAM;YAAC;SAAQ;QACf,SAAS,eAAe,CAAC,CAAC;IAC5B;IAEA,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE;QAC/C,SAAS,wHAAA,CAAA,wBAAqB;QAC9B,KAAK,wHAAA,CAAA,oBAAiB;QACtB,cAAc;QACd,SAAS;IACX;IAEA,MAAM,EAAE,MAAM,kBAAkB,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,SAAS,wHAAA,CAAA,wBAAqB;QAC9B,KAAK,wHAAA,CAAA,oBAAiB;QACtB,cAAc;QACd,SAAS;IACX;IAEA,uBAAuB;IACvB,MAAM,EAAE,oBAAoB,iBAAiB,EAAE,WAAW,qBAAqB,EAAE,GAAG,CAAA,GAAA,oKAAA,CAAA,mBAAgB,AAAD;IAEnG,iBAAiB;IACjB,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/D,sCAAsC;IACtC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,cAAc;gBAChB,MAAM,CAAC,OAAO,OAAO,eAAe,GAAG;gBACvC,iBAAiB,OAAO;gBACxB,iBAAiB,OAAO;gBACxB,eAAe,OAAO,SAAS;gBAE/B,wDAAwD;gBACxD,sBAAsB,OAAO,SAAS,OAAO,mCAAmC;gBAEhF,4CAA4C;gBAC5C,cAAc,IAAI,qCAAqC;gBAEvD,2CAA2C;gBAC3C,IAAI,OAAO,SAAS,KAAK,kBAAkB,oBAAoB;oBAC7D,MAAM,cAAc,OAAO;oBAC3B,MAAM,aAAa,OAAO;oBAC1B,MAAM,iBAAiB,OAAO;oBAE9B,sCAAsC;oBACtC,MAAM,eAAe,MAAM,6BAA6B;oBACxD,MAAM,cAAc,AAAC,cAAc,aAAc,iBAAiB;oBAClE,cAAc,YAAY,OAAO,CAAC;oBAElC,uBAAuB;oBACvB,YAAY,CAAC,cAAc,GAAG,EAAE,OAAO,CAAC,KAAK,yBAAyB;oBAEtE,+BAA+B;oBAC/B,MAAM,aAAa,AAAC,cAAc,aAAc;oBAChD,6BAA6B,WAAW,OAAO,CAAC;oBAEhD,0BAA0B;oBAC1B,wBAAwB,CAAC,aAAa,GAAG,EAAE,OAAO,CAAC;oBAEnD,qCAAqC;oBACrC,sBAAsB;oBAEtB,oCAAoC;oBACpC,YAAY;gBACd;YACF;QACF;iCAAG;QAAC;QAAc;QAAgB;KAAmB;IAErD,qBAAqB;IACrB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,eAAe,SAAS;gBAC1B,mDAAmD;gBACnD,cAAc;YAChB;QACF;iCAAG;QAAC;QAAa;KAAQ;IAEzB,qBAAqB;IACrB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,gBAAgB;gBAClB,cAAc,CAAA,GAAA,+JAAA,CAAA,cAAW,AAAD,EAAE;YAC5B,OAAO;gBACL,mDAAmD;gBACnD,cAAc;YAChB;QACF;iCAAG;QAAC;KAAe;IAEnB,mBAAmB;IACnB,MAAM,mBAAmB,OAAO;QAC9B,IAAI,CAAC,eAAe,CAAC,SAAS;QAE9B,IAAI;YACF,wBAAwB;YAExB,MAAM,kBAAkB;gBACtB,SAAS,wHAAA,CAAA,wBAAqB;gBAC9B,KAAK,wHAAA,CAAA,oBAAiB;gBACtB,cAAc;gBACd,MAAM;oBAAC,YAAY;iBAA6C;gBAChE,OAAO,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;YACpB;QAEA,8BAA8B;QAC9B,0DAA0D;QAE5D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C,SAAU;YACR,wBAAwB;QAC1B;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,yBAAyB;YAEzB,MAAM,kBAAkB;gBACtB,SAAS,wHAAA,CAAA,wBAAqB;gBAC9B,KAAK,wHAAA,CAAA,oBAAiB;gBACtB,cAAc;YAChB;QAEA,2CAA2C;QAE7C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD,SAAU;YACR,yBAAyB;QAC3B;IACF;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,oBAAoB;YAEpB,MAAM,kBAAkB;gBACtB,SAAS,wHAAA,CAAA,wBAAqB;gBAC9B,KAAK,wHAAA,CAAA,oBAAiB;gBACtB,cAAc;YAChB;YAEA,iCAAiC;YACjC,YAAY;QAEd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C,SAAU;YACR,oBAAoB;QACtB;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,uBAAuB;YAEvB,MAAM,kBAAkB;gBACtB,SAAS,wHAAA,CAAA,wBAAqB;gBAC9B,KAAK,wHAAA,CAAA,oBAAiB;gBACtB,cAAc;YAChB;QAEA,sCAAsC;QAExC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C,SAAU;YACR,uBAAuB;QACzB;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GA1OgB;;QACmB,8JAAA,CAAA,aAAU;QAkBZ,mKAAA,CAAA,kBAAe;QAQb,mKAAA,CAAA,kBAAe;QAQf,mKAAA,CAAA,kBAAe;QAOX,mKAAA,CAAA,kBAAe;QAQgC,oKAAA,CAAA,mBAAgB","debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ConnectWalletButton.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useWeb3Modal } from '@web3modal/wagmi/react';\nimport { useAccount, useDisconnect } from 'wagmi';\n\ninterface ConnectWalletButtonProps {\n  className?: string;\n}\n\nconst ConnectWalletButton: React.FC<ConnectWalletButtonProps> = ({ className }) => {\n  const { open } = useWeb3Modal();\n  const { isConnected } = useAccount();\n  const { disconnect } = useDisconnect();\n\n  const handleClick = () => {\n    if (isConnected) {\n      disconnect();\n    } else {\n      open();\n    }\n  };\n\n  return (\n    <button \n      onClick={handleClick} \n      className={`bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors font-press-start ${className}`}\n    >\n      {isConnected ? 'PROFILE' : 'CONNECT WALLET'}\n    </button>\n  );\n};\n\nexport default ConnectWalletButton;\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAAA;;;AAJA;;;AAUA,MAAM,sBAA0D,CAAC,EAAE,SAAS,EAAE;;IAC5E,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,2LAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IACjC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,gBAAa,AAAD;IAEnC,MAAM,cAAc;QAClB,IAAI,aAAa;YACf;QACF,OAAO;YACL;QACF;IACF;IAEA,qBACE,6LAAC;QACC,SAAS;QACT,WAAW,CAAC,sHAAsH,EAAE,WAAW;kBAE9I,cAAc,YAAY;;;;;;AAGjC;GArBM;;QACa,2LAAA,CAAA,eAAY;QACL,8JAAA,CAAA,aAAU;QACX,iKAAA,CAAA,gBAAa;;;KAHhC;uCAuBS","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport ConnectWalletButton from './ConnectWalletButton';\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"bg-royal py-4 px-6 flex justify-between items-center\">\n      <div className=\"flex items-center\">\n        {/* Logo would be replaced with actual BitApe logo */}\n        <div className=\"mr-2 text-banana font-bold text-2xl\">\n          <span className=\"pixel-text\">bitape</span>\n        </div>\n        \n        <nav className=\"hidden md:flex ml-8\">\n          <Link href=\"/about\" className=\"pixel-text text-white mx-3 hover:text-banana\">\n            ABOUT\n          </Link>\n          <Link href=\"/trade\" className=\"pixel-text text-white mx-3 hover:text-banana\">\n            TRADE $BIT\n          </Link>\n          <Link href=\"/leaderboard\" className=\"pixel-text text-white mx-3 hover:text-banana\">\n            LEADERBOARD\n          </Link>\n        </nav>\n      </div>\n      \n      <div className=\"flex items-center\">\n        <Link href=\"/announcements\" className=\"pixel-button mr-2 hidden md:block\">\n          ANNOUNCEMENTS\n        </Link>\n        <Link href=\"/refer\" className=\"pixel-button mr-2 hidden md:block\">\n          REFER A FRIEND\n        </Link>\n        <ConnectWalletButton />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMA,MAAM,SAAmB;IACvB,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAK,WAAU;sCAAa;;;;;;;;;;;kCAG/B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAS,WAAU;0CAA+C;;;;;;0CAG7E,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAS,WAAU;0CAA+C;;;;;;0CAG7E,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAe,WAAU;0CAA+C;;;;;;;;;;;;;;;;;;0BAMvF,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAiB,WAAU;kCAAoC;;;;;;kCAG1E,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAS,WAAU;kCAAoC;;;;;;kCAGlE,6LAAC,4IAAA,CAAA,UAAmB;;;;;;;;;;;;;;;;;AAI5B;KAjCM;uCAmCS","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ResourcesPanel.tsx"],"sourcesContent":["import React from 'react';\nimport Image from 'next/image';\n\ninterface ResourcesPanelProps {\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n}\n\nconst ResourcesPanel: React.FC<ResourcesPanelProps> = ({\n  apeBalance,\n  bitBalance,\n  spacesLeft,\n  gigawattsAvailable\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <h2 className=\"pixel-text text-banana-yellow mb-4\">RESOURCES</h2>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">💎</span>\n        <span className=\"pixel-text\">{apeBalance} APE</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">🪙</span>\n        <span className=\"pixel-text\">{bitBalance} BIT</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">🏠</span>\n        <span className=\"pixel-text\">{spacesLeft} SPACES LEFT</span>\n      </div>\n      <div className=\"resource-item\">\n        <span className=\"resource-item-icon\">⚡</span>\n        <span className=\"pixel-text\">{gigawattsAvailable} GIGAWATTS AVAILABLE</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ResourcesPanel;\n"],"names":[],"mappings":";;;;;AAUA,MAAM,iBAAgD,CAAC,EACrD,UAAU,EACV,UAAU,EACV,UAAU,EACV,kBAAkB,EACnB;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAqC;;;;;;0BACnD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,6LAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,6LAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,6LAAC;wBAAK,WAAU;;4BAAc;4BAAW;;;;;;;;;;;;;0BAE3C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;kCAAqB;;;;;;kCACrC,6LAAC;wBAAK,WAAU;;4BAAc;4BAAmB;;;;;;;;;;;;;;;;;;;AAIzD;KA3BM;uCA6BS","debugId":null}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/StatsDisplay.tsx"],"sourcesContent":["import React from 'react';\n\ninterface StatsDisplayProps {\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  isSimpleView?: boolean;\n}\n\nconst StatsDisplay: React.FC<StatsDisplayProps> = ({\n  miningRate,\n  hashRate,\n  blocksUntilHalving,\n  networkHashRatePercentage,\n  totalNetworkHashRate,\n  isSimpleView = true\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"pixel-text text-banana-yellow\">STATS</h2>\n        <div className=\"flex\">\n          <button \n            className={`tab-button text-xs ${isSimpleView ? 'active' : ''}`}\n          >\n            SIMPLE\n          </button>\n          <button \n            className={`tab-button text-xs ${!isSimpleView ? 'active' : ''}`}\n          >\n            PRO\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"text-sm\">\n        <p className=\"mb-2 pixel-text\">- YOU ARE MINING <span className=\"text-banana-yellow\">{miningRate} BITAPE</span> A DAY</p>\n        <p className=\"mb-2 pixel-text\">- YOUR HASH RATE IS <span className=\"text-banana-yellow\">{hashRate} GH/S</span></p>\n        <p className=\"mb-2 pixel-text\">- <span className=\"text-banana-yellow\">{blocksUntilHalving} BLOCKS</span> UNTIL NEXT HALVENING</p>\n        <p className=\"mb-2 pixel-text\">- YOU HAVE <span className=\"text-banana-yellow\">{networkHashRatePercentage}%</span> OF THE TOTAL NETWORK HASH RATE (<span className=\"text-banana-yellow\">{totalNetworkHashRate} GH/S</span>)</p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatsDisplay;\n"],"names":[],"mappings":";;;;;AAWA,MAAM,eAA4C,CAAC,EACjD,UAAU,EACV,QAAQ,EACR,kBAAkB,EAClB,yBAAyB,EACzB,oBAAoB,EACpB,eAAe,IAAI,EACpB;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,WAAW,CAAC,mBAAmB,EAAE,eAAe,WAAW,IAAI;0CAChE;;;;;;0CAGD,6LAAC;gCACC,WAAW,CAAC,mBAAmB,EAAE,CAAC,eAAe,WAAW,IAAI;0CACjE;;;;;;;;;;;;;;;;;;0BAML,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAE,WAAU;;4BAAkB;0CAAiB,6LAAC;gCAAK,WAAU;;oCAAsB;oCAAW;;;;;;;4BAAc;;;;;;;kCAC/G,6LAAC;wBAAE,WAAU;;4BAAkB;0CAAoB,6LAAC;gCAAK,WAAU;;oCAAsB;oCAAS;;;;;;;;;;;;;kCAClG,6LAAC;wBAAE,WAAU;;4BAAkB;0CAAE,6LAAC;gCAAK,WAAU;;oCAAsB;oCAAmB;;;;;;;4BAAc;;;;;;;kCACxG,6LAAC;wBAAE,WAAU;;4BAAkB;0CAAW,6LAAC;gCAAK,WAAU;;oCAAsB;oCAA0B;;;;;;;4BAAQ;0CAAiC,6LAAC;gCAAK,WAAU;;oCAAsB;oCAAqB;;;;;;;4BAAY;;;;;;;;;;;;;;;;;;;AAIlO;KAlCM;uCAoCS","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/MiningClaimSection.tsx"],"sourcesContent":["import React from 'react';\n\ninterface MiningClaimSectionProps {\n  minedBit: string;\n  onClaimReward: () => Promise<void>;\n  isClaimingReward: boolean;\n}\n\nconst MiningClaimSection: React.FC<MiningClaimSectionProps> = ({\n  minedBit,\n  onClaimReward,\n  isClaimingReward\n}) => {\n  return (\n    <div className=\"stats-panel\">\n      <div className=\"flex flex-col items-center justify-center py-4\">\n        <p className=\"pixel-text mb-4\">YOU HAVE MINED <span className=\"text-banana-yellow\">{minedBit} $BIT</span></p>\n        <button \n          className=\"claim-button\"\n          onClick={onClaimReward}\n          disabled={isClaimingReward || parseFloat(minedBit) <= 0}\n        >\n          {isClaimingReward ? 'CLAIMING...' : 'CLAIM MINED $BIT'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MiningClaimSection;\n"],"names":[],"mappings":";;;;;AAQA,MAAM,qBAAwD,CAAC,EAC7D,QAAQ,EACR,aAAa,EACb,gBAAgB,EACjB;IACC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAE,WAAU;;wBAAkB;sCAAe,6LAAC;4BAAK,WAAU;;gCAAsB;gCAAS;;;;;;;;;;;;;8BAC7F,6LAAC;oBACC,WAAU;oBACV,SAAS;oBACT,UAAU,oBAAoB,WAAW,aAAa;8BAErD,mBAAmB,gBAAgB;;;;;;;;;;;;;;;;;AAK9C;KAnBM;uCAqBS","debugId":null}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/RoomVisualization.tsx"],"sourcesContent":["import React from 'react';\n\ninterface RoomVisualizationProps {\n  hasFacility: boolean;\n  onPurchaseFacility: () => Promise<void>;\n  onGetStarterMiner: () => Promise<void>;\n  onUpgradeFacility: () => Promise<void>;\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isUpgradingFacility: boolean;\n}\n\nconst RoomVisualization: React.FC<RoomVisualizationProps> = ({\n  hasFacility,\n  onPurchaseFacility,\n  onGetStarterMiner,\n  onUpgradeFacility,\n  isPurchasingFacility,\n  isGettingStarterMiner,\n  isUpgradingFacility\n}) => {\n  if (!hasFacility) {\n    return (\n      <div className=\"room-container flex flex-col items-center justify-center\">\n        <h2 className=\"pixel-text text-2xl mb-8\">YOU DONT HAVE A SPACE TO MINE!</h2>\n        <button \n          className=\"pixel-button\"\n          onClick={onPurchaseFacility}\n          disabled={isPurchasingFacility}\n        >\n          {isPurchasingFacility ? 'PURCHASING...' : 'BUY FACILITY'}\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"room-container relative\">\n      {/* This would be replaced with actual room visualization with miners */}\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <div className=\"grid grid-cols-3 gap-4 p-4\">\n          {/* Placeholder for miners */}\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n          <div className=\"miner bg-royal-blue-dark p-2 border border-banana-yellow\">\n            <div className=\"w-12 h-12 bg-banana-yellow-dark\"></div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Room furniture (simplified) */}\n      <div className=\"absolute bottom-4 right-4 w-16 h-24 bg-royal-blue-light border border-banana-yellow\"></div>\n      <div className=\"absolute top-4 right-4 w-24 h-16 bg-royal-blue-light border border-banana-yellow\"></div>\n      \n      {/* Control buttons */}\n      <div className=\"absolute bottom-4 left-4 flex space-x-2\">\n        <button \n          className=\"pixel-button text-xs\"\n          onClick={onGetStarterMiner}\n          disabled={isGettingStarterMiner}\n        >\n          GRID\n        </button>\n        <button \n          className=\"pixel-button text-xs\"\n          onClick={onUpgradeFacility}\n          disabled={isUpgradingFacility}\n        >\n          UPGRADE\n        </button>\n      </div>\n      \n      {/* BIGBOY 9000 label */}\n      <div className=\"absolute bottom-4 right-4\">\n        <span className=\"pixel-text text-banana-yellow text-xs\">BITBOY 9000</span>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomVisualization;\n"],"names":[],"mappings":";;;;;AAYA,MAAM,oBAAsD,CAAC,EAC3D,WAAW,EACX,kBAAkB,EAClB,iBAAiB,EACjB,iBAAiB,EACjB,oBAAoB,EACpB,qBAAqB,EACrB,mBAAmB,EACpB;IACC,IAAI,CAAC,aAAa;QAChB,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA2B;;;;;;8BACzC,6LAAC;oBACC,WAAU;oBACV,SAAS;oBACT,UAAU;8BAET,uBAAuB,kBAAkB;;;;;;;;;;;;IAIlD;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;;;;;;;;;;sCAEjB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;0BAMrB,6LAAC;gBAAI,WAAU;;;;;;0BACf,6LAAC;gBAAI,WAAU;;;;;;0BAGf,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,WAAU;wBACV,SAAS;wBACT,UAAU;kCACX;;;;;;kCAGD,6LAAC;wBACC,WAAU;wBACV,SAAS;wBACT,UAAU;kCACX;;;;;;;;;;;;0BAMH,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAK,WAAU;8BAAwC;;;;;;;;;;;;;;;;;AAIhE;KAtEM;uCAwES","debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/GameLayout.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useGameState } from '../hooks/useGameState';\nimport Header from '../components/Header';\nimport ResourcesPanel from '../components/ResourcesPanel';\nimport StatsDisplay from '../components/StatsDisplay';\nimport MiningClaimSection from '../components/MiningClaimSection';\nimport RoomVisualization from '../components/RoomVisualization';\n\nconst GameLayout: React.FC = () => {\n  const gameState = useGameState();\n  \n  return (\n    <div className=\"min-h-screen flex flex-col bg-royal\">\n      <Header />\n      \n      <main className=\"flex-grow p-4 md:p-6 lg:p-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 max-w-7xl mx-auto\">\n          {/* Left column */}\n          <div className=\"flex flex-col space-y-6\">\n            <div className=\"flex space-x-2\">\n              <button className=\"tab-button active\">RESOURCES</button>\n              <button className=\"tab-button\">SPACE</button>\n              <button className=\"tab-button\">SELECTED TILE</button>\n            </div>\n            \n            <ResourcesPanel \n              apeBalance={gameState.apeBalance}\n              bitBalance={gameState.bitBalance}\n              spacesLeft={gameState.spacesLeft}\n              gigawattsAvailable={gameState.gigawattsAvailable}\n            />\n            \n            <StatsDisplay \n              miningRate={gameState.miningRate}\n              hashRate={gameState.hashRate}\n              blocksUntilHalving={gameState.blocksUntilHalving}\n              networkHashRatePercentage={gameState.networkHashRatePercentage}\n              totalNetworkHashRate={gameState.totalNetworkHashRate}\n            />\n            \n            <MiningClaimSection \n              minedBit={gameState.minedBit}\n              onClaimReward={gameState.claimReward}\n              isClaimingReward={gameState.isClaimingReward}\n            />\n          </div>\n          \n          {/* Right column */}\n          <div className=\"flex flex-col\">\n            <RoomVisualization \n              hasFacility={gameState.hasFacility}\n              onPurchaseFacility={() => gameState.purchaseFacility()}\n              onGetStarterMiner={gameState.getStarterMiner}\n              onUpgradeFacility={gameState.upgradeFacility}\n              isPurchasingFacility={gameState.isPurchasingFacility}\n              isGettingStarterMiner={gameState.isGettingStarterMiner}\n              isUpgradingFacility={gameState.isUpgradingFacility}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default GameLayout;\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;AAUA,MAAM,aAAuB;;IAC3B,MAAM,YAAY,CAAA,GAAA,+HAAA,CAAA,eAAY,AAAD;IAE7B,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+HAAA,CAAA,UAAM;;;;;0BAEP,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAO,WAAU;sDAAoB;;;;;;sDACtC,6LAAC;4CAAO,WAAU;sDAAa;;;;;;sDAC/B,6LAAC;4CAAO,WAAU;sDAAa;;;;;;;;;;;;8CAGjC,6LAAC,uIAAA,CAAA,UAAc;oCACb,YAAY,UAAU,UAAU;oCAChC,YAAY,UAAU,UAAU;oCAChC,YAAY,UAAU,UAAU;oCAChC,oBAAoB,UAAU,kBAAkB;;;;;;8CAGlD,6LAAC,qIAAA,CAAA,UAAY;oCACX,YAAY,UAAU,UAAU;oCAChC,UAAU,UAAU,QAAQ;oCAC5B,oBAAoB,UAAU,kBAAkB;oCAChD,2BAA2B,UAAU,yBAAyB;oCAC9D,sBAAsB,UAAU,oBAAoB;;;;;;8CAGtD,6LAAC,2IAAA,CAAA,UAAkB;oCACjB,UAAU,UAAU,QAAQ;oCAC5B,eAAe,UAAU,WAAW;oCACpC,kBAAkB,UAAU,gBAAgB;;;;;;;;;;;;sCAKhD,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,0IAAA,CAAA,UAAiB;gCAChB,aAAa,UAAU,WAAW;gCAClC,oBAAoB,IAAM,UAAU,gBAAgB;gCACpD,mBAAmB,UAAU,eAAe;gCAC5C,mBAAmB,UAAU,eAAe;gCAC5C,sBAAsB,UAAU,oBAAoB;gCACpD,uBAAuB,UAAU,qBAAqB;gCACtD,qBAAqB,UAAU,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhE;GAvDM;;QACc,+HAAA,CAAA,eAAY;;;KAD1B;uCAyDS","debugId":null}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/LandingPage.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport ConnectWalletButton from './ConnectWalletButton';\nimport { useAccount } from 'wagmi';\n\nconst LandingPage = () => {\n  const { isConnected } = useAccount();\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      {/* Header */}\n      <header className=\"flex justify-between items-center px-6 py-4\">\n        <div className=\"flex items-center gap-8\">\n          <div className=\"flex items-center\">\n            <Image\n              src=\"/bitape-logo.svg\"\n              alt=\"BitApe Logo\"\n              width={32}\n              height={32}\n              className=\"mr-2\"\n            />\n            <span className=\"font-press-start text-banana text-xl\">bitape</span>\n          </div>\n          <nav className=\"flex gap-8\">\n            <Link href=\"/about\" className=\"font-press-start text-white hover:text-banana\">\n              ABOUT\n            </Link>\n            <Link href=\"/trade\" className=\"font-press-start text-white hover:text-banana\">\n              TRADE $BIT\n            </Link>\n            <Link href=\"/leaderboard\" className=\"font-press-start text-[#4A5568] hover:text-banana\">\n              LEADERBOARD\n            </Link>\n          </nav>\n        </div>\n        <ConnectWalletButton className=\"px-6 py-2 font-press-start\" />\n      </header>\n\n      {/* Main Content */}\n      <main className=\"flex-grow flex flex-col items-center justify-center p-4 relative\">\n        {/* Grid Background */}\n        <div className=\"absolute inset-0 bg-royal\"\n          style={{\n            backgroundImage: `\n              linear-gradient(to right, rgba(255,255,255,0.05) 1px, transparent 1px),\n              linear-gradient(to bottom, rgba(255,255,255,0.05) 1px, transparent 1px)\n            `,\n            backgroundSize: '24px 24px'\n          }}\n        />\n\n        <div className=\"relative z-10 max-w-4xl mx-auto text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-press-start mb-4 text-banana\">\n            BITAPE: A PEER-TO-PEER APE CASH SYSTEM\n          </h1>\n          \n          <p className=\"text-2xl md:text-3xl font-press-start mb-8 text-banana\">\n            971,753 $BIT HAS ALREADY BEEN MINED.\n          </p>\n          \n          <p className=\"text-xl md:text-2xl font-press-start mb-12 text-white\">\n            START EARNING TODAY.\n          </p>\n\n          <div className=\"mb-12\">\n            <div className=\"relative w-[200px] h-[200px] mx-auto border-2 border-banana\">\n              <Image\n                src=\"/globe.svg\"\n                alt=\"Globe Animation\"\n                fill\n                priority\n                className=\"object-contain\"\n              />\n            </div>\n          </div>\n\n          <div className=\"w-full max-w-md mx-auto\">\n            <button className=\"w-full font-press-start text-xl py-4 px-8 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors\">\n              CONNECT WALLET TO START MINING\n            </button>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default LandingPage; "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAQA,MAAM,cAAc;;IAClB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAEjC,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAO,WAAU;;kCAChB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,gIAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAI;wCACJ,OAAO;wCACP,QAAQ;wCACR,WAAU;;;;;;kDAEZ,6LAAC;wCAAK,WAAU;kDAAuC;;;;;;;;;;;;0CAEzD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAS,WAAU;kDAAgD;;;;;;kDAG9E,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAS,WAAU;kDAAgD;;;;;;kDAG9E,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAe,WAAU;kDAAoD;;;;;;;;;;;;;;;;;;kCAK5F,6LAAC,4IAAA,CAAA,UAAmB;wBAAC,WAAU;;;;;;;;;;;;0BAIjC,6LAAC;gBAAK,WAAU;;kCAEd,6LAAC;wBAAI,WAAU;wBACb,OAAO;4BACL,iBAAiB,CAAC;;;YAGlB,CAAC;4BACD,gBAAgB;wBAClB;;;;;;kCAGF,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAyD;;;;;;0CAIvE,6LAAC;gCAAE,WAAU;0CAAyD;;;;;;0CAItE,6LAAC;gCAAE,WAAU;0CAAwD;;;;;;0CAIrE,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,KAAI;wCACJ,IAAI;wCACJ,QAAQ;wCACR,WAAU;;;;;;;;;;;;;;;;0CAKhB,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAO,WAAU;8CAAiJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/K;GAhFM;;QACoB,8JAAA,CAAA,aAAU;;;KAD9B;uCAkFS","debugId":null}},
    {"offset": {"line": 1402, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useAccount } from 'wagmi';\nimport GameLayout from '@/components/GameLayout';\nimport LandingPage from '@/components/LandingPage';\n\nexport default function Home() {\n  const { isConnected } = useAccount();\n  \n  return isConnected ? <GameLayout /> : <LandingPage />;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAEjC,OAAO,4BAAc,6LAAC,mIAAA,CAAA,UAAU;;;;6BAAM,6LAAC,oIAAA,CAAA,UAAW;;;;;AACpD;GAJwB;;QACE,8JAAA,CAAA,aAAU;;;KADZ","debugId":null}}]
}