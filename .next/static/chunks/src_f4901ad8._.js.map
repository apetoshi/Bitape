{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/config/contracts.ts"],"sourcesContent":["// ApeChain Network Configuration\nexport const APECHAIN_ID = 33139;\n\n// Contract Addresses on ApeChain\nexport const CONTRACT_ADDRESSES = {\n  APE_TOKEN: '0x4d224452801ACEd8B2F0aebE155379bb5D594381', // APE Token on ApeChain\n  BIT_TOKEN: '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5', // BIT token address\n  MINING_CONTROLLER: '0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6', // Mining controller address\n} as const;\n\n// Minimal ABIs for token interactions\nexport const ERC20_ABI = [\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [{ name: '', type: 'uint8' }],\n    type: 'function',\n  },\n] as const;\n\n// Mining Controller ABI\nexport const MINING_CONTROLLER_ABI = [\n  // Read functions\n  'function facilities(address user) view returns (uint256 power, uint256 level, uint256 lastClaimBlock)',\n  'function totalPower() view returns (uint256)',\n  'function rewardPerBlock() view returns (uint256)',\n  'function getUnclaimedRewards(address user) view returns (uint256)',\n  'function getUserMiningRate(address user) view returns (uint256)',\n  'function getNetworkHashRate() view returns (uint256)',\n  'function getUserHashRate(address user) view returns (uint256)',\n  'function getBlocksUntilHalving() view returns (uint256)',\n  'function getTotalMinedBit() view returns (uint256)',\n  'function getBurnedBit() view returns (uint256)',\n  \n  // Write functions\n  'function purchaseInitialFacility(address referrer) payable returns (bool)',\n  'function getStarterMiner() returns (bool)',\n  'function claimReward() returns (bool)',\n  'function upgradeFacility() returns (bool)',\n] as const;\n\nexport const APE_TOKEN_ADDRESS = '0x4d224452801ACEd8B2F0aebE155379bb5D594381' as const;\nexport const BIT_TOKEN_ADDRESS = '0x1A4b46696b2bB4794Eb3D4c26f1c55F9170fa4C5' as const; "],"names":[],"mappings":"AAAA,iCAAiC;;;;;;;;;AAC1B,MAAM,cAAc;AAGpB,MAAM,qBAAqB;IAChC,WAAW;IACX,WAAW;IACX,mBAAmB;AACrB;AAGO,MAAM,YAAY;IACvB;QACE,UAAU;QACV,QAAQ;YAAC;gBAAE,MAAM;gBAAU,MAAM;YAAU;SAAE;QAC7C,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAW,MAAM;YAAU;SAAE;QAC/C,MAAM;IACR;IACA;QACE,UAAU;QACV,QAAQ,EAAE;QACV,MAAM;QACN,SAAS;YAAC;gBAAE,MAAM;gBAAI,MAAM;YAAQ;SAAE;QACtC,MAAM;IACR;CACD;AAGM,MAAM,wBAAwB;IACnC,iBAAiB;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,kBAAkB;IAClB;IACA;IACA;IACA;CACD;AAEM,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useGameState.ts"],"sourcesContent":["import { useAccount, useReadContract, useWriteContract, useBalance, useContractRead } from 'wagmi';\nimport { formatEther, parseEther } from 'viem';\nimport { CONTRACT_ADDRESSES, MINING_CONTROLLER_ABI, ERC20_ABI, APECHAIN_ID } from '../config/contracts';\nimport { useEffect, useState } from 'react';\n\nexport interface GameState {\n  // User state\n  isConnected: boolean;\n  address: string | undefined;\n  \n  // Resources\n  apeBalance: string;\n  bitBalance: string;\n  spacesLeft: number;\n  gigawattsAvailable: number;\n  \n  // Mining stats\n  miningRate: string;\n  hashRate: string;\n  blocksUntilHalving: string;\n  networkHashRatePercentage: string;\n  totalNetworkHashRate: string;\n  \n  // Network stats\n  totalMinedBit: string;\n  burnedBit: string;\n  rewardPerBlock: string;\n  \n  // Mining rewards\n  minedBit: string;\n  \n  // Facility state\n  hasFacility: boolean;\n  facilityLevel: number;\n  facilityPower: number;\n  \n  // Actions\n  purchaseFacility: (referrer?: string) => Promise<void>;\n  getStarterMiner: () => Promise<void>;\n  claimReward: () => Promise<void>;\n  upgradeFacility: () => Promise<void>;\n  \n  // Loading states\n  isPurchasingFacility: boolean;\n  isGettingStarterMiner: boolean;\n  isClaimingReward: boolean;\n  isUpgradingFacility: boolean;\n\n  // New fields\n  isGameActive: boolean;\n  isUserActive: boolean;\n}\n\nexport function useGameState(): GameState {\n  const { address, isConnected } = useAccount();\n  \n  // State variables\n  const [apeBalance, setApeBalance] = useState('0');\n  const [bitBalance, setBitBalance] = useState('0');\n  const [minedBit, setMinedBit] = useState('0');\n  const [hasFacility, setHasFacility] = useState(false);\n  const [facilityLevel, setFacilityLevel] = useState(0);\n  const [facilityPower, setFacilityPower] = useState(0);\n  const [spacesLeft, setSpacesLeft] = useState(0);\n  const [gigawattsAvailable, setGigawattsAvailable] = useState(0);\n  const [miningRate, setMiningRate] = useState('0');\n  const [hashRate, setHashRate] = useState('0');\n  const [blocksUntilHalving, setBlocksUntilHalving] = useState('0');\n  const [networkHashRatePercentage, setNetworkHashRatePercentage] = useState('0');\n  const [totalNetworkHashRate, setTotalNetworkHashRate] = useState('0');\n  \n  // Get native APE balance\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  // Get BIT token balance\n  const { data: bitBalanceData } = useReadContract({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  // Contract read hooks\n  const { data: facilityData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'facilities',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  const { data: totalPowerData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'totalPower',\n    query: {\n      enabled: isConnected,\n    },\n  });\n  \n  const { data: rewardPerBlockData } = useReadContract({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'rewardPerBlock',\n    query: {\n      enabled: isConnected,\n    },\n  });\n  \n  // Contract write hooks\n  const { writeContractAsync: writeMainContract, isPending: isMainContractPending } = useWriteContract();\n  \n  // Loading states\n  const [isPurchasingFacility, setIsPurchasingFacility] = useState(false);\n  const [isGettingStarterMiner, setIsGettingStarterMiner] = useState(false);\n  const [isClaimingReward, setIsClaimingReward] = useState(false);\n  const [isUpgradingFacility, setIsUpgradingFacility] = useState(false);\n  \n  // Update state based on contract data\n  useEffect(() => {\n    if (facilityData) {\n      const [power, level, lastClaimBlock] = facilityData as [bigint, bigint, bigint];\n      setFacilityPower(Number(power));\n      setFacilityLevel(Number(level));\n      setHasFacility(Number(power) > 0);\n      \n      // Calculate available gigawatts based on facility power\n      setGigawattsAvailable(Number(power) / 1000); // Assuming 1 GW = 1000 power units\n      \n      // Calculate spaces left (placeholder logic)\n      setSpacesLeft(0); // In BitApe, users have one facility\n      \n      // Calculate mining rate if facility exists\n      if (Number(power) > 0 && totalPowerData && rewardPerBlockData) {\n        const playerPower = Number(power);\n        const totalPower = Number(totalPowerData);\n        const rewardPerBlock = Number(rewardPerBlockData);\n        \n        // Calculate mining rate (BIT per day)\n        const blocksPerDay = 7200; // Approximate blocks per day\n        const dailyReward = (playerPower / totalPower) * rewardPerBlock * blocksPerDay;\n        setMiningRate(dailyReward.toFixed(2));\n        \n        // Set hash rate (GH/s)\n        setHashRate((playerPower * 228).toFixed(0)); // Simplified calculation\n        \n        // Network hash rate percentage\n        const percentage = (playerPower / totalPower) * 100;\n        setNetworkHashRatePercentage(percentage.toFixed(6));\n        \n        // Total network hash rate\n        setTotalNetworkHashRate((totalPower * 228).toFixed(0));\n        \n        // Blocks until halving (placeholder)\n        setBlocksUntilHalving('3,284,172');\n        \n        // Calculate mined BIT (placeholder)\n        setMinedBit('0.5107');\n      }\n    }\n  }, [facilityData, totalPowerData, rewardPerBlockData]);\n  \n  // Update APE balance\n  useEffect(() => {\n    if (apeBalanceData) {\n      setApeBalance(apeBalanceData.formatted);\n    } else {\n      setApeBalance('0');\n    }\n  }, [apeBalanceData]);\n  \n  // Update BIT balance\n  useEffect(() => {\n    if (bitBalanceData) {\n      setBitBalance(formatEther(bitBalanceData as bigint));\n    } else {\n      setBitBalance('0');\n    }\n  }, [bitBalanceData]);\n  \n  // Action functions\n  const purchaseFacility = async (referrer?: string) => {\n    if (!isConnected || !address) return;\n    \n    try {\n      setIsPurchasingFacility(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'purchaseInitialFacility',\n        args: [referrer || '0x0000000000000000000000000000000000000000'],\n        value: parseEther('10.003'), // Initial facility price + fees\n      });\n      \n      // Refresh data after purchase\n      // This would typically be handled by listening for events\n      \n    } catch (error) {\n      console.error('Error purchasing facility:', error);\n    } finally {\n      setIsPurchasingFacility(false);\n    }\n  };\n  \n  const getStarterMiner = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsGettingStarterMiner(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'getStarterMiner',\n      });\n      \n      // Refresh data after getting starter miner\n      \n    } catch (error) {\n      console.error('Error getting starter miner:', error);\n    } finally {\n      setIsGettingStarterMiner(false);\n    }\n  };\n  \n  const claimReward = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsClaimingReward(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'claimReward',\n      });\n      \n      // Reset mined BIT after claiming\n      setMinedBit('0');\n      \n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    } finally {\n      setIsClaimingReward(false);\n    }\n  };\n  \n  const upgradeFacility = async () => {\n    if (!isConnected || !address || !hasFacility) return;\n    \n    try {\n      setIsUpgradingFacility(true);\n      \n      await writeMainContract({\n        address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n        abi: MINING_CONTROLLER_ABI,\n        functionName: 'upgradeFacility',\n      });\n      \n      // Refresh facility data after upgrade\n      \n    } catch (error) {\n      console.error('Error upgrading facility:', error);\n    } finally {\n      setIsUpgradingFacility(false);\n    }\n  };\n  \n  const { data: isGameActive } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isGameActive',\n    query: {\n      enabled: true,\n    },\n  });\n\n  const { data: isUserActive } = useContractRead({\n    address: CONTRACT_ADDRESSES.MINING_CONTROLLER,\n    abi: MINING_CONTROLLER_ABI,\n    functionName: 'isUserActive',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n  \n  return {\n    isConnected,\n    address,\n    apeBalance,\n    bitBalance,\n    spacesLeft,\n    gigawattsAvailable,\n    miningRate,\n    hashRate,\n    blocksUntilHalving,\n    networkHashRatePercentage,\n    totalNetworkHashRate,\n    totalMinedBit: '2,211,552.572', // Placeholder values until we get real data\n    burnedBit: '1,238,626.5',\n    rewardPerBlock: '2.5',\n    minedBit,\n    hasFacility,\n    facilityLevel,\n    facilityPower,\n    purchaseFacility,\n    getStarterMiner,\n    claimReward,\n    upgradeFacility,\n    isPurchasingFacility,\n    isGettingStarterMiner,\n    isClaimingReward,\n    isUpgradingFacility,\n    isGameActive: !!isGameActive,\n    isUserActive: !!isUserActive,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAkDO,SAAS;;IACd,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAE1C,kBAAkB;IAClB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,2BAA2B,6BAA6B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3E,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjE,yBAAyB;IACzB,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;QAC1C,SAAS;QACT,SAAS,6HAAA,CAAA,cAAW;QACpB,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,wBAAwB;IACxB,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE;QAC/C,SAAS,6HAAA,CAAA,qBAAkB,CAAC,SAAS;QACrC,KAAK,6HAAA,CAAA,YAAS;QACd,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,sBAAsB;IACtB,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE;QAC7C,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;QAC7C,KAAK,6HAAA,CAAA,wBAAqB;QAC1B,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE;QAC/C,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;QAC7C,KAAK,6HAAA,CAAA,wBAAqB;QAC1B,cAAc;QACd,OAAO;YACL,SAAS;QACX;IACF;IAEA,MAAM,EAAE,MAAM,kBAAkB,EAAE,GAAG,CAAA,GAAA,mKAAA,CAAA,kBAAe,AAAD,EAAE;QACnD,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;QAC7C,KAAK,6HAAA,CAAA,wBAAqB;QAC1B,cAAc;QACd,OAAO;YACL,SAAS;QACX;IACF;IAEA,uBAAuB;IACvB,MAAM,EAAE,oBAAoB,iBAAiB,EAAE,WAAW,qBAAqB,EAAE,GAAG,CAAA,GAAA,oKAAA,CAAA,mBAAgB,AAAD;IAEnG,iBAAiB;IACjB,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/D,sCAAsC;IACtC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,cAAc;gBAChB,MAAM,CAAC,OAAO,OAAO,eAAe,GAAG;gBACvC,iBAAiB,OAAO;gBACxB,iBAAiB,OAAO;gBACxB,eAAe,OAAO,SAAS;gBAE/B,wDAAwD;gBACxD,sBAAsB,OAAO,SAAS,OAAO,mCAAmC;gBAEhF,4CAA4C;gBAC5C,cAAc,IAAI,qCAAqC;gBAEvD,2CAA2C;gBAC3C,IAAI,OAAO,SAAS,KAAK,kBAAkB,oBAAoB;oBAC7D,MAAM,cAAc,OAAO;oBAC3B,MAAM,aAAa,OAAO;oBAC1B,MAAM,iBAAiB,OAAO;oBAE9B,sCAAsC;oBACtC,MAAM,eAAe,MAAM,6BAA6B;oBACxD,MAAM,cAAc,AAAC,cAAc,aAAc,iBAAiB;oBAClE,cAAc,YAAY,OAAO,CAAC;oBAElC,uBAAuB;oBACvB,YAAY,CAAC,cAAc,GAAG,EAAE,OAAO,CAAC,KAAK,yBAAyB;oBAEtE,+BAA+B;oBAC/B,MAAM,aAAa,AAAC,cAAc,aAAc;oBAChD,6BAA6B,WAAW,OAAO,CAAC;oBAEhD,0BAA0B;oBAC1B,wBAAwB,CAAC,aAAa,GAAG,EAAE,OAAO,CAAC;oBAEnD,qCAAqC;oBACrC,sBAAsB;oBAEtB,oCAAoC;oBACpC,YAAY;gBACd;YACF;QACF;iCAAG;QAAC;QAAc;QAAgB;KAAmB;IAErD,qBAAqB;IACrB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,gBAAgB;gBAClB,cAAc,eAAe,SAAS;YACxC,OAAO;gBACL,cAAc;YAChB;QACF;iCAAG;QAAC;KAAe;IAEnB,qBAAqB;IACrB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,gBAAgB;gBAClB,cAAc,CAAA,GAAA,+JAAA,CAAA,cAAW,AAAD,EAAE;YAC5B,OAAO;gBACL,cAAc;YAChB;QACF;iCAAG;QAAC;KAAe;IAEnB,mBAAmB;IACnB,MAAM,mBAAmB,OAAO;QAC9B,IAAI,CAAC,eAAe,CAAC,SAAS;QAE9B,IAAI;YACF,wBAAwB;YAExB,MAAM,kBAAkB;gBACtB,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;gBAC7C,KAAK,6HAAA,CAAA,wBAAqB;gBAC1B,cAAc;gBACd,MAAM;oBAAC,YAAY;iBAA6C;gBAChE,OAAO,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;YACpB;QAEA,8BAA8B;QAC9B,0DAA0D;QAE5D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;QAC9C,SAAU;YACR,wBAAwB;QAC1B;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,yBAAyB;YAEzB,MAAM,kBAAkB;gBACtB,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;gBAC7C,KAAK,6HAAA,CAAA,wBAAqB;gBAC1B,cAAc;YAChB;QAEA,2CAA2C;QAE7C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD,SAAU;YACR,yBAAyB;QAC3B;IACF;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,oBAAoB;YAEpB,MAAM,kBAAkB;gBACtB,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;gBAC7C,KAAK,6HAAA,CAAA,wBAAqB;gBAC1B,cAAc;YAChB;YAEA,iCAAiC;YACjC,YAAY;QAEd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C,SAAU;YACR,oBAAoB;QACtB;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,aAAa;QAE9C,IAAI;YACF,uBAAuB;YAEvB,MAAM,kBAAkB;gBACtB,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;gBAC7C,KAAK,6HAAA,CAAA,wBAAqB;gBAC1B,cAAc;YAChB;QAEA,sCAAsC;QAExC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C,SAAU;YACR,uBAAuB;QACzB;IACF;IAEA,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,yNAAA,CAAA,kBAAe,AAAD,EAAE;QAC7C,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;QAC7C,KAAK,6HAAA,CAAA,wBAAqB;QAC1B,cAAc;QACd,OAAO;YACL,SAAS;QACX;IACF;IAEA,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,yNAAA,CAAA,kBAAe,AAAD,EAAE;QAC7C,SAAS,6HAAA,CAAA,qBAAkB,CAAC,iBAAiB;QAC7C,KAAK,6HAAA,CAAA,wBAAqB;QAC1B,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,eAAe;QACf,WAAW;QACX,gBAAgB;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,cAAc,CAAC,CAAC;QAChB,cAAc,CAAC,CAAC;IAClB;AACF;GApRgB;;QACmB,8JAAA,CAAA,aAAU;QAkBV,8JAAA,CAAA,aAAU;QASV,mKAAA,CAAA,kBAAe;QAWjB,mKAAA,CAAA,kBAAe;QAUb,mKAAA,CAAA,kBAAe;QASX,mKAAA,CAAA,kBAAe;QAUgC,oKAAA,CAAA,mBAAgB;QA+JrE,yNAAA,CAAA,kBAAe;QASf,yNAAA,CAAA,kBAAe","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/hooks/useTokenBalance.ts"],"sourcesContent":["'use client';\n\nimport { useAccount, useContractRead, useBalance } from 'wagmi';\nimport { formatUnits } from 'viem';\nimport { APECHAIN_ID, CONTRACT_ADDRESSES, ERC20_ABI } from '../config/contracts';\n\nexport function useTokenBalance() {\n  const { address } = useAccount();\n\n  const { data: apeBalanceData } = useBalance({\n    address: address as `0x${string}`,\n    chainId: APECHAIN_ID,\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  const { data: bitBalance } = useContractRead({\n    address: CONTRACT_ADDRESSES.BIT_TOKEN,\n    abi: ERC20_ABI,\n    functionName: 'balanceOf',\n    args: [address as `0x${string}`],\n    query: {\n      enabled: !!address,\n    },\n  });\n\n  return {\n    apeBalance: apeBalanceData?.formatted ?? '0',\n    bitBalance: bitBalance ? formatUnits(bitBalance as bigint, 18) : '0',\n  };\n} "],"names":[],"mappings":";;;AAEA;AAAA;AAAA;AACA;AACA;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAE7B,MAAM,EAAE,MAAM,cAAc,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD,EAAE;QAC1C,SAAS;QACT,SAAS,6HAAA,CAAA,cAAW;QACpB,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,MAAM,EAAE,MAAM,UAAU,EAAE,GAAG,CAAA,GAAA,yNAAA,CAAA,kBAAe,AAAD,EAAE;QAC3C,SAAS,6HAAA,CAAA,qBAAkB,CAAC,SAAS;QACrC,KAAK,6HAAA,CAAA,YAAS;QACd,cAAc;QACd,MAAM;YAAC;SAAyB;QAChC,OAAO;YACL,SAAS,CAAC,CAAC;QACb;IACF;IAEA,OAAO;QACL,YAAY,gBAAgB,aAAa;QACzC,YAAY,aAAa,CAAA,GAAA,+JAAA,CAAA,cAAW,AAAD,EAAE,YAAsB,MAAM;IACnE;AACF;GAzBgB;;QACM,8JAAA,CAAA,aAAU;QAEG,8JAAA,CAAA,aAAU;QAQd,yNAAA,CAAA,kBAAe","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/AccountModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useAccount, useDisconnect } from 'wagmi';\n\ninterface AccountModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  address: string;\n  apeBalance: string;\n  bitBalance: string;\n}\n\nconst AccountModal: React.FC<AccountModalProps> = ({\n  isOpen,\n  onClose,\n  address,\n  apeBalance,\n  bitBalance\n}) => {\n  const { disconnect } = useDisconnect();\n\n  if (!isOpen) return null;\n\n  // Format address for display (truncate middle)\n  const displayAddress = `${address.slice(0, 6)}...${address.slice(-4)}`;\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black/70\">\n      <div className=\"bg-royal p-6 max-w-lg w-full mx-4 border-2 border-banana\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"font-press-start text-2xl text-banana\">ACCOUNT</h2>\n          <button \n            onClick={onClose}\n            className=\"text-white hover:text-banana font-press-start text-xl\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Account Info Section */}\n        <div className=\"bg-royal-dark p-4 mb-6\">\n          <h3 className=\"font-press-start text-white mb-4\">\n            YOUR ACCOUNT INFORMATION AND BALANCES\n          </h3>\n\n          {/* Wallet Address */}\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm mb-2\">WALLET ADDRESS</p>\n            <div className=\"flex justify-between items-center bg-royal p-2\">\n              <span className=\"font-press-start text-sm text-white\">{displayAddress}</span>\n              <button \n                className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-4 py-1 font-press-start text-sm transition-colors\"\n                onClick={() => navigator.clipboard.writeText(address)}\n              >\n                COPY\n              </button>\n            </div>\n          </div>\n\n          {/* Balances */}\n          <div className=\"mb-2\">\n            <p className=\"font-press-start text-sm\">APE BALANCE</p>\n            <p className=\"font-press-start text-banana\">{apeBalance} APE</p>\n          </div>\n\n          <div className=\"mb-6\">\n            <p className=\"font-press-start text-sm\">BIT BALANCE</p>\n            <p className=\"font-press-start text-banana\">{bitBalance} BIT</p>\n          </div>\n\n          {/* Bridge Section */}\n          <div className=\"bg-royal p-4\">\n            <p className=\"font-press-start text-sm mb-2\">NEED TO BRIDGE APE TO APECHAIN?</p>\n            <button className=\"w-full bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal py-2 font-press-start flex justify-center items-center transition-colors\">\n              BRIDGE APE <span className=\"ml-2\">→</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Footer Buttons */}\n        <div className=\"flex justify-between\">\n          <button \n            onClick={onClose}\n            className=\"bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal px-6 py-2 font-press-start transition-colors\"\n          >\n            CLOSE\n          </button>\n          <button \n            onClick={() => {\n              disconnect();\n              onClose();\n            }}\n            className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 font-press-start transition-colors\"\n          >\n            DISCONNECT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountModal;\n"],"names":[],"mappings":";;;;AAGA;;;AAHA;;AAaA,MAAM,eAA4C,CAAC,EACjD,MAAM,EACN,OAAO,EACP,OAAO,EACP,UAAU,EACV,UAAU,EACX;;IACC,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,gBAAa,AAAD;IAEnC,IAAI,CAAC,QAAQ,OAAO;IAEpB,+CAA+C;IAC/C,MAAM,iBAAiB,GAAG,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,IAAI;IAEtE,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAMH,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAKjD,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAuC;;;;;;sDACvD,6LAAC;4CACC,WAAU;4CACV,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;sDAC9C;;;;;;;;;;;;;;;;;;sCAOL,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,6LAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAG1D,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAA2B;;;;;;8CACxC,6LAAC;oCAAE,WAAU;;wCAAgC;wCAAW;;;;;;;;;;;;;sCAI1D,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAAgC;;;;;;8CAC7C,6LAAC;oCAAO,WAAU;;wCAAqK;sDAC1K,6LAAC;4CAAK,WAAU;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;8BAMxC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS;gCACP;gCACA;4BACF;4BACA,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;GAzFM;;QAOmB,iKAAA,CAAA,gBAAa;;;KAPhC;uCA2FS","debugId":null}},
    {"offset": {"line": 690, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/components/ConnectWalletButton.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useWeb3Modal } from '@web3modal/wagmi/react';\nimport { useAccount } from 'wagmi';\nimport { useRouter } from 'next/navigation';\nimport AccountModal from './AccountModal';\nimport { useTokenBalance } from '@/hooks/useTokenBalance';\n\ninterface ConnectWalletButtonProps {\n  className?: string;\n}\n\nconst ConnectWalletButton: React.FC<ConnectWalletButtonProps> = ({ className }) => {\n  const { open } = useWeb3Modal();\n  const { isConnected, address } = useAccount();\n  const router = useRouter();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { apeBalance, bitBalance } = useTokenBalance();\n\n  // Handle routing when wallet is connected\n  useEffect(() => {\n    if (isConnected && address) {\n      router.push(`/room/${address}`);\n    }\n  }, [isConnected, address, router]);\n\n  const handleClick = async () => {\n    if (isConnected) {\n      setIsModalOpen(true);\n    } else {\n      try {\n        await open();\n      } catch (error) {\n        console.error('Failed to connect wallet:', error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <button \n        onClick={handleClick} \n        className={`bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors font-press-start ${className}`}\n      >\n        {isConnected ? 'PROFILE' : 'CONNECT WALLET'}\n      </button>\n\n      {isConnected && address && (\n        <AccountModal\n          isOpen={isModalOpen}\n          onClose={() => setIsModalOpen(false)}\n          address={address}\n          apeBalance={apeBalance}\n          bitBalance={bitBalance}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ConnectWalletButton;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AAaA,MAAM,sBAA0D,CAAC,EAAE,SAAS,EAAE;;IAC5E,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,2LAAA,CAAA,eAAY,AAAD;IAC5B,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,aAAU,AAAD;IAC1C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEjD,0CAA0C;IAC1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,IAAI,eAAe,SAAS;gBAC1B,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,SAAS;YAChC;QACF;wCAAG;QAAC;QAAa;QAAS;KAAO;IAEjC,MAAM,cAAc;QAClB,IAAI,aAAa;YACf,eAAe;QACjB,OAAO;YACL,IAAI;gBACF,MAAM;YACR,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;YAC7C;QACF;IACF;IAEA,qBACE;;0BACE,6LAAC;gBACC,SAAS;gBACT,WAAW,CAAC,sHAAsH,EAAE,WAAW;0BAE9I,cAAc,YAAY;;;;;;YAG5B,eAAe,yBACd,6LAAC,qIAAA,CAAA,UAAY;gBACX,QAAQ;gBACR,SAAS,IAAM,eAAe;gBAC9B,SAAS;gBACT,YAAY;gBACZ,YAAY;;;;;;;;AAKtB;GA9CM;;QACa,2LAAA,CAAA,eAAY;QACI,8JAAA,CAAA,aAAU;QAC5B,qIAAA,CAAA,YAAS;QAEW,kIAAA,CAAA,kBAAe;;;KAL9C;uCAgDS","debugId":null}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":["file:///Users/alexalaniz/Downloads/bitape-ui/src/app/room/%5Baddress%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useParams, useRouter } from 'next/navigation';\nimport { useAccount } from 'wagmi';\nimport { useEffect } from 'react';\nimport { useGameState } from '@/hooks/useGameState';\nimport { useTokenBalance } from '@/hooks/useTokenBalance';\nimport ConnectWalletButton from '@/components/ConnectWalletButton';\n\nexport default function RoomPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { address, isConnected } = useAccount();\n  const gameState = useGameState();\n  const { apeBalance, bitBalance } = useTokenBalance();\n\n  // Redirect if not connected or trying to access someone else's room\n  useEffect(() => {\n    if (!isConnected) {\n      router.push('/');\n    } else if (address && params?.address && \n      (typeof params.address === 'string') && \n      address.toLowerCase() !== params.address.toLowerCase()) {\n      router.push(`/room/${address}`);\n    }\n  }, [isConnected, address, params?.address, router]);\n\n  if (!isConnected || !address) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      {/* Header */}\n      <header className=\"flex justify-between items-center px-6 py-4\">\n        <div className=\"flex items-center gap-8\">\n          <div className=\"flex items-center\">\n            <Image\n              src=\"/bitape-logo.svg\"\n              alt=\"BitApe Logo\"\n              width={32}\n              height={32}\n              className=\"mr-2 pixel-art\"\n            />\n            <span className=\"font-press-start text-banana text-xl\">bitape</span>\n          </div>\n          <nav className=\"flex gap-8\">\n            <Link href=\"/about\" className=\"font-press-start text-white hover:text-banana\">\n              ABOUT\n            </Link>\n            <Link href=\"/trade\" className=\"font-press-start text-white hover:text-banana\">\n              TRADE $BIT\n            </Link>\n            <Link href=\"/leaderboard\" className=\"font-press-start text-[#4A5568] hover:text-banana\">\n              LEADERBOARD\n            </Link>\n          </nav>\n        </div>\n        <ConnectWalletButton className=\"px-6 py-2 font-press-start\" />\n      </header>\n\n      {/* Resources Section */}\n      <div className=\"p-6\">\n        <h2 className=\"font-press-start text-banana mb-4\">RESOURCES</h2>\n        <div className=\"space-y-2 text-white font-press-start\">\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-banana\">💎</span>\n            <span>{apeBalance} APE</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-banana\">🪙</span>\n            <span>{bitBalance} BIT</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-banana\">🏠</span>\n            <span>0 SPACES LEFT</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-banana\">⚡</span>\n            <span>0 GIGAWATTS AVAILABLE</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <main className=\"flex-grow flex flex-col items-center justify-center p-4 relative\">\n        {/* Grid Background */}\n        <div className=\"absolute inset-0 bg-royal\"\n          style={{\n            backgroundImage: `\n              linear-gradient(to right, rgba(255,255,255,0.05) 1px, transparent 1px),\n              linear-gradient(to bottom, rgba(255,255,255,0.05) 1px, transparent 1px)\n            `,\n            backgroundSize: '24px 24px',\n            imageRendering: 'pixelated'\n          }}\n        />\n\n        <div className=\"relative z-10 max-w-4xl mx-auto text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-press-start mb-4 text-banana pixel-text\">\n            MINING FACILITY: {address.slice(0, 6)}...{address.slice(-4)}\n          </h1>\n          \n          <p className=\"text-2xl md:text-3xl font-press-start mb-8 text-banana pixel-text\">\n            MINING STATS\n          </p>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-12\">\n            <div className=\"bg-royal-blue p-6 rounded pixel-border\">\n              <div className=\"space-y-4 text-white font-press-start\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-banana pixel-art\">⚡</span>\n                  <span>{gameState.hashRate} GH/s</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-banana pixel-art\">📈</span>\n                  <span>{gameState.miningRate} BIT/day</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-royal-blue p-6 rounded pixel-border\">\n              <div className=\"space-y-4 text-white font-press-start\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-banana pixel-art\">🔥</span>\n                  <span>{gameState.networkHashRatePercentage}% Network</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-banana pixel-art\">⛏️</span>\n                  <span>{gameState.minedBit} BIT Mined</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mb-12\">\n            <div className=\"relative w-[200px] h-[200px] mx-auto border-2 border-banana pixel-border\">\n              <Image\n                src=\"/globe.svg\"\n                alt=\"Globe Animation\"\n                fill\n                priority\n                className=\"object-contain pixel-art\"\n              />\n            </div>\n          </div>\n\n          <div className=\"w-full max-w-md mx-auto space-y-4\">\n            {!gameState.hasFacility ? (\n              <button\n                onClick={() => gameState.purchaseFacility()}\n                disabled={gameState.isPurchasingFacility}\n                className=\"w-full font-press-start py-4 px-8 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors pixel-button\"\n              >\n                {gameState.isPurchasingFacility ? 'PURCHASING...' : 'PURCHASE FACILITY (10 APE)'}\n              </button>\n            ) : (\n              <>\n                <button\n                  onClick={() => gameState.claimReward()}\n                  disabled={gameState.isClaimingReward}\n                  className=\"w-full font-press-start py-4 px-8 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors pixel-button\"\n                >\n                  {gameState.isClaimingReward ? 'CLAIMING...' : 'CLAIM MINING REWARDS'}\n                </button>\n                <button\n                  onClick={() => gameState.upgradeFacility()}\n                  disabled={gameState.isUpgradingFacility}\n                  className=\"w-full font-press-start py-4 px-8 bg-transparent border-2 border-banana text-banana hover:bg-banana hover:text-royal transition-colors pixel-button\"\n                >\n                  {gameState.isUpgradingFacility ? 'UPGRADING...' : 'UPGRADE FACILITY'}\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}